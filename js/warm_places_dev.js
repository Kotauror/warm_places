if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareTestMethods = function() {
  if (!goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareTestMethods must be called from " + "within a goog.module");
  }
  goog.moduleLoaderState_.declareTestMethods = true;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !goog.global.atob && goog.global.document && goog.global.document.all;
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareTestMethods:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
      if (goog.moduleLoaderState_.declareTestMethods) {
        for (var entry in exports) {
          if (entry.indexOf("test", 0) === 0 || entry == "tearDown" || entry == "setUp" || entry == "setUpPage" || entry == "tearDownPage") {
            goog.global[entry] = exports[entry];
          }
        }
      }
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function(source) {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    var loadingModule = false;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          loadingModule = true;
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3308";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__7837__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__7836 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__7836) : cljs.core.into_array.call(null, G__7836);
      }());
    };
    var G__7837 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__7838__i = 0, G__7838__a = new Array(arguments.length - 0);
        while (G__7838__i < G__7838__a.length) {
          G__7838__a[G__7838__i] = arguments[G__7838__i + 0];
          ++G__7838__i;
        }
        args = new cljs.core.IndexedSeq(G__7838__a, 0);
      }
      return G__7837__delegate.call(this, args);
    };
    G__7837.cljs$lang$maxFixedArity = 0;
    G__7837.cljs$lang$applyTo = function(arglist__7839) {
      var args = cljs.core.seq(arglist__7839);
      return G__7837__delegate(args);
    };
    G__7837.cljs$core$IFn$_invoke$arity$variadic = G__7837__delegate;
    return G__7837;
  }();
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  var G__7841 = x;
  return goog.isString(G__7841);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__7843 = x__$1;
    return goog.typeOf(G__7843);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4295__auto__ = ty;
    if (cljs.core.truth_(and__4295__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4295__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__7845 = obj;
    return goog.typeOf(G__7845);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4423__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4423__auto__)) {
    var s = temp__4423__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__7847 = Symbol;
  return goog.typeOf(G__7847);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function cljs$core$make_array() {
  var G__7849 = arguments.length;
  switch(G__7849) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5192__auto___7851 = len;
  var i_7852 = 0;
  while (true) {
    if (i_7852 < n__5192__auto___7851) {
      new_arr[i_7852] = arr[i_7852];
      var G__7853 = i_7852 + 1;
      i_7852 = G__7853;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__7854 = i + 1;
      i = G__7854;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget() {
  var G__7859 = arguments.length;
  switch(G__7859) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__7860 = cljs.core.aget;
  var G__7861 = array[i];
  var G__7862 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__7860, G__7861, G__7862) : cljs.core.apply.call(null, G__7860, G__7861, G__7862);
};
cljs.core.aget.cljs$lang$applyTo = function(seq7855) {
  var G__7856 = cljs.core.first(seq7855);
  var seq7855__$1 = cljs.core.next(seq7855);
  var G__7857 = cljs.core.first(seq7855__$1);
  var seq7855__$2 = cljs.core.next(seq7855__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__7856, G__7857, seq7855__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset() {
  var G__7869 = arguments.length;
  switch(G__7869) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__7870 = cljs.core.aset;
  var G__7871 = array[idx];
  var G__7872 = idx2;
  var G__7873 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__7870, G__7871, G__7872, G__7873) : cljs.core.apply.call(null, G__7870, G__7871, G__7872, G__7873);
};
cljs.core.aset.cljs$lang$applyTo = function(seq7864) {
  var G__7865 = cljs.core.first(seq7864);
  var seq7864__$1 = cljs.core.next(seq7864);
  var G__7866 = cljs.core.first(seq7864__$1);
  var seq7864__$2 = cljs.core.next(seq7864__$1);
  var G__7867 = cljs.core.first(seq7864__$2);
  var seq7864__$3 = cljs.core.next(seq7864__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__7865, G__7866, G__7867, seq7864__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array() {
  var G__7876 = arguments.length;
  switch(G__7876) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__7877 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__7878 = [];
  var G__7879 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7877, G__7878, G__7879) : cljs.core.reduce.call(null, G__7877, G__7878, G__7879);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke() {
  var argseq__5347__auto__ = 2 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5347__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq7881) {
  var G__7882 = cljs.core.first(seq7881);
  var seq7881__$1 = cljs.core.next(seq7881);
  var G__7883 = cljs.core.first(seq7881__$1);
  var seq7881__$2 = cljs.core.next(seq7881__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__7882, G__7883, seq7881__$2);
};
cljs.core.Fn = function() {
  var obj7885 = {};
  return obj7885;
}();
cljs.core.IFn = function() {
  var obj7887 = {};
  return obj7887;
}();
cljs.core._invoke = function cljs$core$_invoke() {
  var G__7889 = arguments.length;
  switch(G__7889) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7891 = x__4943__auto__;
        return goog.typeOf(G__7891);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7893 = x__4943__auto__;
        return goog.typeOf(G__7893);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7895 = x__4943__auto__;
        return goog.typeOf(G__7895);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$4;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7897 = x__4943__auto__;
        return goog.typeOf(G__7897);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$5;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7899 = x__4943__auto__;
        return goog.typeOf(G__7899);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$6;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7901 = x__4943__auto__;
        return goog.typeOf(G__7901);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$7;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7903 = x__4943__auto__;
        return goog.typeOf(G__7903);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$8;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7905 = x__4943__auto__;
        return goog.typeOf(G__7905);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$9;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7907 = x__4943__auto__;
        return goog.typeOf(G__7907);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$10;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7909 = x__4943__auto__;
        return goog.typeOf(G__7909);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$11;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7911 = x__4943__auto__;
        return goog.typeOf(G__7911);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$12;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7913 = x__4943__auto__;
        return goog.typeOf(G__7913);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$13;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7915 = x__4943__auto__;
        return goog.typeOf(G__7915);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$14;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7917 = x__4943__auto__;
        return goog.typeOf(G__7917);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$15;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7919 = x__4943__auto__;
        return goog.typeOf(G__7919);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$16;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7921 = x__4943__auto__;
        return goog.typeOf(G__7921);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$17;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7923 = x__4943__auto__;
        return goog.typeOf(G__7923);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$18;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7925 = x__4943__auto__;
        return goog.typeOf(G__7925);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$19;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7927 = x__4943__auto__;
        return goog.typeOf(G__7927);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$20;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7929 = x__4943__auto__;
        return goog.typeOf(G__7929);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$21;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7931 = x__4943__auto__;
        return goog.typeOf(G__7931);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$22;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._invoke[function() {
        var G__7933 = x__4943__auto__;
        return goog.typeOf(G__7933);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._invoke["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
  var obj7936 = {};
  return obj7936;
}();
cljs.core._clone = function cljs$core$_clone(value) {
  if (function() {
    var and__4295__auto__ = value;
    if (and__4295__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4943__auto__ = value == null ? null : value;
    return function() {
      var or__4307__auto__ = cljs.core._clone[function() {
        var G__7940 = x__4943__auto__;
        return goog.typeOf(G__7940);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._clone["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj7942 = {};
  return obj7942;
}();
cljs.core._count = function cljs$core$_count(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._count[function() {
        var G__7946 = x__4943__auto__;
        return goog.typeOf(G__7946);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._count["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj7948 = {};
  return obj7948;
}();
cljs.core._empty = function cljs$core$_empty(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._empty[function() {
        var G__7952 = x__4943__auto__;
        return goog.typeOf(G__7952);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._empty["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj7954 = {};
  return obj7954;
}();
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._conj[function() {
        var G__7958 = x__4943__auto__;
        return goog.typeOf(G__7958);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._conj["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj7960 = {};
  return obj7960;
}();
cljs.core._nth = function cljs$core$_nth() {
  var G__7962 = arguments.length;
  switch(G__7962) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IIndexed$_nth$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._nth[function() {
        var G__7964 = x__4943__auto__;
        return goog.typeOf(G__7964);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._nth["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIndexed.-nth", coll);
        }
      }
    }().call(null, coll, n);
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IIndexed$_nth$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._nth[function() {
        var G__7966 = x__4943__auto__;
        return goog.typeOf(G__7966);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._nth["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIndexed.-nth", coll);
        }
      }
    }().call(null, coll, n, not_found);
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
  var obj7969 = {};
  return obj7969;
}();
cljs.core.ISeq = function() {
  var obj7971 = {};
  return obj7971;
}();
cljs.core._first = function cljs$core$_first(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._first[function() {
        var G__7975 = x__4943__auto__;
        return goog.typeOf(G__7975);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._first["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._rest[function() {
        var G__7979 = x__4943__auto__;
        return goog.typeOf(G__7979);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._rest["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj7981 = {};
  return obj7981;
}();
cljs.core._next = function cljs$core$_next(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._next[function() {
        var G__7985 = x__4943__auto__;
        return goog.typeOf(G__7985);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._next["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj7987 = {};
  return obj7987;
}();
cljs.core._lookup = function cljs$core$_lookup() {
  var G__7989 = arguments.length;
  switch(G__7989) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (function() {
    var and__4295__auto__ = o;
    if (and__4295__auto__) {
      return o.cljs$core$ILookup$_lookup$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__4943__auto__ = o == null ? null : o;
    return function() {
      var or__4307__auto__ = cljs.core._lookup[function() {
        var G__7991 = x__4943__auto__;
        return goog.typeOf(G__7991);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._lookup["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ILookup.-lookup", o);
        }
      }
    }().call(null, o, k);
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (function() {
    var and__4295__auto__ = o;
    if (and__4295__auto__) {
      return o.cljs$core$ILookup$_lookup$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__4943__auto__ = o == null ? null : o;
    return function() {
      var or__4307__auto__ = cljs.core._lookup[function() {
        var G__7993 = x__4943__auto__;
        return goog.typeOf(G__7993);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._lookup["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ILookup.-lookup", o);
        }
      }
    }().call(null, o, k, not_found);
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
  var obj7996 = {};
  return obj7996;
}();
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__8000 = x__4943__auto__;
        return goog.typeOf(G__8000);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._assoc[function() {
        var G__8004 = x__4943__auto__;
        return goog.typeOf(G__8004);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._assoc["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj8006 = {};
  return obj8006;
}();
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._dissoc[function() {
        var G__8010 = x__4943__auto__;
        return goog.typeOf(G__8010);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._dissoc["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj8012 = {};
  return obj8012;
}();
cljs.core._key = function cljs$core$_key(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._key[function() {
        var G__8016 = x__4943__auto__;
        return goog.typeOf(G__8016);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._key["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._val[function() {
        var G__8020 = x__4943__auto__;
        return goog.typeOf(G__8020);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._val["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj8022 = {};
  return obj8022;
}();
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._disjoin[function() {
        var G__8026 = x__4943__auto__;
        return goog.typeOf(G__8026);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._disjoin["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj8028 = {};
  return obj8028;
}();
cljs.core._peek = function cljs$core$_peek(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._peek[function() {
        var G__8032 = x__4943__auto__;
        return goog.typeOf(G__8032);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._peek["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._pop[function() {
        var G__8036 = x__4943__auto__;
        return goog.typeOf(G__8036);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._pop["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj8038 = {};
  return obj8038;
}();
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._assoc_n[function() {
        var G__8042 = x__4943__auto__;
        return goog.typeOf(G__8042);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._assoc_n["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj8044 = {};
  return obj8044;
}();
cljs.core._deref = function cljs$core$_deref(o) {
  if (function() {
    var and__4295__auto__ = o;
    if (and__4295__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4943__auto__ = o == null ? null : o;
    return function() {
      var or__4307__auto__ = cljs.core._deref[function() {
        var G__8048 = x__4943__auto__;
        return goog.typeOf(G__8048);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._deref["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj8050 = {};
  return obj8050;
}();
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__4295__auto__ = o;
    if (and__4295__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4943__auto__ = o == null ? null : o;
    return function() {
      var or__4307__auto__ = cljs.core._deref_with_timeout[function() {
        var G__8054 = x__4943__auto__;
        return goog.typeOf(G__8054);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj8056 = {};
  return obj8056;
}();
cljs.core._meta = function cljs$core$_meta(o) {
  if (function() {
    var and__4295__auto__ = o;
    if (and__4295__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4943__auto__ = o == null ? null : o;
    return function() {
      var or__4307__auto__ = cljs.core._meta[function() {
        var G__8060 = x__4943__auto__;
        return goog.typeOf(G__8060);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._meta["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj8062 = {};
  return obj8062;
}();
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (function() {
    var and__4295__auto__ = o;
    if (and__4295__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4943__auto__ = o == null ? null : o;
    return function() {
      var or__4307__auto__ = cljs.core._with_meta[function() {
        var G__8066 = x__4943__auto__;
        return goog.typeOf(G__8066);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._with_meta["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj8068 = {};
  return obj8068;
}();
cljs.core._reduce = function cljs$core$_reduce() {
  var G__8070 = arguments.length;
  switch(G__8070) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IReduce$_reduce$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._reduce[function() {
        var G__8072 = x__4943__auto__;
        return goog.typeOf(G__8072);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._reduce["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReduce.-reduce", coll);
        }
      }
    }().call(null, coll, f);
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IReduce$_reduce$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._reduce[function() {
        var G__8074 = x__4943__auto__;
        return goog.typeOf(G__8074);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._reduce["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReduce.-reduce", coll);
        }
      }
    }().call(null, coll, f, start);
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
  var obj8077 = {};
  return obj8077;
}();
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._kv_reduce[function() {
        var G__8081 = x__4943__auto__;
        return goog.typeOf(G__8081);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj8083 = {};
  return obj8083;
}();
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (function() {
    var and__4295__auto__ = o;
    if (and__4295__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4943__auto__ = o == null ? null : o;
    return function() {
      var or__4307__auto__ = cljs.core._equiv[function() {
        var G__8087 = x__4943__auto__;
        return goog.typeOf(G__8087);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._equiv["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj8089 = {};
  return obj8089;
}();
cljs.core._hash = function cljs$core$_hash(o) {
  if (function() {
    var and__4295__auto__ = o;
    if (and__4295__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4943__auto__ = o == null ? null : o;
    return function() {
      var or__4307__auto__ = cljs.core._hash[function() {
        var G__8093 = x__4943__auto__;
        return goog.typeOf(G__8093);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._hash["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj8095 = {};
  return obj8095;
}();
cljs.core._seq = function cljs$core$_seq(o) {
  if (function() {
    var and__4295__auto__ = o;
    if (and__4295__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4943__auto__ = o == null ? null : o;
    return function() {
      var or__4307__auto__ = cljs.core._seq[function() {
        var G__8099 = x__4943__auto__;
        return goog.typeOf(G__8099);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._seq["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj8101 = {};
  return obj8101;
}();
cljs.core.IList = function() {
  var obj8103 = {};
  return obj8103;
}();
cljs.core.IRecord = function() {
  var obj8105 = {};
  return obj8105;
}();
cljs.core.IReversible = function() {
  var obj8107 = {};
  return obj8107;
}();
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._rseq[function() {
        var G__8111 = x__4943__auto__;
        return goog.typeOf(G__8111);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._rseq["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj8113 = {};
  return obj8113;
}();
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._sorted_seq[function() {
        var G__8117 = x__4943__auto__;
        return goog.typeOf(G__8117);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._sorted_seq_from[function() {
        var G__8121 = x__4943__auto__;
        return goog.typeOf(G__8121);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._entry_key[function() {
        var G__8125 = x__4943__auto__;
        return goog.typeOf(G__8125);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._entry_key["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._comparator[function() {
        var G__8129 = x__4943__auto__;
        return goog.typeOf(G__8129);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._comparator["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj8131 = {};
  return obj8131;
}();
cljs.core._write = function cljs$core$_write(writer, s) {
  if (function() {
    var and__4295__auto__ = writer;
    if (and__4295__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4943__auto__ = writer == null ? null : writer;
    return function() {
      var or__4307__auto__ = cljs.core._write[function() {
        var G__8135 = x__4943__auto__;
        return goog.typeOf(G__8135);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._write["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (function() {
    var and__4295__auto__ = writer;
    if (and__4295__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4943__auto__ = writer == null ? null : writer;
    return function() {
      var or__4307__auto__ = cljs.core._flush[function() {
        var G__8139 = x__4943__auto__;
        return goog.typeOf(G__8139);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._flush["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj8141 = {};
  return obj8141;
}();
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (function() {
    var and__4295__auto__ = o;
    if (and__4295__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4943__auto__ = o == null ? null : o;
    return function() {
      var or__4307__auto__ = cljs.core._pr_writer[function() {
        var G__8145 = x__4943__auto__;
        return goog.typeOf(G__8145);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._pr_writer["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj8147 = {};
  return obj8147;
}();
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (function() {
    var and__4295__auto__ = d;
    if (and__4295__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4943__auto__ = d == null ? null : d;
    return function() {
      var or__4307__auto__ = cljs.core._realized_QMARK_[function() {
        var G__8151 = x__4943__auto__;
        return goog.typeOf(G__8151);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj8153 = {};
  return obj8153;
}();
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._notify_watches[function() {
        var G__8157 = x__4943__auto__;
        return goog.typeOf(G__8157);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._notify_watches["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._add_watch[function() {
        var G__8161 = x__4943__auto__;
        return goog.typeOf(G__8161);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._add_watch["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = cljs.core._remove_watch[function() {
        var G__8165 = x__4943__auto__;
        return goog.typeOf(G__8165);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._remove_watch["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj8167 = {};
  return obj8167;
}();
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._as_transient[function() {
        var G__8171 = x__4943__auto__;
        return goog.typeOf(G__8171);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._as_transient["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj8173 = {};
  return obj8173;
}();
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (function() {
    var and__4295__auto__ = tcoll;
    if (and__4295__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4943__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4307__auto__ = cljs.core._conj_BANG_[function() {
        var G__8177 = x__4943__auto__;
        return goog.typeOf(G__8177);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (function() {
    var and__4295__auto__ = tcoll;
    if (and__4295__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4943__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4307__auto__ = cljs.core._persistent_BANG_[function() {
        var G__8181 = x__4943__auto__;
        return goog.typeOf(G__8181);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj8183 = {};
  return obj8183;
}();
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__4295__auto__ = tcoll;
    if (and__4295__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4943__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4307__auto__ = cljs.core._assoc_BANG_[function() {
        var G__8187 = x__4943__auto__;
        return goog.typeOf(G__8187);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj8189 = {};
  return obj8189;
}();
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__4295__auto__ = tcoll;
    if (and__4295__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4943__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4307__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__8193 = x__4943__auto__;
        return goog.typeOf(G__8193);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj8195 = {};
  return obj8195;
}();
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__4295__auto__ = tcoll;
    if (and__4295__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4943__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4307__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__8199 = x__4943__auto__;
        return goog.typeOf(G__8199);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (function() {
    var and__4295__auto__ = tcoll;
    if (and__4295__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4943__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4307__auto__ = cljs.core._pop_BANG_[function() {
        var G__8203 = x__4943__auto__;
        return goog.typeOf(G__8203);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj8205 = {};
  return obj8205;
}();
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__4295__auto__ = tcoll;
    if (and__4295__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4943__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4307__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__8209 = x__4943__auto__;
        return goog.typeOf(G__8209);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj8211 = {};
  return obj8211;
}();
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (function() {
    var and__4295__auto__ = x;
    if (and__4295__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4943__auto__ = x == null ? null : x;
    return function() {
      var or__4307__auto__ = cljs.core._compare[function() {
        var G__8215 = x__4943__auto__;
        return goog.typeOf(G__8215);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._compare["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj8217 = {};
  return obj8217;
}();
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._drop_first[function() {
        var G__8221 = x__4943__auto__;
        return goog.typeOf(G__8221);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._drop_first["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj8223 = {};
  return obj8223;
}();
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._chunked_first[function() {
        var G__8227 = x__4943__auto__;
        return goog.typeOf(G__8227);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._chunked_first["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._chunked_rest[function() {
        var G__8231 = x__4943__auto__;
        return goog.typeOf(G__8231);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj8233 = {};
  return obj8233;
}();
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._chunked_next[function() {
        var G__8237 = x__4943__auto__;
        return goog.typeOf(G__8237);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._chunked_next["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj8239 = {};
  return obj8239;
}();
cljs.core._name = function cljs$core$_name(x) {
  if (function() {
    var and__4295__auto__ = x;
    if (and__4295__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4943__auto__ = x == null ? null : x;
    return function() {
      var or__4307__auto__ = cljs.core._name[function() {
        var G__8243 = x__4943__auto__;
        return goog.typeOf(G__8243);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._name["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (function() {
    var and__4295__auto__ = x;
    if (and__4295__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4943__auto__ = x == null ? null : x;
    return function() {
      var or__4307__auto__ = cljs.core._namespace[function() {
        var G__8247 = x__4943__auto__;
        return goog.typeOf(G__8247);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._namespace["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj8249 = {};
  return obj8249;
}();
cljs.core.IReset = function() {
  var obj8251 = {};
  return obj8251;
}();
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (function() {
    var and__4295__auto__ = o;
    if (and__4295__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4943__auto__ = o == null ? null : o;
    return function() {
      var or__4307__auto__ = cljs.core._reset_BANG_[function() {
        var G__8255 = x__4943__auto__;
        return goog.typeOf(G__8255);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj8257 = {};
  return obj8257;
}();
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_() {
  var G__8259 = arguments.length;
  switch(G__8259) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (function() {
    var and__4295__auto__ = o;
    if (and__4295__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__4943__auto__ = o == null ? null : o;
    return function() {
      var or__4307__auto__ = cljs.core._swap_BANG_[function() {
        var G__8261 = x__4943__auto__;
        return goog.typeOf(G__8261);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (function() {
    var and__4295__auto__ = o;
    if (and__4295__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__4943__auto__ = o == null ? null : o;
    return function() {
      var or__4307__auto__ = cljs.core._swap_BANG_[function() {
        var G__8263 = x__4943__auto__;
        return goog.typeOf(G__8263);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (function() {
    var and__4295__auto__ = o;
    if (and__4295__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__4943__auto__ = o == null ? null : o;
    return function() {
      var or__4307__auto__ = cljs.core._swap_BANG_[function() {
        var G__8265 = x__4943__auto__;
        return goog.typeOf(G__8265);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a, b);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (function() {
    var and__4295__auto__ = o;
    if (and__4295__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__4943__auto__ = o == null ? null : o;
    return function() {
      var or__4307__auto__ = cljs.core._swap_BANG_[function() {
        var G__8267 = x__4943__auto__;
        return goog.typeOf(G__8267);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a, b, xs);
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
  var obj8270 = {};
  return obj8270;
}();
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (function() {
    var and__4295__auto__ = o;
    if (and__4295__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4943__auto__ = o == null ? null : o;
    return function() {
      var or__4307__auto__ = cljs.core._vreset_BANG_[function() {
        var G__8274 = x__4943__auto__;
        return goog.typeOf(G__8274);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj8276 = {};
  return obj8276;
}();
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (function() {
    var and__4295__auto__ = coll;
    if (and__4295__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4943__auto__ = coll == null ? null : coll;
    return function() {
      var or__4307__auto__ = cljs.core._iterator[function() {
        var G__8280 = x__4943__auto__;
        return goog.typeOf(G__8280);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._iterator["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__8283 = 4294967295;
  var G__8284 = 5;
  return Math.imul(G__8283, G__8284);
}() === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var G__8287 = a;
    var G__8288 = b;
    return Math.imul(G__8287, G__8288);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__8289 = i + 2;
        var G__8290 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__8289;
        h1 = G__8290;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj8292 = {};
  return obj8292;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__8293 = i + 1;
          var G__8294 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__8293;
          hash = G__8294;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj8298 = {};
      return obj8298;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (function() {
    var G__8301 = o;
    if (G__8301) {
      var bit__4974__auto__ = G__8301.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4974__auto__ || G__8301.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__8302 = o;
        return Math.floor(G__8302);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4295__auto__ = cljs.core.not(a.ns);
      if (and__4295__auto__) {
        return b.ns;
      } else {
        return and__4295__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__8309 = a.ns;
            var G__8310 = b.ns;
            return goog.array.defaultCompare(G__8309, G__8310);
          }();
          if (0 === nsc) {
            var G__8311 = a.name;
            var G__8312 = b.name;
            return goog.array.defaultCompare(G__8311, G__8312);
          } else {
            return nsc;
          }
        }
      } else {
        var G__8313 = a.name;
        var G__8314 = b.name;
        return goog.array.defaultCompare(G__8313, G__8314);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__8316 = null;
  var G__8316__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__8316__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__8316 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8316__2.call(this, self__, coll);
      case 3:
        return G__8316__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8316.cljs$core$IFn$_invoke$arity$2 = G__8316__2;
  G__8316.cljs$core$IFn$_invoke$arity$3 = G__8316__3;
  return G__8316;
}();
cljs.core.Symbol.prototype.apply = function(self__, args8315) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8315)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4723__auto__ = self__._hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol() {
  var G__8318 = arguments.length;
  switch(G__8318) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__8365 = null;
  var G__8365__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__8365__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__8365__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__8365__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__8365__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__8365__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__8365__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__8365__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__8365__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__8365__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__8365__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__8365__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__8365__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__8365__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__8365__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__8365__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__8365__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__8365__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__8365__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__8365__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__8365__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__8365__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8321 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__8322 = a;
    var G__8323 = b;
    var G__8324 = c;
    var G__8325 = d;
    var G__8326 = e;
    var G__8327 = f;
    var G__8328 = g;
    var G__8329 = h;
    var G__8330 = i;
    var G__8331 = j;
    var G__8332 = k;
    var G__8333 = l;
    var G__8334 = m;
    var G__8335 = n;
    var G__8336 = o;
    var G__8337 = p;
    var G__8338 = q;
    var G__8339 = r;
    var G__8340 = s;
    var G__8341 = t;
    var G__8342 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8321, G__8322, G__8323, G__8324, G__8325, G__8326, G__8327, G__8328, G__8329, G__8330, G__8331, G__8332, G__8333, G__8334, G__8335, G__8336, G__8337, G__8338, G__8339, G__8340, G__8341, G__8342) : cljs.core.apply.call(null, G__8321, G__8322, G__8323, G__8324, G__8325, G__8326, G__8327, G__8328, G__8329, G__8330, G__8331, G__8332, G__8333, G__8334, G__8335, G__8336, G__8337, G__8338, G__8339, 
    G__8340, G__8341, G__8342);
  };
  G__8365 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__8365__1.call(this, self__);
      case 2:
        return G__8365__2.call(this, self__, a);
      case 3:
        return G__8365__3.call(this, self__, a, b);
      case 4:
        return G__8365__4.call(this, self__, a, b, c);
      case 5:
        return G__8365__5.call(this, self__, a, b, c, d);
      case 6:
        return G__8365__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__8365__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__8365__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__8365__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__8365__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__8365__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__8365__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__8365__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__8365__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__8365__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__8365__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__8365__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__8365__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__8365__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__8365__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__8365__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__8365__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8365.cljs$core$IFn$_invoke$arity$1 = G__8365__1;
  G__8365.cljs$core$IFn$_invoke$arity$2 = G__8365__2;
  G__8365.cljs$core$IFn$_invoke$arity$3 = G__8365__3;
  G__8365.cljs$core$IFn$_invoke$arity$4 = G__8365__4;
  G__8365.cljs$core$IFn$_invoke$arity$5 = G__8365__5;
  G__8365.cljs$core$IFn$_invoke$arity$6 = G__8365__6;
  G__8365.cljs$core$IFn$_invoke$arity$7 = G__8365__7;
  G__8365.cljs$core$IFn$_invoke$arity$8 = G__8365__8;
  G__8365.cljs$core$IFn$_invoke$arity$9 = G__8365__9;
  G__8365.cljs$core$IFn$_invoke$arity$10 = G__8365__10;
  G__8365.cljs$core$IFn$_invoke$arity$11 = G__8365__11;
  G__8365.cljs$core$IFn$_invoke$arity$12 = G__8365__12;
  G__8365.cljs$core$IFn$_invoke$arity$13 = G__8365__13;
  G__8365.cljs$core$IFn$_invoke$arity$14 = G__8365__14;
  G__8365.cljs$core$IFn$_invoke$arity$15 = G__8365__15;
  G__8365.cljs$core$IFn$_invoke$arity$16 = G__8365__16;
  G__8365.cljs$core$IFn$_invoke$arity$17 = G__8365__17;
  G__8365.cljs$core$IFn$_invoke$arity$18 = G__8365__18;
  G__8365.cljs$core$IFn$_invoke$arity$19 = G__8365__19;
  G__8365.cljs$core$IFn$_invoke$arity$20 = G__8365__20;
  G__8365.cljs$core$IFn$_invoke$arity$21 = G__8365__21;
  G__8365.cljs$core$IFn$_invoke$arity$22 = G__8365__22;
  return G__8365;
}();
cljs.core.Var.prototype.apply = function(self__, args8320) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8320)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__8343 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__8344 = a;
  var G__8345 = b;
  var G__8346 = c;
  var G__8347 = d;
  var G__8348 = e;
  var G__8349 = f;
  var G__8350 = g;
  var G__8351 = h;
  var G__8352 = i;
  var G__8353 = j;
  var G__8354 = k;
  var G__8355 = l;
  var G__8356 = m;
  var G__8357 = n;
  var G__8358 = o;
  var G__8359 = p;
  var G__8360 = q;
  var G__8361 = r;
  var G__8362 = s;
  var G__8363 = t;
  var G__8364 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8343, G__8344, G__8345, G__8346, G__8347, G__8348, G__8349, G__8350, G__8351, G__8352, G__8353, G__8354, G__8355, G__8356, G__8357, G__8358, G__8359, G__8360, G__8361, G__8362, G__8363, G__8364) : cljs.core.apply.call(null, G__8343, G__8344, G__8345, G__8346, G__8347, G__8348, G__8349, G__8350, G__8351, G__8352, G__8353, G__8354, G__8355, G__8356, G__8357, G__8358, G__8359, G__8360, G__8361, 
  G__8362, G__8363, G__8364);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  var G__8367 = x;
  if (G__8367) {
    var bit__4981__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__4307__auto__ = bit__4981__auto__;
      if (cljs.core.truth_(or__4307__auto__)) {
        return or__4307__auto__;
      } else {
        return G__8367.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__8367.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__8367);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__8367);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  var G__8369 = value;
  if (G__8369) {
    var bit__4981__auto__ = G__8369.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4981__auto__ || G__8369.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__8369.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__8369);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__8369);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__8371 = coll;
      if (G__8371) {
        var bit__4974__auto__ = G__8371.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4974__auto__ || G__8371.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__8373 = coll;
      if (G__8373) {
        var bit__4974__auto__ = G__8373.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4974__auto__ || G__8373.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__8375 = coll;
      if (G__8375) {
        var bit__4974__auto__ = G__8375.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4974__auto__ || G__8375.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__8377 = coll;
      if (G__8377) {
        var bit__4974__auto__ = G__8377.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4974__auto__ || G__8377.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_() {
  var G__8382 = arguments.length;
  switch(G__8382) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__8384 = y;
        var G__8385 = cljs.core.first(more);
        var G__8386 = cljs.core.next(more);
        x = G__8384;
        y = G__8385;
        more = G__8386;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq8378) {
  var G__8379 = cljs.core.first(seq8378);
  var seq8378__$1 = cljs.core.next(seq8378);
  var G__8380 = cljs.core.first(seq8378__$1);
  var seq8378__$2 = cljs.core.next(seq8378__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__8379, G__8380, seq8378__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__8387 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__8387) : cljs.core.es6_iterator_seq.call(null, G__8387);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null)], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__8388 = n + 1;
      var G__8389 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__8390 = cljs.core.next(coll__$1);
      n = G__8388;
      hash_code = G__8389;
      coll__$1 = G__8390;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__8391 = n + 1;
      var G__8392 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__8393 = cljs.core.next(coll__$1);
      n = G__8391;
      hash_code = G__8392;
      coll__$1 = G__8393;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__8394 = this$__$1.valueOf();
    var G__8395 = other.valueOf();
    return goog.array.defaultCompare(G__8394, G__8395);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__8396 = o;
  return goog.getUid(G__8396);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__8398 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8398) : cljs.core.deref.call(null, G__8398);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce() {
  var G__8400 = arguments.length;
  switch(G__8400) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__8401 = val;
          var G__8402 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8401, G__8402) : f.call(null, G__8401, G__8402);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__8408 = nval;
          var G__8409 = n + 1;
          val = G__8408;
          n = G__8409;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__8403 = val__$1;
        var G__8404 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8403, G__8404) : f.call(null, G__8403, G__8404);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__8410 = nval;
        var G__8411 = n + 1;
        val__$1 = G__8410;
        n = G__8411;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__8405 = val__$1;
        var G__8406 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8405, G__8406) : f.call(null, G__8405, G__8406);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__8412 = nval;
        var G__8413 = n + 1;
        val__$1 = G__8412;
        n = G__8413;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce() {
  var G__8415 = arguments.length;
  switch(G__8415) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__8416 = val;
          var G__8417 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8416, G__8417) : f.call(null, G__8416, G__8417);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__8423 = nval;
          var G__8424 = n + 1;
          val = G__8423;
          n = G__8424;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__8418 = val__$1;
        var G__8419 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8418, G__8419) : f.call(null, G__8418, G__8419);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__8425 = nval;
        var G__8426 = n + 1;
        val__$1 = G__8425;
        n = G__8426;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__8420 = val__$1;
        var G__8421 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8420, G__8421) : f.call(null, G__8420, G__8421);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__8427 = nval;
        var G__8428 = n + 1;
        val__$1 = G__8427;
        n = G__8428;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  var G__8430 = x;
  if (G__8430) {
    var bit__4981__auto__ = G__8430.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4981__auto__ || G__8430.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__8430.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__8430);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__8430);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  var G__8432 = x;
  if (G__8432) {
    var bit__4981__auto__ = G__8432.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4981__auto__ || G__8432.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__8432.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__8432);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__8432);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4619__auto__ = 0;
  var y__4620__auto__ = self__.arr.length - self__.i;
  return x__4619__auto__ > y__4620__auto__ ? x__4619__auto__ : y__4620__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__8433 = coll__$1;
  var G__8434 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__8433, G__8434) : cljs.core.equiv_sequential.call(null, G__8433, G__8434);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__8435 = o;
  var G__8436 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__8435, G__8436) : cljs.core.cons.call(null, G__8435, G__8436);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq() {
  var G__8438 = arguments.length;
  switch(G__8438) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq() {
  var G__8441 = arguments.length;
  switch(G__8441) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__8443 = coll__$1;
  var G__8444 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__8443, G__8444) : cljs.core.equiv_sequential.call(null, G__8443, G__8444);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__8445 = cljs.core.List.EMPTY;
  var G__8446 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__8445, G__8446) : cljs.core.with_meta.call(null, G__8445, G__8446);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__8447 = f;
  var G__8448 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__8447, G__8448) : cljs.core.seq_reduce.call(null, G__8447, G__8448);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__8449 = f;
  var G__8450 = start;
  var G__8451 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__8449, G__8450, G__8451) : cljs.core.seq_reduce.call(null, G__8449, G__8450, G__8451);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__8452 = o;
  var G__8453 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__8452, G__8453) : cljs.core.cons.call(null, G__8452, G__8453);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__8454 = sn;
      s = G__8454;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj() {
  var G__8459 = arguments.length;
  switch(G__8459) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__8461 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__8462 = cljs.core.first(xs);
      var G__8463 = cljs.core.next(xs);
      coll = G__8461;
      x = G__8462;
      xs = G__8463;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq8455) {
  var G__8456 = cljs.core.first(seq8455);
  var seq8455__$1 = cljs.core.next(seq8455);
  var G__8457 = cljs.core.first(seq8455__$1);
  var seq8455__$2 = cljs.core.next(seq8455__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__8456, G__8457, seq8455__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__8464 = cljs.core.next(s);
      var G__8465 = acc + 1;
      s = G__8464;
      acc = G__8465;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__8467 = coll;
      if (G__8467) {
        var bit__4974__auto__ = G__8467.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4974__auto__ || G__8467.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth() {
  var G__8469 = arguments.length;
  switch(G__8469) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__8471 = cljs.core.next(coll);
            var G__8472 = n - 1;
            coll = G__8471;
            n = G__8472;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__8473 = cljs.core.next(coll);
            var G__8474 = n - 1;
            var G__8475 = not_found;
            coll = G__8473;
            n = G__8474;
            not_found = G__8475;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth() {
  var G__8477 = arguments.length;
  switch(G__8477) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (function() {
        var G__8478 = coll;
        if (G__8478) {
          var bit__4974__auto__ = G__8478.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4974__auto__ || G__8478.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (function() {
                var G__8479 = coll;
                if (G__8479) {
                  var bit__4981__auto__ = G__8479.cljs$lang$protocol_mask$partition0$ & 64;
                  if (bit__4981__auto__ || G__8479.cljs$core$ISeq$) {
                    return true;
                  } else {
                    if (!G__8479.cljs$lang$protocol_mask$partition0$) {
                      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__8479);
                    } else {
                      return false;
                    }
                  }
                } else {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__8479);
                }
              }()) {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (function() {
        var G__8480 = coll;
        if (G__8480) {
          var bit__4974__auto__ = G__8480.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4974__auto__ || G__8480.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (function() {
                var G__8481 = coll;
                if (G__8481) {
                  var bit__4981__auto__ = G__8481.cljs$lang$protocol_mask$partition0$ & 64;
                  if (bit__4981__auto__ || G__8481.cljs$core$ISeq$) {
                    return true;
                  } else {
                    if (!G__8481.cljs$lang$protocol_mask$partition0$) {
                      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__8481);
                    } else {
                      return false;
                    }
                  }
                } else {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__8481);
                }
              }()) {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__8483 = n__$1 - 1;
      var G__8484 = cljs.core.rest(xs);
      n__$1 = G__8483;
      xs = G__8484;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get() {
  var G__8486 = arguments.length;
  switch(G__8486) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (function() {
      var G__8487 = o;
      if (G__8487) {
        var bit__4974__auto__ = G__8487.cljs$lang$protocol_mask$partition0$ & 256;
        if (bit__4974__auto__ || G__8487.cljs$core$ILookup$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (function() {
      var G__8488 = o;
      if (G__8488) {
        var bit__4974__auto__ = G__8488.cljs$lang$protocol_mask$partition0$ & 256;
        if (bit__4974__auto__ || G__8488.cljs$core$ILookup$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc() {
  var G__8495 = arguments.length;
  switch(G__8495) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__8497 = ret;
      var G__8498 = cljs.core.first(kvs);
      var G__8499 = cljs.core.second(kvs);
      var G__8500 = cljs.core.nnext(kvs);
      coll = G__8497;
      k = G__8498;
      v = G__8499;
      kvs = G__8500;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq8490) {
  var G__8491 = cljs.core.first(seq8490);
  var seq8490__$1 = cljs.core.next(seq8490);
  var G__8492 = cljs.core.first(seq8490__$1);
  var seq8490__$2 = cljs.core.next(seq8490__$1);
  var G__8493 = cljs.core.first(seq8490__$2);
  var seq8490__$3 = cljs.core.next(seq8490__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__8491, G__8492, G__8493, seq8490__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc() {
  var G__8505 = arguments.length;
  switch(G__8505) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__8507 = ret;
        var G__8508 = cljs.core.first(ks);
        var G__8509 = cljs.core.next(ks);
        coll = G__8507;
        k = G__8508;
        ks = G__8509;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq8501) {
  var G__8502 = cljs.core.first(seq8501);
  var seq8501__$1 = cljs.core.next(seq8501);
  var G__8503 = cljs.core.first(seq8501__$1);
  var seq8501__$2 = cljs.core.next(seq8501__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__8502, G__8503, seq8501__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4307__auto__ = function() {
    var G__8514 = f;
    return goog.isFunction(G__8514);
  }();
  if (cljs.core.truth_(or__4307__auto__)) {
    return or__4307__auto__;
  } else {
    var G__8515 = f;
    if (G__8515) {
      var bit__4981__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4307__auto____$1 = bit__4981__auto__;
        if (cljs.core.truth_(or__4307__auto____$1)) {
          return or__4307__auto____$1;
        } else {
          return G__8515.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__8515.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__8515);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__8515);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__8981 = null;
  var G__8981__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__8981__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8517 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__8517) : self__.afn.call(null, G__8517);
  };
  var G__8981__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8518 = a;
    var G__8519 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__8518, G__8519) : self__.afn.call(null, G__8518, G__8519);
  };
  var G__8981__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8520 = a;
    var G__8521 = b;
    var G__8522 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__8520, G__8521, G__8522) : self__.afn.call(null, G__8520, G__8521, G__8522);
  };
  var G__8981__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8523 = a;
    var G__8524 = b;
    var G__8525 = c;
    var G__8526 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__8523, G__8524, G__8525, G__8526) : self__.afn.call(null, G__8523, G__8524, G__8525, G__8526);
  };
  var G__8981__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8527 = a;
    var G__8528 = b;
    var G__8529 = c;
    var G__8530 = d;
    var G__8531 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__8527, G__8528, G__8529, G__8530, G__8531) : self__.afn.call(null, G__8527, G__8528, G__8529, G__8530, G__8531);
  };
  var G__8981__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8532 = a;
    var G__8533 = b;
    var G__8534 = c;
    var G__8535 = d;
    var G__8536 = e;
    var G__8537 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__8532, G__8533, G__8534, G__8535, G__8536, G__8537) : self__.afn.call(null, G__8532, G__8533, G__8534, G__8535, G__8536, G__8537);
  };
  var G__8981__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8538 = a;
    var G__8539 = b;
    var G__8540 = c;
    var G__8541 = d;
    var G__8542 = e;
    var G__8543 = f;
    var G__8544 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__8538, G__8539, G__8540, G__8541, G__8542, G__8543, G__8544) : self__.afn.call(null, G__8538, G__8539, G__8540, G__8541, G__8542, G__8543, G__8544);
  };
  var G__8981__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8545 = a;
    var G__8546 = b;
    var G__8547 = c;
    var G__8548 = d;
    var G__8549 = e;
    var G__8550 = f;
    var G__8551 = g;
    var G__8552 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__8545, G__8546, G__8547, G__8548, G__8549, G__8550, G__8551, G__8552) : self__.afn.call(null, G__8545, G__8546, G__8547, G__8548, G__8549, G__8550, G__8551, G__8552);
  };
  var G__8981__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8553 = a;
    var G__8554 = b;
    var G__8555 = c;
    var G__8556 = d;
    var G__8557 = e;
    var G__8558 = f;
    var G__8559 = g;
    var G__8560 = h;
    var G__8561 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__8553, G__8554, G__8555, G__8556, G__8557, G__8558, G__8559, G__8560, G__8561) : self__.afn.call(null, G__8553, G__8554, G__8555, G__8556, G__8557, G__8558, G__8559, G__8560, G__8561);
  };
  var G__8981__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8562 = a;
    var G__8563 = b;
    var G__8564 = c;
    var G__8565 = d;
    var G__8566 = e;
    var G__8567 = f;
    var G__8568 = g;
    var G__8569 = h;
    var G__8570 = i;
    var G__8571 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__8562, G__8563, G__8564, G__8565, G__8566, G__8567, G__8568, G__8569, G__8570, G__8571) : self__.afn.call(null, G__8562, G__8563, G__8564, G__8565, G__8566, G__8567, G__8568, G__8569, G__8570, G__8571);
  };
  var G__8981__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8572 = a;
    var G__8573 = b;
    var G__8574 = c;
    var G__8575 = d;
    var G__8576 = e;
    var G__8577 = f;
    var G__8578 = g;
    var G__8579 = h;
    var G__8580 = i;
    var G__8581 = j;
    var G__8582 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__8572, G__8573, G__8574, G__8575, G__8576, G__8577, G__8578, G__8579, G__8580, G__8581, G__8582) : self__.afn.call(null, G__8572, G__8573, G__8574, G__8575, G__8576, G__8577, G__8578, G__8579, G__8580, G__8581, G__8582);
  };
  var G__8981__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8583 = a;
    var G__8584 = b;
    var G__8585 = c;
    var G__8586 = d;
    var G__8587 = e;
    var G__8588 = f;
    var G__8589 = g;
    var G__8590 = h;
    var G__8591 = i;
    var G__8592 = j;
    var G__8593 = k;
    var G__8594 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__8583, G__8584, G__8585, G__8586, G__8587, G__8588, G__8589, G__8590, G__8591, G__8592, G__8593, G__8594) : self__.afn.call(null, G__8583, G__8584, G__8585, G__8586, G__8587, G__8588, G__8589, G__8590, G__8591, G__8592, G__8593, G__8594);
  };
  var G__8981__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8595 = a;
    var G__8596 = b;
    var G__8597 = c;
    var G__8598 = d;
    var G__8599 = e;
    var G__8600 = f;
    var G__8601 = g;
    var G__8602 = h;
    var G__8603 = i;
    var G__8604 = j;
    var G__8605 = k;
    var G__8606 = l;
    var G__8607 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__8595, G__8596, G__8597, G__8598, G__8599, G__8600, G__8601, G__8602, G__8603, G__8604, G__8605, G__8606, G__8607) : self__.afn.call(null, G__8595, G__8596, G__8597, G__8598, G__8599, G__8600, G__8601, G__8602, G__8603, G__8604, G__8605, G__8606, G__8607);
  };
  var G__8981__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8608 = a;
    var G__8609 = b;
    var G__8610 = c;
    var G__8611 = d;
    var G__8612 = e;
    var G__8613 = f;
    var G__8614 = g;
    var G__8615 = h;
    var G__8616 = i;
    var G__8617 = j;
    var G__8618 = k;
    var G__8619 = l;
    var G__8620 = m;
    var G__8621 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__8608, G__8609, G__8610, G__8611, G__8612, G__8613, G__8614, G__8615, G__8616, G__8617, G__8618, G__8619, G__8620, G__8621) : self__.afn.call(null, G__8608, G__8609, G__8610, G__8611, G__8612, G__8613, G__8614, G__8615, G__8616, G__8617, G__8618, G__8619, G__8620, G__8621);
  };
  var G__8981__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8622 = a;
    var G__8623 = b;
    var G__8624 = c;
    var G__8625 = d;
    var G__8626 = e;
    var G__8627 = f;
    var G__8628 = g;
    var G__8629 = h;
    var G__8630 = i;
    var G__8631 = j;
    var G__8632 = k;
    var G__8633 = l;
    var G__8634 = m;
    var G__8635 = n;
    var G__8636 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__8622, G__8623, G__8624, G__8625, G__8626, G__8627, G__8628, G__8629, G__8630, G__8631, G__8632, G__8633, G__8634, G__8635, G__8636) : self__.afn.call(null, G__8622, G__8623, G__8624, G__8625, G__8626, G__8627, G__8628, G__8629, G__8630, G__8631, G__8632, G__8633, G__8634, G__8635, G__8636);
  };
  var G__8981__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8637 = a;
    var G__8638 = b;
    var G__8639 = c;
    var G__8640 = d;
    var G__8641 = e;
    var G__8642 = f;
    var G__8643 = g;
    var G__8644 = h;
    var G__8645 = i;
    var G__8646 = j;
    var G__8647 = k;
    var G__8648 = l;
    var G__8649 = m;
    var G__8650 = n;
    var G__8651 = o;
    var G__8652 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__8637, G__8638, G__8639, G__8640, G__8641, G__8642, G__8643, G__8644, G__8645, G__8646, G__8647, G__8648, G__8649, G__8650, G__8651, G__8652) : self__.afn.call(null, G__8637, G__8638, G__8639, G__8640, G__8641, G__8642, G__8643, G__8644, G__8645, G__8646, G__8647, G__8648, G__8649, G__8650, G__8651, G__8652);
  };
  var G__8981__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8653 = a;
    var G__8654 = b;
    var G__8655 = c;
    var G__8656 = d;
    var G__8657 = e;
    var G__8658 = f;
    var G__8659 = g;
    var G__8660 = h;
    var G__8661 = i;
    var G__8662 = j;
    var G__8663 = k;
    var G__8664 = l;
    var G__8665 = m;
    var G__8666 = n;
    var G__8667 = o;
    var G__8668 = p;
    var G__8669 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__8653, G__8654, G__8655, G__8656, G__8657, G__8658, G__8659, G__8660, G__8661, G__8662, G__8663, G__8664, G__8665, G__8666, G__8667, G__8668, G__8669) : self__.afn.call(null, G__8653, G__8654, G__8655, G__8656, G__8657, G__8658, G__8659, G__8660, G__8661, G__8662, G__8663, G__8664, G__8665, G__8666, G__8667, G__8668, G__8669);
  };
  var G__8981__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8670 = a;
    var G__8671 = b;
    var G__8672 = c;
    var G__8673 = d;
    var G__8674 = e;
    var G__8675 = f;
    var G__8676 = g;
    var G__8677 = h;
    var G__8678 = i;
    var G__8679 = j;
    var G__8680 = k;
    var G__8681 = l;
    var G__8682 = m;
    var G__8683 = n;
    var G__8684 = o;
    var G__8685 = p;
    var G__8686 = q;
    var G__8687 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__8670, G__8671, G__8672, G__8673, G__8674, G__8675, G__8676, G__8677, G__8678, G__8679, G__8680, G__8681, G__8682, G__8683, G__8684, G__8685, G__8686, G__8687) : self__.afn.call(null, G__8670, G__8671, G__8672, G__8673, G__8674, G__8675, G__8676, G__8677, G__8678, G__8679, G__8680, G__8681, G__8682, G__8683, G__8684, G__8685, G__8686, G__8687);
  };
  var G__8981__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8688 = a;
    var G__8689 = b;
    var G__8690 = c;
    var G__8691 = d;
    var G__8692 = e;
    var G__8693 = f;
    var G__8694 = g;
    var G__8695 = h;
    var G__8696 = i;
    var G__8697 = j;
    var G__8698 = k;
    var G__8699 = l;
    var G__8700 = m;
    var G__8701 = n;
    var G__8702 = o;
    var G__8703 = p;
    var G__8704 = q;
    var G__8705 = r;
    var G__8706 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__8688, G__8689, G__8690, G__8691, G__8692, G__8693, G__8694, G__8695, G__8696, G__8697, G__8698, G__8699, G__8700, G__8701, G__8702, G__8703, G__8704, G__8705, G__8706) : self__.afn.call(null, G__8688, G__8689, G__8690, G__8691, G__8692, G__8693, G__8694, G__8695, G__8696, G__8697, G__8698, G__8699, G__8700, G__8701, G__8702, G__8703, G__8704, G__8705, G__8706);
  };
  var G__8981__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8707 = a;
    var G__8708 = b;
    var G__8709 = c;
    var G__8710 = d;
    var G__8711 = e;
    var G__8712 = f;
    var G__8713 = g;
    var G__8714 = h;
    var G__8715 = i;
    var G__8716 = j;
    var G__8717 = k;
    var G__8718 = l;
    var G__8719 = m;
    var G__8720 = n;
    var G__8721 = o;
    var G__8722 = p;
    var G__8723 = q;
    var G__8724 = r;
    var G__8725 = s;
    var G__8726 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__8707, G__8708, G__8709, G__8710, G__8711, G__8712, G__8713, G__8714, G__8715, G__8716, G__8717, G__8718, G__8719, G__8720, G__8721, G__8722, G__8723, G__8724, G__8725, G__8726) : self__.afn.call(null, G__8707, G__8708, G__8709, G__8710, G__8711, G__8712, G__8713, G__8714, G__8715, G__8716, G__8717, G__8718, G__8719, G__8720, G__8721, G__8722, G__8723, G__8724, G__8725, G__8726);
  };
  var G__8981__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8727 = self__.afn;
    var G__8728 = a;
    var G__8729 = b;
    var G__8730 = c;
    var G__8731 = d;
    var G__8732 = e;
    var G__8733 = f;
    var G__8734 = g;
    var G__8735 = h;
    var G__8736 = i;
    var G__8737 = j;
    var G__8738 = k;
    var G__8739 = l;
    var G__8740 = m;
    var G__8741 = n;
    var G__8742 = o;
    var G__8743 = p;
    var G__8744 = q;
    var G__8745 = r;
    var G__8746 = s;
    var G__8747 = t;
    var G__8748 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8727, G__8728, G__8729, G__8730, G__8731, G__8732, G__8733, G__8734, G__8735, G__8736, G__8737, G__8738, G__8739, G__8740, G__8741, G__8742, G__8743, G__8744, G__8745, G__8746, G__8747, G__8748) : cljs.core.apply.call(null, G__8727, G__8728, G__8729, G__8730, G__8731, G__8732, G__8733, G__8734, G__8735, G__8736, G__8737, G__8738, G__8739, G__8740, G__8741, G__8742, G__8743, G__8744, G__8745, 
    G__8746, G__8747, G__8748);
  };
  G__8981 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__8981__1.call(this, self__);
      case 2:
        return G__8981__2.call(this, self__, a);
      case 3:
        return G__8981__3.call(this, self__, a, b);
      case 4:
        return G__8981__4.call(this, self__, a, b, c);
      case 5:
        return G__8981__5.call(this, self__, a, b, c, d);
      case 6:
        return G__8981__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__8981__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__8981__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__8981__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__8981__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__8981__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__8981__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__8981__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__8981__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__8981__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__8981__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__8981__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__8981__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__8981__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__8981__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__8981__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__8981__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8981.cljs$core$IFn$_invoke$arity$1 = G__8981__1;
  G__8981.cljs$core$IFn$_invoke$arity$2 = G__8981__2;
  G__8981.cljs$core$IFn$_invoke$arity$3 = G__8981__3;
  G__8981.cljs$core$IFn$_invoke$arity$4 = G__8981__4;
  G__8981.cljs$core$IFn$_invoke$arity$5 = G__8981__5;
  G__8981.cljs$core$IFn$_invoke$arity$6 = G__8981__6;
  G__8981.cljs$core$IFn$_invoke$arity$7 = G__8981__7;
  G__8981.cljs$core$IFn$_invoke$arity$8 = G__8981__8;
  G__8981.cljs$core$IFn$_invoke$arity$9 = G__8981__9;
  G__8981.cljs$core$IFn$_invoke$arity$10 = G__8981__10;
  G__8981.cljs$core$IFn$_invoke$arity$11 = G__8981__11;
  G__8981.cljs$core$IFn$_invoke$arity$12 = G__8981__12;
  G__8981.cljs$core$IFn$_invoke$arity$13 = G__8981__13;
  G__8981.cljs$core$IFn$_invoke$arity$14 = G__8981__14;
  G__8981.cljs$core$IFn$_invoke$arity$15 = G__8981__15;
  G__8981.cljs$core$IFn$_invoke$arity$16 = G__8981__16;
  G__8981.cljs$core$IFn$_invoke$arity$17 = G__8981__17;
  G__8981.cljs$core$IFn$_invoke$arity$18 = G__8981__18;
  G__8981.cljs$core$IFn$_invoke$arity$19 = G__8981__19;
  G__8981.cljs$core$IFn$_invoke$arity$20 = G__8981__20;
  G__8981.cljs$core$IFn$_invoke$arity$21 = G__8981__21;
  G__8981.cljs$core$IFn$_invoke$arity$22 = G__8981__22;
  return G__8981;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args8516) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8516)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__8749 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__8749) : self__.afn.call(null, G__8749);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__8750 = a;
  var G__8751 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__8750, G__8751) : self__.afn.call(null, G__8750, G__8751);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__8752 = a;
  var G__8753 = b;
  var G__8754 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__8752, G__8753, G__8754) : self__.afn.call(null, G__8752, G__8753, G__8754);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__8755 = a;
  var G__8756 = b;
  var G__8757 = c;
  var G__8758 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__8755, G__8756, G__8757, G__8758) : self__.afn.call(null, G__8755, G__8756, G__8757, G__8758);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__8759 = a;
  var G__8760 = b;
  var G__8761 = c;
  var G__8762 = d;
  var G__8763 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__8759, G__8760, G__8761, G__8762, G__8763) : self__.afn.call(null, G__8759, G__8760, G__8761, G__8762, G__8763);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__8764 = a;
  var G__8765 = b;
  var G__8766 = c;
  var G__8767 = d;
  var G__8768 = e;
  var G__8769 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__8764, G__8765, G__8766, G__8767, G__8768, G__8769) : self__.afn.call(null, G__8764, G__8765, G__8766, G__8767, G__8768, G__8769);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__8770 = a;
  var G__8771 = b;
  var G__8772 = c;
  var G__8773 = d;
  var G__8774 = e;
  var G__8775 = f;
  var G__8776 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__8770, G__8771, G__8772, G__8773, G__8774, G__8775, G__8776) : self__.afn.call(null, G__8770, G__8771, G__8772, G__8773, G__8774, G__8775, G__8776);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__8777 = a;
  var G__8778 = b;
  var G__8779 = c;
  var G__8780 = d;
  var G__8781 = e;
  var G__8782 = f;
  var G__8783 = g;
  var G__8784 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__8777, G__8778, G__8779, G__8780, G__8781, G__8782, G__8783, G__8784) : self__.afn.call(null, G__8777, G__8778, G__8779, G__8780, G__8781, G__8782, G__8783, G__8784);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__8785 = a;
  var G__8786 = b;
  var G__8787 = c;
  var G__8788 = d;
  var G__8789 = e;
  var G__8790 = f;
  var G__8791 = g;
  var G__8792 = h;
  var G__8793 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__8785, G__8786, G__8787, G__8788, G__8789, G__8790, G__8791, G__8792, G__8793) : self__.afn.call(null, G__8785, G__8786, G__8787, G__8788, G__8789, G__8790, G__8791, G__8792, G__8793);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__8794 = a;
  var G__8795 = b;
  var G__8796 = c;
  var G__8797 = d;
  var G__8798 = e;
  var G__8799 = f;
  var G__8800 = g;
  var G__8801 = h;
  var G__8802 = i;
  var G__8803 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__8794, G__8795, G__8796, G__8797, G__8798, G__8799, G__8800, G__8801, G__8802, G__8803) : self__.afn.call(null, G__8794, G__8795, G__8796, G__8797, G__8798, G__8799, G__8800, G__8801, G__8802, G__8803);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__8804 = a;
  var G__8805 = b;
  var G__8806 = c;
  var G__8807 = d;
  var G__8808 = e;
  var G__8809 = f;
  var G__8810 = g;
  var G__8811 = h;
  var G__8812 = i;
  var G__8813 = j;
  var G__8814 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__8804, G__8805, G__8806, G__8807, G__8808, G__8809, G__8810, G__8811, G__8812, G__8813, G__8814) : self__.afn.call(null, G__8804, G__8805, G__8806, G__8807, G__8808, G__8809, G__8810, G__8811, G__8812, G__8813, G__8814);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__8815 = a;
  var G__8816 = b;
  var G__8817 = c;
  var G__8818 = d;
  var G__8819 = e;
  var G__8820 = f;
  var G__8821 = g;
  var G__8822 = h;
  var G__8823 = i;
  var G__8824 = j;
  var G__8825 = k;
  var G__8826 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__8815, G__8816, G__8817, G__8818, G__8819, G__8820, G__8821, G__8822, G__8823, G__8824, G__8825, G__8826) : self__.afn.call(null, G__8815, G__8816, G__8817, G__8818, G__8819, G__8820, G__8821, G__8822, G__8823, G__8824, G__8825, G__8826);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__8827 = a;
  var G__8828 = b;
  var G__8829 = c;
  var G__8830 = d;
  var G__8831 = e;
  var G__8832 = f;
  var G__8833 = g;
  var G__8834 = h;
  var G__8835 = i;
  var G__8836 = j;
  var G__8837 = k;
  var G__8838 = l;
  var G__8839 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__8827, G__8828, G__8829, G__8830, G__8831, G__8832, G__8833, G__8834, G__8835, G__8836, G__8837, G__8838, G__8839) : self__.afn.call(null, G__8827, G__8828, G__8829, G__8830, G__8831, G__8832, G__8833, G__8834, G__8835, G__8836, G__8837, G__8838, G__8839);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__8840 = a;
  var G__8841 = b;
  var G__8842 = c;
  var G__8843 = d;
  var G__8844 = e;
  var G__8845 = f;
  var G__8846 = g;
  var G__8847 = h;
  var G__8848 = i;
  var G__8849 = j;
  var G__8850 = k;
  var G__8851 = l;
  var G__8852 = m;
  var G__8853 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__8840, G__8841, G__8842, G__8843, G__8844, G__8845, G__8846, G__8847, G__8848, G__8849, G__8850, G__8851, G__8852, G__8853) : self__.afn.call(null, G__8840, G__8841, G__8842, G__8843, G__8844, G__8845, G__8846, G__8847, G__8848, G__8849, G__8850, G__8851, G__8852, G__8853);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__8854 = a;
  var G__8855 = b;
  var G__8856 = c;
  var G__8857 = d;
  var G__8858 = e;
  var G__8859 = f;
  var G__8860 = g;
  var G__8861 = h;
  var G__8862 = i;
  var G__8863 = j;
  var G__8864 = k;
  var G__8865 = l;
  var G__8866 = m;
  var G__8867 = n;
  var G__8868 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__8854, G__8855, G__8856, G__8857, G__8858, G__8859, G__8860, G__8861, G__8862, G__8863, G__8864, G__8865, G__8866, G__8867, G__8868) : self__.afn.call(null, G__8854, G__8855, G__8856, G__8857, G__8858, G__8859, G__8860, G__8861, G__8862, G__8863, G__8864, G__8865, G__8866, G__8867, G__8868);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__8869 = a;
  var G__8870 = b;
  var G__8871 = c;
  var G__8872 = d;
  var G__8873 = e;
  var G__8874 = f;
  var G__8875 = g;
  var G__8876 = h;
  var G__8877 = i;
  var G__8878 = j;
  var G__8879 = k;
  var G__8880 = l;
  var G__8881 = m;
  var G__8882 = n;
  var G__8883 = o;
  var G__8884 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__8869, G__8870, G__8871, G__8872, G__8873, G__8874, G__8875, G__8876, G__8877, G__8878, G__8879, G__8880, G__8881, G__8882, G__8883, G__8884) : self__.afn.call(null, G__8869, G__8870, G__8871, G__8872, G__8873, G__8874, G__8875, G__8876, G__8877, G__8878, G__8879, G__8880, G__8881, G__8882, G__8883, G__8884);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__8885 = a;
  var G__8886 = b;
  var G__8887 = c;
  var G__8888 = d;
  var G__8889 = e;
  var G__8890 = f;
  var G__8891 = g;
  var G__8892 = h;
  var G__8893 = i;
  var G__8894 = j;
  var G__8895 = k;
  var G__8896 = l;
  var G__8897 = m;
  var G__8898 = n;
  var G__8899 = o;
  var G__8900 = p;
  var G__8901 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__8885, G__8886, G__8887, G__8888, G__8889, G__8890, G__8891, G__8892, G__8893, G__8894, G__8895, G__8896, G__8897, G__8898, G__8899, G__8900, G__8901) : self__.afn.call(null, G__8885, G__8886, G__8887, G__8888, G__8889, G__8890, G__8891, G__8892, G__8893, G__8894, G__8895, G__8896, G__8897, G__8898, G__8899, G__8900, G__8901);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__8902 = a;
  var G__8903 = b;
  var G__8904 = c;
  var G__8905 = d;
  var G__8906 = e;
  var G__8907 = f;
  var G__8908 = g;
  var G__8909 = h;
  var G__8910 = i;
  var G__8911 = j;
  var G__8912 = k;
  var G__8913 = l;
  var G__8914 = m;
  var G__8915 = n;
  var G__8916 = o;
  var G__8917 = p;
  var G__8918 = q;
  var G__8919 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__8902, G__8903, G__8904, G__8905, G__8906, G__8907, G__8908, G__8909, G__8910, G__8911, G__8912, G__8913, G__8914, G__8915, G__8916, G__8917, G__8918, G__8919) : self__.afn.call(null, G__8902, G__8903, G__8904, G__8905, G__8906, G__8907, G__8908, G__8909, G__8910, G__8911, G__8912, G__8913, G__8914, G__8915, G__8916, G__8917, G__8918, G__8919);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__8920 = a;
  var G__8921 = b;
  var G__8922 = c;
  var G__8923 = d;
  var G__8924 = e;
  var G__8925 = f;
  var G__8926 = g;
  var G__8927 = h;
  var G__8928 = i;
  var G__8929 = j;
  var G__8930 = k;
  var G__8931 = l;
  var G__8932 = m;
  var G__8933 = n;
  var G__8934 = o;
  var G__8935 = p;
  var G__8936 = q;
  var G__8937 = r;
  var G__8938 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__8920, G__8921, G__8922, G__8923, G__8924, G__8925, G__8926, G__8927, G__8928, G__8929, G__8930, G__8931, G__8932, G__8933, G__8934, G__8935, G__8936, G__8937, G__8938) : self__.afn.call(null, G__8920, G__8921, G__8922, G__8923, G__8924, G__8925, G__8926, G__8927, G__8928, G__8929, G__8930, G__8931, G__8932, G__8933, G__8934, G__8935, G__8936, G__8937, G__8938);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__8939 = a;
  var G__8940 = b;
  var G__8941 = c;
  var G__8942 = d;
  var G__8943 = e;
  var G__8944 = f;
  var G__8945 = g;
  var G__8946 = h;
  var G__8947 = i;
  var G__8948 = j;
  var G__8949 = k;
  var G__8950 = l;
  var G__8951 = m;
  var G__8952 = n;
  var G__8953 = o;
  var G__8954 = p;
  var G__8955 = q;
  var G__8956 = r;
  var G__8957 = s;
  var G__8958 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__8939, G__8940, G__8941, G__8942, G__8943, G__8944, G__8945, G__8946, G__8947, G__8948, G__8949, G__8950, G__8951, G__8952, G__8953, G__8954, G__8955, G__8956, G__8957, G__8958) : self__.afn.call(null, G__8939, G__8940, G__8941, G__8942, G__8943, G__8944, G__8945, G__8946, G__8947, G__8948, G__8949, G__8950, G__8951, G__8952, G__8953, G__8954, G__8955, G__8956, G__8957, G__8958);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__8959 = self__.afn;
  var G__8960 = a;
  var G__8961 = b;
  var G__8962 = c;
  var G__8963 = d;
  var G__8964 = e;
  var G__8965 = f;
  var G__8966 = g;
  var G__8967 = h;
  var G__8968 = i;
  var G__8969 = j;
  var G__8970 = k;
  var G__8971 = l;
  var G__8972 = m;
  var G__8973 = n;
  var G__8974 = o;
  var G__8975 = p;
  var G__8976 = q;
  var G__8977 = r;
  var G__8978 = s;
  var G__8979 = t;
  var G__8980 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8959, G__8960, G__8961, G__8962, G__8963, G__8964, G__8965, G__8966, G__8967, G__8968, G__8969, G__8970, G__8971, G__8972, G__8973, G__8974, G__8975, G__8976, G__8977, G__8978, G__8979, G__8980) : cljs.core.apply.call(null, G__8959, G__8960, G__8961, G__8962, G__8963, G__8964, G__8965, G__8966, G__8967, G__8968, G__8969, G__8970, G__8971, G__8972, G__8973, G__8974, G__8975, G__8976, G__8977, 
  G__8978, G__8979, G__8980);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__8985 = o;
    if (G__8985) {
      var bit__4981__auto__ = G__8985.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4981__auto__ || G__8985.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__8985.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__8985);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__8985);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4295__auto__ = !(o == null);
    if (and__4295__auto__) {
      var G__8989 = o;
      if (G__8989) {
        var bit__4981__auto__ = G__8989.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4981__auto__ || G__8989.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__8989.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__8989);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__8989);
      }
    } else {
      return and__4295__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj() {
  var G__8994 = arguments.length;
  switch(G__8994) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__8996 = ret;
        var G__8997 = cljs.core.first(ks);
        var G__8998 = cljs.core.next(ks);
        coll = G__8996;
        k = G__8997;
        ks = G__8998;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq8990) {
  var G__8991 = cljs.core.first(seq8990);
  var seq8990__$1 = cljs.core.next(seq8990);
  var G__8992 = cljs.core.first(seq8990__$1);
  var seq8990__$2 = cljs.core.next(seq8990__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__8991, G__8992, seq8990__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__9000 = x;
    if (G__9000) {
      var bit__4981__auto__ = G__9000.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4981__auto__ || G__9000.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__9000.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__9000);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__9000);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__9002 = x;
    if (G__9002) {
      var bit__4981__auto__ = G__9002.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4981__auto__ || G__9002.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__9002.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__9002);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__9002);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  var G__9004 = x;
  if (G__9004) {
    var bit__4981__auto__ = G__9004.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4981__auto__ || G__9004.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__9004.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__9004);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__9004);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  var G__9006 = x;
  if (G__9006) {
    var bit__4981__auto__ = G__9006.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4981__auto__ || G__9006.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__9006.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__9006);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__9006);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  var G__9008 = x;
  if (G__9008) {
    var bit__4981__auto__ = G__9008.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4981__auto__ || G__9008.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__9008.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__9008);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__9008);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  var G__9010 = x;
  if (G__9010) {
    var bit__4981__auto__ = G__9010.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4981__auto__ || G__9010.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__9010.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__9010);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__9010);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__9012 = x;
    if (G__9012) {
      var bit__4981__auto__ = G__9012.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4981__auto__ || G__9012.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__9012.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__9012);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__9012);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  var G__9014 = x;
  if (G__9014) {
    var bit__4981__auto__ = G__9014.cljs$lang$protocol_mask$partition0$ & 67108864;
    if (bit__4981__auto__ || G__9014.cljs$core$IRecord$) {
      return true;
    } else {
      if (!G__9014.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, G__9014);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, G__9014);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  var G__9016 = x;
  if (G__9016) {
    var bit__4981__auto__ = G__9016.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4981__auto__ || G__9016.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__9016.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__9016);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__9016);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  var G__9018 = x;
  if (G__9018) {
    var bit__4974__auto__ = G__9018.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4974__auto__ || G__9018.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj() {
  var G__9021 = arguments.length;
  switch(G__9021) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5358__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  var obj9023 = {};
  return obj9023;
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var G__9024 = goog.object.create;
  var G__9025 = keyvals;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__9024, G__9025) : cljs.core.apply.call(null, G__9024, G__9025);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq9019) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9019));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__9029_9031 = obj;
  var G__9030_9032 = function(G__9029_9031, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__9029_9031, keys);
  goog.object.forEach(G__9029_9031, G__9030_9032);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__9033 = i__$1 + 1;
      var G__9034 = j__$1 + 1;
      var G__9035 = len__$1 - 1;
      i__$1 = G__9033;
      j__$1 = G__9034;
      len__$1 = G__9035;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__9036 = i__$1 - 1;
      var G__9037 = j__$1 - 1;
      var G__9038 = len__$1 - 1;
      i__$1 = G__9036;
      j__$1 = G__9037;
      len__$1 = G__9038;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj9040 = {};
  return obj9040;
}();
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__9042 = s;
    if (G__9042) {
      var bit__4981__auto__ = G__9042.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4981__auto__ || G__9042.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__9042.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__9042);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__9042);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var G__9044 = s;
  if (G__9044) {
    var bit__4981__auto__ = G__9044.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4981__auto__ || G__9044.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__9044.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__9044);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__9044);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4307__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4307__auto__) {
    return or__4307__auto__;
  } else {
    var G__9048 = f;
    if (G__9048) {
      var bit__4981__auto__ = G__9048.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4981__auto__ || G__9048.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__9048.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__9048);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__9048);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__9061 = n;
    return isNaN(G__9061);
  }()) && !(n === Infinity) && function() {
    var G__9062 = n;
    return parseFloat(G__9062);
  }() === function() {
    var G__9063 = n;
    var G__9064 = 10;
    return parseInt(G__9063, G__9064);
  }();
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_() {
  var G__9069 = arguments.length;
  switch(G__9069) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__9071 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__9072 = etc;
          s = G__9071;
          xs = G__9072;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq9065) {
  var G__9066 = cljs.core.first(seq9065);
  var seq9065__$1 = cljs.core.next(seq9065);
  var G__9067 = cljs.core.first(seq9065__$1);
  var seq9065__$2 = cljs.core.next(seq9065__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__9066, G__9067, seq9065__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            var G__9078 = x;
            var G__9079 = y;
            return goog.array.defaultCompare(G__9078, G__9079);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (function() {
            var G__9080 = x;
            if (G__9080) {
              var bit__4981__auto__ = G__9080.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4981__auto__ || G__9080.cljs$core$IComparable$) {
                return true;
              } else {
                if (!G__9080.cljs$lang$protocol_mask$partition1$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, G__9080);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, G__9080);
            }
          }()) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              var G__9081 = x;
              var G__9082 = y;
              return goog.array.defaultCompare(G__9081, G__9082);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed() {
  var G__9084 = arguments.length;
  switch(G__9084) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__9086 = xs;
      var G__9087 = ys;
      var G__9088 = len;
      var G__9089 = n + 1;
      xs = G__9086;
      ys = G__9087;
      len = G__9088;
      n = G__9089;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__9094 = x;
        var G__9095 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9094, G__9095) : f.call(null, G__9094, G__9095);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(function() {
            var G__9096 = y;
            var G__9097 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9096, G__9097) : f.call(null, G__9096, G__9097);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort() {
  var G__9099 = arguments.length;
  switch(G__9099) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = function() {
      var G__9100 = coll;
      return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__9100) : cljs.core.to_array.call(null, G__9100);
    }();
    var G__9101_9104 = a;
    var G__9102_9105 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__9101_9104, G__9102_9105);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by() {
  var G__9107 = arguments.length;
  switch(G__9107) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, function() {
      var G__9108 = x;
      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__9108) : keyfn.call(null, G__9108);
    }(), function() {
      var G__9109 = y;
      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__9109) : keyfn.call(null, G__9109);
    }());
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce() {
  var G__9112 = arguments.length;
  switch(G__9112) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4423__auto__ = cljs.core.seq(coll);
  if (temp__4423__auto__) {
    var s = temp__4423__auto__;
    var G__9113 = f;
    var G__9114 = cljs.core.first(s);
    var G__9115 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__9113, G__9114, G__9115) : cljs.core.reduce.call(null, G__9113, G__9114, G__9115);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__9116 = val__$1;
        var G__9117 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9116, G__9117) : f.call(null, G__9116, G__9117);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__9119 = nval;
        var G__9120 = cljs.core.next(coll__$1);
        val__$1 = G__9119;
        coll__$1 = G__9120;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = function() {
    var G__9124 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__9124) : cljs.core.to_array.call(null, G__9124);
  }();
  var G__9125_9127 = a;
  goog.array.shuffle(G__9125_9127);
  var G__9126 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__9126) : cljs.core.vec.call(null, G__9126);
};
cljs.core.reduce = function cljs$core$reduce() {
  var G__9129 = arguments.length;
  switch(G__9129) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (function() {
    var G__9130 = coll;
    if (G__9130) {
      var bit__4974__auto__ = G__9130.cljs$lang$protocol_mask$partition0$ & 524288;
      if (bit__4974__auto__ || G__9130.cljs$core$IReduce$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (function() {
    var G__9131 = coll;
    if (G__9131) {
      var bit__4974__auto__ = G__9131.cljs$lang$protocol_mask$partition0$ & 524288;
      if (bit__4974__auto__ || G__9131.cljs$core$IReduce$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing() {
  var G__9134 = arguments.length;
  switch(G__9134) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__9139 = null;
    var G__9139__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__9139__1 = function(x) {
      var G__9135 = x;
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__9135) : cf.call(null, G__9135);
    };
    var G__9139__2 = function(x, y) {
      var G__9136 = x;
      var G__9137 = y;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9136, G__9137) : f.call(null, G__9136, G__9137);
    };
    G__9139 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__9139__0.call(this);
        case 1:
          return G__9139__1.call(this, x);
        case 2:
          return G__9139__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__9139.cljs$core$IFn$_invoke$arity$0 = G__9139__0;
    G__9139.cljs$core$IFn$_invoke$arity$1 = G__9139__1;
    G__9139.cljs$core$IFn$_invoke$arity$2 = G__9139__2;
    return G__9139;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce() {
  var G__9141 = arguments.length;
  switch(G__9141) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }(), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = function() {
    var G__9142 = f;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9142) : xform.call(null, G__9142);
  }();
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  var G__9143 = ret;
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__9143) : f__$1.call(null, G__9143);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_() {
  var G__9149 = arguments.length;
  switch(G__9149) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq9145) {
  var G__9146 = cljs.core.first(seq9145);
  var seq9145__$1 = cljs.core.next(seq9145);
  var G__9147 = cljs.core.first(seq9145__$1);
  var seq9145__$2 = cljs.core.next(seq9145__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__9146, G__9147, seq9145__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_() {
  var G__9155 = arguments.length;
  switch(G__9155) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq9151) {
  var G__9152 = cljs.core.first(seq9151);
  var seq9151__$1 = cljs.core.next(seq9151);
  var G__9153 = cljs.core.first(seq9151__$1);
  var seq9151__$2 = cljs.core.next(seq9151__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__9152, G__9153, seq9151__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_() {
  var G__9161 = arguments.length;
  switch(G__9161) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq9157) {
  var G__9158 = cljs.core.first(seq9157);
  var seq9157__$1 = cljs.core.next(seq9157);
  var G__9159 = cljs.core.first(seq9157__$1);
  var seq9157__$2 = cljs.core.next(seq9157__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__9158, G__9159, seq9157__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_() {
  var G__9167 = arguments.length;
  switch(G__9167) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq9163) {
  var G__9164 = cljs.core.first(seq9163);
  var seq9163__$1 = cljs.core.next(seq9163);
  var G__9165 = cljs.core.first(seq9163__$1);
  var seq9163__$2 = cljs.core.next(seq9163__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__9164, G__9165, seq9163__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_() {
  var G__9173 = arguments.length;
  switch(G__9173) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__9175 = y;
        var G__9176 = cljs.core.first(more);
        var G__9177 = cljs.core.next(more);
        x = G__9175;
        y = G__9176;
        more = G__9177;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq9169) {
  var G__9170 = cljs.core.first(seq9169);
  var seq9169__$1 = cljs.core.next(seq9169);
  var G__9171 = cljs.core.first(seq9169__$1);
  var seq9169__$2 = cljs.core.next(seq9169__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__9170, G__9171, seq9169__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_() {
  var G__9182 = arguments.length;
  switch(G__9182) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__9184 = y;
        var G__9185 = cljs.core.first(more);
        var G__9186 = cljs.core.next(more);
        x = G__9184;
        y = G__9185;
        more = G__9186;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq9178) {
  var G__9179 = cljs.core.first(seq9178);
  var seq9178__$1 = cljs.core.next(seq9178);
  var G__9180 = cljs.core.first(seq9178__$1);
  var seq9178__$2 = cljs.core.next(seq9178__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__9179, G__9180, seq9178__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_() {
  var G__9191 = arguments.length;
  switch(G__9191) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__9193 = y;
        var G__9194 = cljs.core.first(more);
        var G__9195 = cljs.core.next(more);
        x = G__9193;
        y = G__9194;
        more = G__9195;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq9187) {
  var G__9188 = cljs.core.first(seq9187);
  var seq9187__$1 = cljs.core.next(seq9187);
  var G__9189 = cljs.core.first(seq9187__$1);
  var seq9187__$2 = cljs.core.next(seq9187__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__9188, G__9189, seq9187__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_() {
  var G__9200 = arguments.length;
  switch(G__9200) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__9202 = y;
        var G__9203 = cljs.core.first(more);
        var G__9204 = cljs.core.next(more);
        x = G__9202;
        y = G__9203;
        more = G__9204;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq9196) {
  var G__9197 = cljs.core.first(seq9196);
  var seq9196__$1 = cljs.core.next(seq9196);
  var G__9198 = cljs.core.first(seq9196__$1);
  var seq9196__$2 = cljs.core.next(seq9196__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__9197, G__9198, seq9196__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max() {
  var G__9209 = arguments.length;
  switch(G__9209) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4619__auto__ = x;
  var y__4620__auto__ = y;
  return x__4619__auto__ > y__4620__auto__ ? x__4619__auto__ : y__4620__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4619__auto__ = x;
    var y__4620__auto__ = y;
    return x__4619__auto__ > y__4620__auto__ ? x__4619__auto__ : y__4620__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq9205) {
  var G__9206 = cljs.core.first(seq9205);
  var seq9205__$1 = cljs.core.next(seq9205);
  var G__9207 = cljs.core.first(seq9205__$1);
  var seq9205__$2 = cljs.core.next(seq9205__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__9206, G__9207, seq9205__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min() {
  var G__9215 = arguments.length;
  switch(G__9215) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4626__auto__ = x;
  var y__4627__auto__ = y;
  return x__4626__auto__ < y__4627__auto__ ? x__4626__auto__ : y__4627__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4626__auto__ = x;
    var y__4627__auto__ = y;
    return x__4626__auto__ < y__4627__auto__ ? x__4626__auto__ : y__4627__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq9211) {
  var G__9212 = cljs.core.first(seq9211);
  var seq9211__$1 = cljs.core.next(seq9211);
  var G__9213 = cljs.core.first(seq9211__$1);
  var seq9211__$2 = cljs.core.next(seq9211__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__9212, G__9213, seq9211__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add() {
  var G__9221 = arguments.length;
  switch(G__9221) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq9217) {
  var G__9218 = cljs.core.first(seq9217);
  var seq9217__$1 = cljs.core.next(seq9217);
  var G__9219 = cljs.core.first(seq9217__$1);
  var seq9217__$2 = cljs.core.next(seq9217__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__9218, G__9219, seq9217__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int() {
  var G__9227 = arguments.length;
  switch(G__9227) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq9223) {
  var G__9224 = cljs.core.first(seq9223);
  var seq9223__$1 = cljs.core.next(seq9223);
  var G__9225 = cljs.core.first(seq9223__$1);
  var seq9223__$2 = cljs.core.next(seq9223__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__9224, G__9225, seq9223__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int() {
  var G__9233 = arguments.length;
  switch(G__9233) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq9229) {
  var G__9230 = cljs.core.first(seq9229);
  var seq9229__$1 = cljs.core.next(seq9229);
  var G__9231 = cljs.core.first(seq9229__$1);
  var seq9229__$2 = cljs.core.next(seq9229__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__9230, G__9231, seq9229__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply() {
  var G__9239 = arguments.length;
  switch(G__9239) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq9235) {
  var G__9236 = cljs.core.first(seq9235);
  var seq9235__$1 = cljs.core.next(seq9235);
  var G__9237 = cljs.core.first(seq9235__$1);
  var seq9235__$2 = cljs.core.next(seq9235__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__9236, G__9237, seq9235__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int() {
  var G__9245 = arguments.length;
  switch(G__9245) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq9241) {
  var G__9242 = cljs.core.first(seq9241);
  var seq9241__$1 = cljs.core.next(seq9241);
  var G__9243 = cljs.core.first(seq9241__$1);
  var seq9241__$2 = cljs.core.next(seq9241__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__9242, G__9243, seq9241__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  var G__9249 = x;
  var G__9250 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__9249, G__9250) : cljs.core.mod.call(null, G__9249, G__9250);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract() {
  var G__9255 = arguments.length;
  switch(G__9255) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq9251) {
  var G__9252 = cljs.core.first(seq9251);
  var seq9251__$1 = cljs.core.next(seq9251);
  var G__9253 = cljs.core.first(seq9251__$1);
  var seq9251__$2 = cljs.core.next(seq9251__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__9252, G__9253, seq9251__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int() {
  var G__9261 = arguments.length;
  switch(G__9261) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq9257) {
  var G__9258 = cljs.core.first(seq9257);
  var seq9257__$1 = cljs.core.next(seq9257);
  var G__9259 = cljs.core.first(seq9257__$1);
  var seq9257__$2 = cljs.core.next(seq9257__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__9258, G__9259, seq9257__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    var G__9265 = q;
    return Math.floor(G__9265);
  } else {
    var G__9266 = q;
    return Math.ceil(G__9266);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor() {
  var G__9271 = arguments.length;
  switch(G__9271) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq9267) {
  var G__9268 = cljs.core.first(seq9267);
  var seq9267__$1 = cljs.core.next(seq9267);
  var G__9269 = cljs.core.first(seq9267__$1);
  var seq9267__$2 = cljs.core.next(seq9267__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__9268, G__9269, seq9267__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and() {
  var G__9277 = arguments.length;
  switch(G__9277) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq9273) {
  var G__9274 = cljs.core.first(seq9273);
  var seq9273__$1 = cljs.core.next(seq9273);
  var G__9275 = cljs.core.first(seq9273__$1);
  var seq9273__$2 = cljs.core.next(seq9273__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__9274, G__9275, seq9273__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or() {
  var G__9283 = arguments.length;
  switch(G__9283) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq9279) {
  var G__9280 = cljs.core.first(seq9279);
  var seq9279__$1 = cljs.core.next(seq9279);
  var G__9281 = cljs.core.first(seq9279__$1);
  var seq9279__$2 = cljs.core.next(seq9279__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__9280, G__9281, seq9279__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not() {
  var G__9289 = arguments.length;
  switch(G__9289) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq9285) {
  var G__9286 = cljs.core.first(seq9285);
  var seq9285__$1 = cljs.core.next(seq9285);
  var G__9287 = cljs.core.first(seq9285__$1);
  var seq9285__$2 = cljs.core.next(seq9285__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__9286, G__9287, seq9285__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_() {
  var G__9295 = arguments.length;
  switch(G__9295) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__9297 = y;
        var G__9298 = cljs.core.first(more);
        var G__9299 = cljs.core.next(more);
        x = G__9297;
        y = G__9298;
        more = G__9299;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq9291) {
  var G__9292 = cljs.core.first(seq9291);
  var seq9291__$1 = cljs.core.next(seq9291);
  var G__9293 = cljs.core.first(seq9291__$1);
  var seq9291__$2 = cljs.core.next(seq9291__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__9292, G__9293, seq9291__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__9300 = n__$1 - 1;
      var G__9301 = cljs.core.next(xs);
      n__$1 = G__9300;
      xs = G__9301;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str() {
  var G__9305 = arguments.length;
  switch(G__9305) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5358__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    var G__9306 = x;
    return goog.string.buildString(G__9306);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__9308 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__9309 = cljs.core.next(more);
      sb = G__9308;
      more = G__9309;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq9302) {
  var G__9303 = cljs.core.first(seq9302);
  var seq9302__$1 = cljs.core.next(seq9302);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__9303, seq9302__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs() {
  var G__9311 = arguments.length;
  switch(G__9311) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__9313 = cljs.core.next(xs);
            var G__9314 = cljs.core.next(ys);
            xs = G__9313;
            ys = G__9314;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__9315 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__9316 = cljs.core.next(s);
        res = G__9315;
        s = G__9316;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__9321 = (h + (cljs.core.hash(function() {
        var G__9319 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9319) : cljs.core.key.call(null, G__9319);
      }()) ^ cljs.core.hash(function() {
        var G__9320 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9320) : cljs.core.val.call(null, G__9320);
      }()))) % 4503599627370496;
      var G__9322 = cljs.core.next(s);
      h = G__9321;
      s = G__9322;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__9323 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__9324 = cljs.core.next(s__$1);
      h = G__9323;
      s__$1 = G__9324;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__9335_9345 = cljs.core.seq(fn_map);
  var chunk__9336_9346 = null;
  var count__9337_9347 = 0;
  var i__9338_9348 = 0;
  while (true) {
    if (i__9338_9348 < count__9337_9347) {
      var vec__9339_9349 = chunk__9336_9346.cljs$core$IIndexed$_nth$arity$2(null, i__9338_9348);
      var key_name_9350 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9339_9349, 0, null);
      var f_9351 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9339_9349, 1, null);
      var str_name_9352 = function() {
        var G__9340 = key_name_9350;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__9340) : cljs.core.name.call(null, G__9340);
      }();
      obj[str_name_9352] = f_9351;
      var G__9353 = seq__9335_9345;
      var G__9354 = chunk__9336_9346;
      var G__9355 = count__9337_9347;
      var G__9356 = i__9338_9348 + 1;
      seq__9335_9345 = G__9353;
      chunk__9336_9346 = G__9354;
      count__9337_9347 = G__9355;
      i__9338_9348 = G__9356;
      continue;
    } else {
      var temp__4425__auto___9357 = cljs.core.seq(seq__9335_9345);
      if (temp__4425__auto___9357) {
        var seq__9335_9358__$1 = temp__4425__auto___9357;
        if (cljs.core.chunked_seq_QMARK_(seq__9335_9358__$1)) {
          var c__5092__auto___9359 = function() {
            var G__9341 = seq__9335_9358__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__9341) : cljs.core.chunk_first.call(null, G__9341);
          }();
          var G__9360 = function() {
            var G__9342 = seq__9335_9358__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__9342) : cljs.core.chunk_rest.call(null, G__9342);
          }();
          var G__9361 = c__5092__auto___9359;
          var G__9362 = cljs.core.count(c__5092__auto___9359);
          var G__9363 = 0;
          seq__9335_9345 = G__9360;
          chunk__9336_9346 = G__9361;
          count__9337_9347 = G__9362;
          i__9338_9348 = G__9363;
          continue;
        } else {
          var vec__9343_9364 = cljs.core.first(seq__9335_9358__$1);
          var key_name_9365 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9343_9364, 0, null);
          var f_9366 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9343_9364, 1, null);
          var str_name_9367 = function() {
            var G__9344 = key_name_9365;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__9344) : cljs.core.name.call(null, G__9344);
          }();
          obj[str_name_9367] = f_9366;
          var G__9368 = cljs.core.next(seq__9335_9358__$1);
          var G__9369 = null;
          var G__9370 = 0;
          var G__9371 = 0;
          seq__9335_9345 = G__9368;
          chunk__9336_9346 = G__9369;
          count__9337_9347 = G__9370;
          i__9338_9348 = G__9371;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  var G__9373 = coll;
  if (G__9373) {
    var bit__4981__auto__ = G__9373.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4981__auto__ || G__9373.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__9373.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__9373);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__9373);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__9375 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__9375;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__9376 = i - 1;
      var G__9377 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__9376;
      r = G__9377;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq9374) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9374));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4307__auto__ = coll == null;
    if (or__4307__auto__) {
      return or__4307__auto__;
    } else {
      var G__9381 = coll;
      if (G__9381) {
        var bit__4974__auto__ = G__9381.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4974__auto__ || G__9381.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  var G__9383 = x;
  if (G__9383) {
    var bit__4981__auto__ = G__9383.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4981__auto__ || G__9383.cljs$core$IList$) {
      return true;
    } else {
      if (!G__9383.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__9383);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__9383);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4295__auto__ = cljs.core.not(a.ns);
      if (and__4295__auto__) {
        return b.ns;
      } else {
        return and__4295__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__9390 = a.ns;
            var G__9391 = b.ns;
            return goog.array.defaultCompare(G__9390, G__9391);
          }();
          if (0 === nsc) {
            var G__9392 = a.name;
            var G__9393 = b.name;
            return goog.array.defaultCompare(G__9392, G__9393);
          } else {
            return nsc;
          }
        }
      } else {
        var G__9394 = a.name;
        var G__9395 = b.name;
        return goog.array.defaultCompare(G__9394, G__9395);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__9397 = null;
  var G__9397__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__9397__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__9397 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9397__2.call(this, self__, coll);
      case 3:
        return G__9397__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9397.cljs$core$IFn$_invoke$arity$2 = G__9397__2;
  G__9397.cljs$core$IFn$_invoke$arity$3 = G__9397__3;
  return G__9397;
}();
cljs.core.Keyword.prototype.apply = function(self__, args9396) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9396)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4723__auto__ = self__._hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null)], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (function() {
    var G__9399 = x;
    if (G__9399) {
      var bit__4974__auto__ = G__9399.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4974__auto__ || G__9399.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword() {
  var G__9401 = arguments.length;
  switch(G__9401) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), function() {
        var G__9402 = name;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__9402) : cljs.core.name.call(null, G__9402);
      }(), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__9404 = ls.sval();
        ls = G__9404;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk() {
  var G__9406 = arguments.length;
  switch(G__9406) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (function() {
    var G__9409 = s;
    if (G__9409) {
      var bit__4974__auto__ = G__9409.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4974__auto__ || G__9409.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__9410 = cljs.core.next(s__$1);
      s__$1 = G__9410;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_9411 = 0;
  var xs_9412 = cljs.core.seq(coll);
  while (true) {
    if (xs_9412) {
      ret[i_9411] = cljs.core.to_array(cljs.core.first(xs_9412));
      var G__9413 = i_9411 + 1;
      var G__9414 = cljs.core.next(xs_9412);
      i_9411 = G__9413;
      xs_9412 = G__9414;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array() {
  var G__9416 = arguments.length;
  switch(G__9416) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__9418 = i + 1;
        var G__9419 = cljs.core.next(s__$1);
        i = G__9418;
        s__$1 = G__9419;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5192__auto___9420 = size;
    var i_9421 = 0;
    while (true) {
      if (i_9421 < n__5192__auto___9420) {
        a[i_9421] = init_val_or_seq;
        var G__9422 = i_9421 + 1;
        i_9421 = G__9422;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array() {
  var G__9424 = arguments.length;
  switch(G__9424) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__9426 = i + 1;
        var G__9427 = cljs.core.next(s__$1);
        i = G__9426;
        s__$1 = G__9427;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5192__auto___9428 = size;
    var i_9429 = 0;
    while (true) {
      if (i_9429 < n__5192__auto___9428) {
        a[i_9429] = init_val_or_seq;
        var G__9430 = i_9429 + 1;
        i_9429 = G__9430;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array() {
  var G__9432 = arguments.length;
  switch(G__9432) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__9434 = i + 1;
        var G__9435 = cljs.core.next(s__$1);
        i = G__9434;
        s__$1 = G__9435;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5192__auto___9436 = size;
    var i_9437 = 0;
    while (true) {
      if (i_9437 < n__5192__auto___9436) {
        a[i_9437] = init_val_or_seq;
        var G__9438 = i_9437 + 1;
        i_9437 = G__9438;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array() {
  var G__9440 = arguments.length;
  switch(G__9440) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__9442 = i + 1;
        var G__9443 = cljs.core.next(s__$1);
        i = G__9442;
        s__$1 = G__9443;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5192__auto___9444 = size;
    var i_9445 = 0;
    while (true) {
      if (i_9445 < n__5192__auto___9444) {
        a[i_9445] = init_val_or_seq;
        var G__9446 = i_9445 + 1;
        i_9445 = G__9446;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__9447 = cljs.core.next(s__$1);
        var G__9448 = i - 1;
        var G__9449 = sum + 1;
        s__$1 = G__9447;
        i = G__9448;
        sum = G__9449;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat() {
  var G__9455 = arguments.length;
  switch(G__9455) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq9451) {
  var G__9452 = cljs.core.first(seq9451);
  var seq9451__$1 = cljs.core.next(seq9451);
  var G__9453 = cljs.core.first(seq9451__$1);
  var seq9451__$2 = cljs.core.next(seq9451__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__9452, G__9453, seq9451__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_() {
  var G__9469 = arguments.length;
  switch(G__9469) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5358__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq9463) {
  var G__9464 = cljs.core.first(seq9463);
  var seq9463__$1 = cljs.core.next(seq9463);
  var G__9465 = cljs.core.first(seq9463__$1);
  var seq9463__$2 = cljs.core.next(seq9463__$1);
  var G__9466 = cljs.core.first(seq9463__$2);
  var seq9463__$3 = cljs.core.next(seq9463__$2);
  var G__9467 = cljs.core.first(seq9463__$3);
  var seq9463__$4 = cljs.core.next(seq9463__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__9464, G__9465, G__9466, G__9467, seq9463__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_() {
  var G__9475 = arguments.length;
  switch(G__9475) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__9477 = ntcoll;
      var G__9478 = cljs.core.first(vals);
      var G__9479 = cljs.core.next(vals);
      tcoll = G__9477;
      val = G__9478;
      vals = G__9479;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq9471) {
  var G__9472 = cljs.core.first(seq9471);
  var seq9471__$1 = cljs.core.next(seq9471);
  var G__9473 = cljs.core.first(seq9471__$1);
  var seq9471__$2 = cljs.core.next(seq9471__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9472, G__9473, seq9471__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_() {
  var G__9485 = arguments.length;
  switch(G__9485) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__9487 = ntcoll;
      var G__9488 = cljs.core.first(kvs);
      var G__9489 = cljs.core.second(kvs);
      var G__9490 = cljs.core.nnext(kvs);
      tcoll = G__9487;
      key = G__9488;
      val = G__9489;
      kvs = G__9490;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq9480) {
  var G__9481 = cljs.core.first(seq9480);
  var seq9480__$1 = cljs.core.next(seq9480);
  var G__9482 = cljs.core.first(seq9480__$1);
  var seq9480__$2 = cljs.core.next(seq9480__$1);
  var G__9483 = cljs.core.first(seq9480__$2);
  var seq9480__$3 = cljs.core.next(seq9480__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9481, G__9482, G__9483, seq9480__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_() {
  var G__9495 = arguments.length;
  switch(G__9495) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__9497 = ntcoll;
      var G__9498 = cljs.core.first(ks);
      var G__9499 = cljs.core.next(ks);
      tcoll = G__9497;
      key = G__9498;
      ks = G__9499;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq9491) {
  var G__9492 = cljs.core.first(seq9491);
  var seq9491__$1 = cljs.core.next(seq9491);
  var G__9493 = cljs.core.first(seq9491__$1);
  var seq9491__$2 = cljs.core.next(seq9491__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9492, G__9493, seq9491__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_() {
  var G__9504 = arguments.length;
  switch(G__9504) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__9506 = ntcoll;
      var G__9507 = cljs.core.first(vals);
      var G__9508 = cljs.core.next(vals);
      tcoll = G__9506;
      val = G__9507;
      vals = G__9508;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq9500) {
  var G__9501 = cljs.core.first(seq9500);
  var seq9500__$1 = cljs.core.next(seq9500);
  var G__9502 = cljs.core.first(seq9500__$1);
  var seq9500__$2 = cljs.core.next(seq9500__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9501, G__9502, seq9500__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5236 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5236);
      } else {
        var G__9719 = a5236;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9719) : f.call(null, G__9719);
      }
    } else {
      var b5237 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5236, b5237);
        } else {
          var G__9720 = a5236;
          var G__9721 = b5237;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9720, G__9721) : f.call(null, G__9720, G__9721);
        }
      } else {
        var c5238 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5236, b5237, c5238);
          } else {
            var G__9722 = a5236;
            var G__9723 = b5237;
            var G__9724 = c5238;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9722, G__9723, G__9724) : f.call(null, G__9722, G__9723, G__9724);
          }
        } else {
          var d5239 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5236, b5237, c5238, d5239);
            } else {
              var G__9725 = a5236;
              var G__9726 = b5237;
              var G__9727 = c5238;
              var G__9728 = d5239;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9725, G__9726, G__9727, G__9728) : f.call(null, G__9725, G__9726, G__9727, G__9728);
            }
          } else {
            var e5240 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5236, b5237, c5238, d5239, e5240);
              } else {
                var G__9729 = a5236;
                var G__9730 = b5237;
                var G__9731 = c5238;
                var G__9732 = d5239;
                var G__9733 = e5240;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9729, G__9730, G__9731, G__9732, G__9733) : f.call(null, G__9729, G__9730, G__9731, G__9732, G__9733);
              }
            } else {
              var f5241 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5236, b5237, c5238, d5239, e5240, f5241);
                } else {
                  var G__9734 = a5236;
                  var G__9735 = b5237;
                  var G__9736 = c5238;
                  var G__9737 = d5239;
                  var G__9738 = e5240;
                  var G__9739 = f5241;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__9734, G__9735, G__9736, G__9737, G__9738, G__9739) : f.call(null, G__9734, G__9735, G__9736, G__9737, G__9738, G__9739);
                }
              } else {
                var g5242 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5236, b5237, c5238, d5239, e5240, f5241, g5242);
                  } else {
                    var G__9740 = a5236;
                    var G__9741 = b5237;
                    var G__9742 = c5238;
                    var G__9743 = d5239;
                    var G__9744 = e5240;
                    var G__9745 = f5241;
                    var G__9746 = g5242;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__9740, G__9741, G__9742, G__9743, G__9744, G__9745, G__9746) : f.call(null, G__9740, G__9741, G__9742, G__9743, G__9744, G__9745, G__9746);
                  }
                } else {
                  var h5243 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5236, b5237, c5238, d5239, e5240, f5241, g5242, h5243);
                    } else {
                      var G__9747 = a5236;
                      var G__9748 = b5237;
                      var G__9749 = c5238;
                      var G__9750 = d5239;
                      var G__9751 = e5240;
                      var G__9752 = f5241;
                      var G__9753 = g5242;
                      var G__9754 = h5243;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__9747, G__9748, G__9749, G__9750, G__9751, G__9752, G__9753, G__9754) : f.call(null, G__9747, G__9748, G__9749, G__9750, G__9751, G__9752, G__9753, G__9754);
                    }
                  } else {
                    var i5244 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5236, b5237, c5238, d5239, e5240, f5241, g5242, h5243, i5244);
                      } else {
                        var G__9755 = a5236;
                        var G__9756 = b5237;
                        var G__9757 = c5238;
                        var G__9758 = d5239;
                        var G__9759 = e5240;
                        var G__9760 = f5241;
                        var G__9761 = g5242;
                        var G__9762 = h5243;
                        var G__9763 = i5244;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__9755, G__9756, G__9757, G__9758, G__9759, G__9760, G__9761, G__9762, G__9763) : f.call(null, G__9755, G__9756, G__9757, G__9758, G__9759, G__9760, G__9761, G__9762, G__9763);
                      }
                    } else {
                      var j5245 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5236, b5237, c5238, d5239, e5240, f5241, g5242, h5243, i5244, j5245);
                        } else {
                          var G__9764 = a5236;
                          var G__9765 = b5237;
                          var G__9766 = c5238;
                          var G__9767 = d5239;
                          var G__9768 = e5240;
                          var G__9769 = f5241;
                          var G__9770 = g5242;
                          var G__9771 = h5243;
                          var G__9772 = i5244;
                          var G__9773 = j5245;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__9764, G__9765, G__9766, G__9767, G__9768, G__9769, G__9770, G__9771, G__9772, G__9773) : f.call(null, G__9764, G__9765, G__9766, G__9767, G__9768, G__9769, G__9770, G__9771, G__9772, G__9773);
                        }
                      } else {
                        var k5246 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5236, b5237, c5238, d5239, e5240, f5241, g5242, h5243, i5244, j5245, k5246);
                          } else {
                            var G__9774 = a5236;
                            var G__9775 = b5237;
                            var G__9776 = c5238;
                            var G__9777 = d5239;
                            var G__9778 = e5240;
                            var G__9779 = f5241;
                            var G__9780 = g5242;
                            var G__9781 = h5243;
                            var G__9782 = i5244;
                            var G__9783 = j5245;
                            var G__9784 = k5246;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__9774, G__9775, G__9776, G__9777, G__9778, G__9779, G__9780, G__9781, G__9782, G__9783, G__9784) : f.call(null, G__9774, G__9775, G__9776, G__9777, G__9778, G__9779, G__9780, G__9781, G__9782, G__9783, G__9784);
                          }
                        } else {
                          var l5247 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5236, b5237, c5238, d5239, e5240, f5241, g5242, h5243, i5244, j5245, k5246, l5247);
                            } else {
                              var G__9785 = a5236;
                              var G__9786 = b5237;
                              var G__9787 = c5238;
                              var G__9788 = d5239;
                              var G__9789 = e5240;
                              var G__9790 = f5241;
                              var G__9791 = g5242;
                              var G__9792 = h5243;
                              var G__9793 = i5244;
                              var G__9794 = j5245;
                              var G__9795 = k5246;
                              var G__9796 = l5247;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__9785, G__9786, G__9787, G__9788, G__9789, G__9790, G__9791, G__9792, G__9793, G__9794, G__9795, G__9796) : f.call(null, G__9785, G__9786, G__9787, G__9788, G__9789, G__9790, G__9791, G__9792, G__9793, G__9794, G__9795, G__9796);
                            }
                          } else {
                            var m5248 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5236, b5237, c5238, d5239, e5240, f5241, g5242, h5243, i5244, j5245, k5246, l5247, m5248);
                              } else {
                                var G__9797 = a5236;
                                var G__9798 = b5237;
                                var G__9799 = c5238;
                                var G__9800 = d5239;
                                var G__9801 = e5240;
                                var G__9802 = f5241;
                                var G__9803 = g5242;
                                var G__9804 = h5243;
                                var G__9805 = i5244;
                                var G__9806 = j5245;
                                var G__9807 = k5246;
                                var G__9808 = l5247;
                                var G__9809 = m5248;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__9797, G__9798, G__9799, G__9800, G__9801, G__9802, G__9803, G__9804, G__9805, G__9806, G__9807, G__9808, G__9809) : f.call(null, G__9797, G__9798, G__9799, G__9800, G__9801, G__9802, G__9803, G__9804, G__9805, G__9806, G__9807, G__9808, G__9809);
                              }
                            } else {
                              var n5249 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5236, b5237, c5238, d5239, e5240, f5241, g5242, h5243, i5244, j5245, k5246, l5247, m5248, n5249);
                                } else {
                                  var G__9810 = a5236;
                                  var G__9811 = b5237;
                                  var G__9812 = c5238;
                                  var G__9813 = d5239;
                                  var G__9814 = e5240;
                                  var G__9815 = f5241;
                                  var G__9816 = g5242;
                                  var G__9817 = h5243;
                                  var G__9818 = i5244;
                                  var G__9819 = j5245;
                                  var G__9820 = k5246;
                                  var G__9821 = l5247;
                                  var G__9822 = m5248;
                                  var G__9823 = n5249;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__9810, G__9811, G__9812, G__9813, G__9814, G__9815, G__9816, G__9817, G__9818, G__9819, G__9820, G__9821, G__9822, G__9823) : f.call(null, G__9810, G__9811, G__9812, G__9813, G__9814, G__9815, G__9816, G__9817, G__9818, G__9819, G__9820, G__9821, G__9822, G__9823);
                                }
                              } else {
                                var o5250 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5236, b5237, c5238, d5239, e5240, f5241, g5242, h5243, i5244, j5245, k5246, l5247, m5248, n5249, o5250);
                                  } else {
                                    var G__9824 = a5236;
                                    var G__9825 = b5237;
                                    var G__9826 = c5238;
                                    var G__9827 = d5239;
                                    var G__9828 = e5240;
                                    var G__9829 = f5241;
                                    var G__9830 = g5242;
                                    var G__9831 = h5243;
                                    var G__9832 = i5244;
                                    var G__9833 = j5245;
                                    var G__9834 = k5246;
                                    var G__9835 = l5247;
                                    var G__9836 = m5248;
                                    var G__9837 = n5249;
                                    var G__9838 = o5250;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__9824, G__9825, G__9826, G__9827, G__9828, G__9829, G__9830, G__9831, G__9832, G__9833, G__9834, G__9835, G__9836, G__9837, G__9838) : f.call(null, G__9824, G__9825, G__9826, G__9827, G__9828, G__9829, G__9830, G__9831, G__9832, G__9833, G__9834, G__9835, G__9836, G__9837, G__9838);
                                  }
                                } else {
                                  var p5251 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5236, b5237, c5238, d5239, e5240, f5241, g5242, h5243, i5244, j5245, k5246, l5247, m5248, n5249, o5250, p5251);
                                    } else {
                                      var G__9839 = a5236;
                                      var G__9840 = b5237;
                                      var G__9841 = c5238;
                                      var G__9842 = d5239;
                                      var G__9843 = e5240;
                                      var G__9844 = f5241;
                                      var G__9845 = g5242;
                                      var G__9846 = h5243;
                                      var G__9847 = i5244;
                                      var G__9848 = j5245;
                                      var G__9849 = k5246;
                                      var G__9850 = l5247;
                                      var G__9851 = m5248;
                                      var G__9852 = n5249;
                                      var G__9853 = o5250;
                                      var G__9854 = p5251;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__9839, G__9840, G__9841, G__9842, G__9843, G__9844, G__9845, G__9846, G__9847, G__9848, G__9849, G__9850, G__9851, G__9852, G__9853, G__9854) : f.call(null, G__9839, G__9840, G__9841, G__9842, G__9843, G__9844, G__9845, G__9846, G__9847, G__9848, G__9849, G__9850, G__9851, G__9852, G__9853, G__9854);
                                    }
                                  } else {
                                    var q5252 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5236, b5237, c5238, d5239, e5240, f5241, g5242, h5243, i5244, j5245, k5246, l5247, m5248, n5249, o5250, p5251, q5252);
                                      } else {
                                        var G__9855 = a5236;
                                        var G__9856 = b5237;
                                        var G__9857 = c5238;
                                        var G__9858 = d5239;
                                        var G__9859 = e5240;
                                        var G__9860 = f5241;
                                        var G__9861 = g5242;
                                        var G__9862 = h5243;
                                        var G__9863 = i5244;
                                        var G__9864 = j5245;
                                        var G__9865 = k5246;
                                        var G__9866 = l5247;
                                        var G__9867 = m5248;
                                        var G__9868 = n5249;
                                        var G__9869 = o5250;
                                        var G__9870 = p5251;
                                        var G__9871 = q5252;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__9855, G__9856, G__9857, G__9858, G__9859, G__9860, G__9861, G__9862, G__9863, G__9864, G__9865, G__9866, G__9867, G__9868, G__9869, G__9870, G__9871) : f.call(null, G__9855, G__9856, G__9857, G__9858, G__9859, G__9860, G__9861, G__9862, G__9863, G__9864, G__9865, G__9866, G__9867, G__9868, G__9869, G__9870, G__9871);
                                      }
                                    } else {
                                      var r5253 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5236, b5237, c5238, d5239, e5240, f5241, g5242, h5243, i5244, j5245, k5246, l5247, m5248, n5249, o5250, p5251, q5252, r5253);
                                        } else {
                                          var G__9872 = a5236;
                                          var G__9873 = b5237;
                                          var G__9874 = c5238;
                                          var G__9875 = d5239;
                                          var G__9876 = e5240;
                                          var G__9877 = f5241;
                                          var G__9878 = g5242;
                                          var G__9879 = h5243;
                                          var G__9880 = i5244;
                                          var G__9881 = j5245;
                                          var G__9882 = k5246;
                                          var G__9883 = l5247;
                                          var G__9884 = m5248;
                                          var G__9885 = n5249;
                                          var G__9886 = o5250;
                                          var G__9887 = p5251;
                                          var G__9888 = q5252;
                                          var G__9889 = r5253;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__9872, G__9873, G__9874, G__9875, G__9876, G__9877, G__9878, G__9879, G__9880, G__9881, G__9882, G__9883, G__9884, G__9885, G__9886, G__9887, G__9888, G__9889) : f.call(null, G__9872, G__9873, G__9874, G__9875, G__9876, G__9877, G__9878, G__9879, G__9880, G__9881, G__9882, G__9883, G__9884, G__9885, G__9886, G__9887, G__9888, G__9889);
                                        }
                                      } else {
                                        var s5254 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5236, b5237, c5238, d5239, e5240, f5241, g5242, h5243, i5244, j5245, k5246, l5247, m5248, n5249, o5250, p5251, q5252, r5253, s5254);
                                          } else {
                                            var G__9890 = a5236;
                                            var G__9891 = b5237;
                                            var G__9892 = c5238;
                                            var G__9893 = d5239;
                                            var G__9894 = e5240;
                                            var G__9895 = f5241;
                                            var G__9896 = g5242;
                                            var G__9897 = h5243;
                                            var G__9898 = i5244;
                                            var G__9899 = j5245;
                                            var G__9900 = k5246;
                                            var G__9901 = l5247;
                                            var G__9902 = m5248;
                                            var G__9903 = n5249;
                                            var G__9904 = o5250;
                                            var G__9905 = p5251;
                                            var G__9906 = q5252;
                                            var G__9907 = r5253;
                                            var G__9908 = s5254;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__9890, G__9891, G__9892, G__9893, G__9894, G__9895, G__9896, G__9897, G__9898, G__9899, G__9900, G__9901, G__9902, G__9903, G__9904, G__9905, G__9906, G__9907, G__9908) : f.call(null, G__9890, G__9891, G__9892, G__9893, G__9894, G__9895, G__9896, G__9897, G__9898, G__9899, G__9900, G__9901, G__9902, G__9903, G__9904, G__9905, G__9906, G__9907, G__9908);
                                          }
                                        } else {
                                          var t5255 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5236, b5237, c5238, d5239, e5240, f5241, g5242, h5243, i5244, j5245, k5246, l5247, m5248, n5249, o5250, p5251, q5252, r5253, s5254, t5255);
                                            } else {
                                              var G__9909 = a5236;
                                              var G__9910 = b5237;
                                              var G__9911 = c5238;
                                              var G__9912 = d5239;
                                              var G__9913 = e5240;
                                              var G__9914 = f5241;
                                              var G__9915 = g5242;
                                              var G__9916 = h5243;
                                              var G__9917 = i5244;
                                              var G__9918 = j5245;
                                              var G__9919 = k5246;
                                              var G__9920 = l5247;
                                              var G__9921 = m5248;
                                              var G__9922 = n5249;
                                              var G__9923 = o5250;
                                              var G__9924 = p5251;
                                              var G__9925 = q5252;
                                              var G__9926 = r5253;
                                              var G__9927 = s5254;
                                              var G__9928 = t5255;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__9909, G__9910, G__9911, G__9912, G__9913, G__9914, G__9915, G__9916, G__9917, G__9918, G__9919, G__9920, G__9921, G__9922, G__9923, G__9924, G__9925, G__9926, G__9927, G__9928) : f.call(null, G__9909, G__9910, G__9911, G__9912, G__9913, G__9914, G__9915, G__9916, G__9917, G__9918, G__9919, G__9920, G__9921, G__9922, G__9923, G__9924, G__9925, G__9926, G__9927, G__9928);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply() {
  var G__9936 = arguments.length;
  switch(G__9936) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5358__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq9929) {
  var G__9930 = cljs.core.first(seq9929);
  var seq9929__$1 = cljs.core.next(seq9929);
  var G__9931 = cljs.core.first(seq9929__$1);
  var seq9929__$2 = cljs.core.next(seq9929__$1);
  var G__9932 = cljs.core.first(seq9929__$2);
  var seq9929__$3 = cljs.core.next(seq9929__$2);
  var G__9933 = cljs.core.first(seq9929__$3);
  var seq9929__$4 = cljs.core.next(seq9929__$3);
  var G__9934 = cljs.core.first(seq9929__$4);
  var seq9929__$5 = cljs.core.next(seq9929__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__9930, G__9931, G__9932, G__9933, G__9934, seq9929__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta() {
  var G__9946 = arguments.length;
  switch(G__9946) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5358__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__9947 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9947) : f.call(null, G__9947);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__9948 = cljs.core.meta(obj);
    var G__9949 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9948, G__9949) : f.call(null, G__9948, G__9949);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__9950 = cljs.core.meta(obj);
    var G__9951 = a;
    var G__9952 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9950, G__9951, G__9952) : f.call(null, G__9950, G__9951, G__9952);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__9953 = cljs.core.meta(obj);
    var G__9954 = a;
    var G__9955 = b;
    var G__9956 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9953, G__9954, G__9955, G__9956) : f.call(null, G__9953, G__9954, G__9955, G__9956);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__9957 = cljs.core.meta(obj);
    var G__9958 = a;
    var G__9959 = b;
    var G__9960 = c;
    var G__9961 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9957, G__9958, G__9959, G__9960, G__9961) : f.call(null, G__9957, G__9958, G__9959, G__9960, G__9961);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq9938) {
  var G__9939 = cljs.core.first(seq9938);
  var seq9938__$1 = cljs.core.next(seq9938);
  var G__9940 = cljs.core.first(seq9938__$1);
  var seq9938__$2 = cljs.core.next(seq9938__$1);
  var G__9941 = cljs.core.first(seq9938__$2);
  var seq9938__$3 = cljs.core.next(seq9938__$2);
  var G__9942 = cljs.core.first(seq9938__$3);
  var seq9938__$4 = cljs.core.next(seq9938__$3);
  var G__9943 = cljs.core.first(seq9938__$4);
  var seq9938__$5 = cljs.core.next(seq9938__$4);
  var G__9944 = cljs.core.first(seq9938__$5);
  var seq9938__$6 = cljs.core.next(seq9938__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__9939, G__9940, G__9941, G__9942, G__9943, G__9944, seq9938__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_() {
  var G__9967 = arguments.length;
  switch(G__9967) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq9963) {
  var G__9964 = cljs.core.first(seq9963);
  var seq9963__$1 = cljs.core.next(seq9963);
  var G__9965 = cljs.core.first(seq9963__$1);
  var seq9963__$2 = cljs.core.next(seq9963__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__9964, G__9965, seq9963__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t9972 !== "undefined") {
  } else {
    cljs.core.t9972 = function(nil_iter, meta9973) {
      this.nil_iter = nil_iter;
      this.meta9973 = meta9973;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t9972.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9974, meta9973__$1) {
      var self__ = this;
      var _9974__$1 = this;
      return new cljs.core.t9972(self__.nil_iter, meta9973__$1);
    };
    cljs.core.t9972.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9974) {
      var self__ = this;
      var _9974__$1 = this;
      return self__.meta9973;
    };
    cljs.core.t9972.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t9972.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t9972.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t9972.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.Symbol(null, "meta9973", "meta9973", 1048370291, null)], null);
    };
    cljs.core.t9972.cljs$lang$type = true;
    cljs.core.t9972.cljs$lang$ctorStr = "cljs.core/t9972";
    cljs.core.t9972.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
      return cljs.core._write(writer__4887__auto__, "cljs.core/t9972");
    };
    cljs.core.__GT_t9972 = function cljs$core$nil_iter_$___GT_t9972(nil_iter__$1, meta9973) {
      return new cljs.core.t9972(nil_iter__$1, meta9973);
    };
  }
  return new cljs.core.t9972(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.Symbol(null, "_next", "_next", 101877036, null)], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4295__auto__ = !(lt.stepper == null);
      if (and__4295__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4295__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__9975 = lt;
        var G__9976 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__9975, G__9976) : self__.xform.call(null, G__9975, G__9976);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__9977 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__9977) : self__.xform.call(null, G__9977);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__9979 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9979) : xform.call(null, G__9979);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__9981 = cljs.core.next(iters__$1);
        iters__$1 = G__9981;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5192__auto___9982 = self__.iters.length;
  var i_9983 = 0;
  while (true) {
    if (i_9983 < n__5192__auto___9982) {
      self__.nexts[i_9983] = self__.iters[i_9983].next();
      var G__9984 = i_9983 + 1;
      i_9983 = G__9984;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4295__auto__ = !(lt.stepper == null);
      if (and__4295__auto__) {
        return this$.hasNext();
      } else {
        return and__4295__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__9980 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__9980) : self__.xform.call(null, G__9980);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper() {
  var G__9986 = arguments.length;
  switch(G__9986) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(function() {
    var G__9987 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9987) : xform.call(null, G__9987);
  }(), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__9989_9993 = cljs.core.seq(colls);
  var chunk__9990_9994 = null;
  var count__9991_9995 = 0;
  var i__9992_9996 = 0;
  while (true) {
    if (i__9992_9996 < count__9991_9995) {
      var coll_9997 = chunk__9990_9994.cljs$core$IIndexed$_nth$arity$2(null, i__9992_9996);
      iters.push(cljs.core.iter(coll_9997));
      var G__9998 = seq__9989_9993;
      var G__9999 = chunk__9990_9994;
      var G__10000 = count__9991_9995;
      var G__10001 = i__9992_9996 + 1;
      seq__9989_9993 = G__9998;
      chunk__9990_9994 = G__9999;
      count__9991_9995 = G__10000;
      i__9992_9996 = G__10001;
      continue;
    } else {
      var temp__4425__auto___10002 = cljs.core.seq(seq__9989_9993);
      if (temp__4425__auto___10002) {
        var seq__9989_10003__$1 = temp__4425__auto___10002;
        if (cljs.core.chunked_seq_QMARK_(seq__9989_10003__$1)) {
          var c__5092__auto___10004 = cljs.core.chunk_first(seq__9989_10003__$1);
          var G__10005 = cljs.core.chunk_rest(seq__9989_10003__$1);
          var G__10006 = c__5092__auto___10004;
          var G__10007 = cljs.core.count(c__5092__auto___10004);
          var G__10008 = 0;
          seq__9989_9993 = G__10005;
          chunk__9990_9994 = G__10006;
          count__9991_9995 = G__10007;
          i__9992_9996 = G__10008;
          continue;
        } else {
          var coll_10009 = cljs.core.first(seq__9989_10003__$1);
          iters.push(cljs.core.iter(coll_10009));
          var G__10010 = cljs.core.next(seq__9989_10003__$1);
          var G__10011 = null;
          var G__10012 = 0;
          var G__10013 = 0;
          seq__9989_9993 = G__10010;
          chunk__9990_9994 = G__10011;
          count__9991_9995 = G__10012;
          i__9992_9996 = G__10013;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence() {
  var G__10018 = arguments.length;
  switch(G__10018) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4307__auto__ = cljs.core.seq(coll);
    if (or__4307__auto__) {
      return or__4307__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq10014) {
  var G__10015 = cljs.core.first(seq10014);
  var seq10014__$1 = cljs.core.next(seq10014);
  var G__10016 = cljs.core.first(seq10014__$1);
  var seq10014__$2 = cljs.core.next(seq10014__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__10015, G__10016, seq10014__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__10021 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10021) : pred.call(null, G__10021);
      }())) {
        var G__10022 = pred;
        var G__10023 = cljs.core.next(coll);
        pred = G__10022;
        coll = G__10023;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4307__auto__ = function() {
        var G__10027 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10027) : pred.call(null, G__10027);
      }();
      if (cljs.core.truth_(or__4307__auto__)) {
        return or__4307__auto__;
      } else {
        var G__10028 = pred;
        var G__10029 = cljs.core.next(coll);
        pred = G__10028;
        coll = G__10029;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__10036 = null;
    var G__10036__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__10036__1 = function(x) {
      return cljs.core.not(function() {
        var G__10033 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10033) : f.call(null, G__10033);
      }());
    };
    var G__10036__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__10034 = x;
        var G__10035 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10034, G__10035) : f.call(null, G__10034, G__10035);
      }());
    };
    var G__10036__3 = function() {
      var G__10037__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__10037 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__10038__i = 0, G__10038__a = new Array(arguments.length - 2);
          while (G__10038__i < G__10038__a.length) {
            G__10038__a[G__10038__i] = arguments[G__10038__i + 2];
            ++G__10038__i;
          }
          zs = new cljs.core.IndexedSeq(G__10038__a, 0);
        }
        return G__10037__delegate.call(this, x, y, zs);
      };
      G__10037.cljs$lang$maxFixedArity = 2;
      G__10037.cljs$lang$applyTo = function(arglist__10039) {
        var x = cljs.core.first(arglist__10039);
        arglist__10039 = cljs.core.next(arglist__10039);
        var y = cljs.core.first(arglist__10039);
        var zs = cljs.core.rest(arglist__10039);
        return G__10037__delegate(x, y, zs);
      };
      G__10037.cljs$core$IFn$_invoke$arity$variadic = G__10037__delegate;
      return G__10037;
    }();
    G__10036 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__10036__0.call(this);
        case 1:
          return G__10036__1.call(this, x);
        case 2:
          return G__10036__2.call(this, x, y);
        default:
          var G__10040 = null;
          if (arguments.length > 2) {
            var G__10041__i = 0, G__10041__a = new Array(arguments.length - 2);
            while (G__10041__i < G__10041__a.length) {
              G__10041__a[G__10041__i] = arguments[G__10041__i + 2];
              ++G__10041__i;
            }
            G__10040 = new cljs.core.IndexedSeq(G__10041__a, 0);
          }
          return G__10036__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__10040);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10036.cljs$lang$maxFixedArity = 2;
    G__10036.cljs$lang$applyTo = G__10036__3.cljs$lang$applyTo;
    G__10036.cljs$core$IFn$_invoke$arity$0 = G__10036__0;
    G__10036.cljs$core$IFn$_invoke$arity$1 = G__10036__1;
    G__10036.cljs$core$IFn$_invoke$arity$2 = G__10036__2;
    G__10036.cljs$core$IFn$_invoke$arity$variadic = G__10036__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__10036;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__10042__delegate = function(args) {
      return x;
    };
    var G__10042 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__10043__i = 0, G__10043__a = new Array(arguments.length - 0);
        while (G__10043__i < G__10043__a.length) {
          G__10043__a[G__10043__i] = arguments[G__10043__i + 0];
          ++G__10043__i;
        }
        args = new cljs.core.IndexedSeq(G__10043__a, 0);
      }
      return G__10042__delegate.call(this, args);
    };
    G__10042.cljs$lang$maxFixedArity = 0;
    G__10042.cljs$lang$applyTo = function(arglist__10044) {
      var args = cljs.core.seq(arglist__10044);
      return G__10042__delegate(args);
    };
    G__10042.cljs$core$IFn$_invoke$arity$variadic = G__10042__delegate;
    return G__10042;
  }();
};
cljs.core.comp = function cljs$core$comp() {
  var G__10050 = arguments.length;
  switch(G__10050) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__10079 = null;
    var G__10079__0 = function() {
      var G__10051 = function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10051) : f.call(null, G__10051);
    };
    var G__10079__1 = function(x) {
      var G__10052 = function() {
        var G__10053 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10053) : g.call(null, G__10053);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10052) : f.call(null, G__10052);
    };
    var G__10079__2 = function(x, y) {
      var G__10054 = function() {
        var G__10055 = x;
        var G__10056 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10055, G__10056) : g.call(null, G__10055, G__10056);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10054) : f.call(null, G__10054);
    };
    var G__10079__3 = function(x, y, z) {
      var G__10057 = function() {
        var G__10058 = x;
        var G__10059 = y;
        var G__10060 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10058, G__10059, G__10060) : g.call(null, G__10058, G__10059, G__10060);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10057) : f.call(null, G__10057);
    };
    var G__10079__4 = function() {
      var G__10080__delegate = function(x, y, z, args) {
        var G__10061 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10061) : f.call(null, G__10061);
      };
      var G__10080 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10081__i = 0, G__10081__a = new Array(arguments.length - 3);
          while (G__10081__i < G__10081__a.length) {
            G__10081__a[G__10081__i] = arguments[G__10081__i + 3];
            ++G__10081__i;
          }
          args = new cljs.core.IndexedSeq(G__10081__a, 0);
        }
        return G__10080__delegate.call(this, x, y, z, args);
      };
      G__10080.cljs$lang$maxFixedArity = 3;
      G__10080.cljs$lang$applyTo = function(arglist__10082) {
        var x = cljs.core.first(arglist__10082);
        arglist__10082 = cljs.core.next(arglist__10082);
        var y = cljs.core.first(arglist__10082);
        arglist__10082 = cljs.core.next(arglist__10082);
        var z = cljs.core.first(arglist__10082);
        var args = cljs.core.rest(arglist__10082);
        return G__10080__delegate(x, y, z, args);
      };
      G__10080.cljs$core$IFn$_invoke$arity$variadic = G__10080__delegate;
      return G__10080;
    }();
    G__10079 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10079__0.call(this);
        case 1:
          return G__10079__1.call(this, x);
        case 2:
          return G__10079__2.call(this, x, y);
        case 3:
          return G__10079__3.call(this, x, y, z);
        default:
          var G__10083 = null;
          if (arguments.length > 3) {
            var G__10084__i = 0, G__10084__a = new Array(arguments.length - 3);
            while (G__10084__i < G__10084__a.length) {
              G__10084__a[G__10084__i] = arguments[G__10084__i + 3];
              ++G__10084__i;
            }
            G__10083 = new cljs.core.IndexedSeq(G__10084__a, 0);
          }
          return G__10079__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10083);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10079.cljs$lang$maxFixedArity = 3;
    G__10079.cljs$lang$applyTo = G__10079__4.cljs$lang$applyTo;
    G__10079.cljs$core$IFn$_invoke$arity$0 = G__10079__0;
    G__10079.cljs$core$IFn$_invoke$arity$1 = G__10079__1;
    G__10079.cljs$core$IFn$_invoke$arity$2 = G__10079__2;
    G__10079.cljs$core$IFn$_invoke$arity$3 = G__10079__3;
    G__10079.cljs$core$IFn$_invoke$arity$variadic = G__10079__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10079;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__10085 = null;
    var G__10085__0 = function() {
      var G__10062 = function() {
        var G__10063 = function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10063) : g.call(null, G__10063);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10062) : f.call(null, G__10062);
    };
    var G__10085__1 = function(x) {
      var G__10064 = function() {
        var G__10065 = function() {
          var G__10066 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__10066) : h.call(null, G__10066);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10065) : g.call(null, G__10065);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10064) : f.call(null, G__10064);
    };
    var G__10085__2 = function(x, y) {
      var G__10067 = function() {
        var G__10068 = function() {
          var G__10069 = x;
          var G__10070 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__10069, G__10070) : h.call(null, G__10069, G__10070);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10068) : g.call(null, G__10068);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10067) : f.call(null, G__10067);
    };
    var G__10085__3 = function(x, y, z) {
      var G__10071 = function() {
        var G__10072 = function() {
          var G__10073 = x;
          var G__10074 = y;
          var G__10075 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__10073, G__10074, G__10075) : h.call(null, G__10073, G__10074, G__10075);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10072) : g.call(null, G__10072);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10071) : f.call(null, G__10071);
    };
    var G__10085__4 = function() {
      var G__10086__delegate = function(x, y, z, args) {
        var G__10076 = function() {
          var G__10077 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10077) : g.call(null, G__10077);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10076) : f.call(null, G__10076);
      };
      var G__10086 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10087__i = 0, G__10087__a = new Array(arguments.length - 3);
          while (G__10087__i < G__10087__a.length) {
            G__10087__a[G__10087__i] = arguments[G__10087__i + 3];
            ++G__10087__i;
          }
          args = new cljs.core.IndexedSeq(G__10087__a, 0);
        }
        return G__10086__delegate.call(this, x, y, z, args);
      };
      G__10086.cljs$lang$maxFixedArity = 3;
      G__10086.cljs$lang$applyTo = function(arglist__10088) {
        var x = cljs.core.first(arglist__10088);
        arglist__10088 = cljs.core.next(arglist__10088);
        var y = cljs.core.first(arglist__10088);
        arglist__10088 = cljs.core.next(arglist__10088);
        var z = cljs.core.first(arglist__10088);
        var args = cljs.core.rest(arglist__10088);
        return G__10086__delegate(x, y, z, args);
      };
      G__10086.cljs$core$IFn$_invoke$arity$variadic = G__10086__delegate;
      return G__10086;
    }();
    G__10085 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10085__0.call(this);
        case 1:
          return G__10085__1.call(this, x);
        case 2:
          return G__10085__2.call(this, x, y);
        case 3:
          return G__10085__3.call(this, x, y, z);
        default:
          var G__10089 = null;
          if (arguments.length > 3) {
            var G__10090__i = 0, G__10090__a = new Array(arguments.length - 3);
            while (G__10090__i < G__10090__a.length) {
              G__10090__a[G__10090__i] = arguments[G__10090__i + 3];
              ++G__10090__i;
            }
            G__10089 = new cljs.core.IndexedSeq(G__10090__a, 0);
          }
          return G__10085__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10089);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10085.cljs$lang$maxFixedArity = 3;
    G__10085.cljs$lang$applyTo = G__10085__4.cljs$lang$applyTo;
    G__10085.cljs$core$IFn$_invoke$arity$0 = G__10085__0;
    G__10085.cljs$core$IFn$_invoke$arity$1 = G__10085__1;
    G__10085.cljs$core$IFn$_invoke$arity$2 = G__10085__2;
    G__10085.cljs$core$IFn$_invoke$arity$3 = G__10085__3;
    G__10085.cljs$core$IFn$_invoke$arity$variadic = G__10085__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10085;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__10091__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__10092 = cljs.core.first(fs__$2).call(null, ret);
            var G__10093 = cljs.core.next(fs__$2);
            ret = G__10092;
            fs__$2 = G__10093;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__10091 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__10094__i = 0, G__10094__a = new Array(arguments.length - 0);
          while (G__10094__i < G__10094__a.length) {
            G__10094__a[G__10094__i] = arguments[G__10094__i + 0];
            ++G__10094__i;
          }
          args = new cljs.core.IndexedSeq(G__10094__a, 0);
        }
        return G__10091__delegate.call(this, args);
      };
      G__10091.cljs$lang$maxFixedArity = 0;
      G__10091.cljs$lang$applyTo = function(arglist__10095) {
        var args = cljs.core.seq(arglist__10095);
        return G__10091__delegate(args);
      };
      G__10091.cljs$core$IFn$_invoke$arity$variadic = G__10091__delegate;
      return G__10091;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq10045) {
  var G__10046 = cljs.core.first(seq10045);
  var seq10045__$1 = cljs.core.next(seq10045);
  var G__10047 = cljs.core.first(seq10045__$1);
  var seq10045__$2 = cljs.core.next(seq10045__$1);
  var G__10048 = cljs.core.first(seq10045__$2);
  var seq10045__$3 = cljs.core.next(seq10045__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__10046, G__10047, G__10048, seq10045__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial() {
  var G__10102 = arguments.length;
  switch(G__10102) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5358__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__10146 = null;
    var G__10146__0 = function() {
      var G__10103 = arg1;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10103) : f.call(null, G__10103);
    };
    var G__10146__1 = function(x) {
      var G__10104 = arg1;
      var G__10105 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10104, G__10105) : f.call(null, G__10104, G__10105);
    };
    var G__10146__2 = function(x, y) {
      var G__10106 = arg1;
      var G__10107 = x;
      var G__10108 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10106, G__10107, G__10108) : f.call(null, G__10106, G__10107, G__10108);
    };
    var G__10146__3 = function(x, y, z) {
      var G__10109 = arg1;
      var G__10110 = x;
      var G__10111 = y;
      var G__10112 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10109, G__10110, G__10111, G__10112) : f.call(null, G__10109, G__10110, G__10111, G__10112);
    };
    var G__10146__4 = function() {
      var G__10147__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__10147 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10148__i = 0, G__10148__a = new Array(arguments.length - 3);
          while (G__10148__i < G__10148__a.length) {
            G__10148__a[G__10148__i] = arguments[G__10148__i + 3];
            ++G__10148__i;
          }
          args = new cljs.core.IndexedSeq(G__10148__a, 0);
        }
        return G__10147__delegate.call(this, x, y, z, args);
      };
      G__10147.cljs$lang$maxFixedArity = 3;
      G__10147.cljs$lang$applyTo = function(arglist__10149) {
        var x = cljs.core.first(arglist__10149);
        arglist__10149 = cljs.core.next(arglist__10149);
        var y = cljs.core.first(arglist__10149);
        arglist__10149 = cljs.core.next(arglist__10149);
        var z = cljs.core.first(arglist__10149);
        var args = cljs.core.rest(arglist__10149);
        return G__10147__delegate(x, y, z, args);
      };
      G__10147.cljs$core$IFn$_invoke$arity$variadic = G__10147__delegate;
      return G__10147;
    }();
    G__10146 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10146__0.call(this);
        case 1:
          return G__10146__1.call(this, x);
        case 2:
          return G__10146__2.call(this, x, y);
        case 3:
          return G__10146__3.call(this, x, y, z);
        default:
          var G__10150 = null;
          if (arguments.length > 3) {
            var G__10151__i = 0, G__10151__a = new Array(arguments.length - 3);
            while (G__10151__i < G__10151__a.length) {
              G__10151__a[G__10151__i] = arguments[G__10151__i + 3];
              ++G__10151__i;
            }
            G__10150 = new cljs.core.IndexedSeq(G__10151__a, 0);
          }
          return G__10146__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10150);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10146.cljs$lang$maxFixedArity = 3;
    G__10146.cljs$lang$applyTo = G__10146__4.cljs$lang$applyTo;
    G__10146.cljs$core$IFn$_invoke$arity$0 = G__10146__0;
    G__10146.cljs$core$IFn$_invoke$arity$1 = G__10146__1;
    G__10146.cljs$core$IFn$_invoke$arity$2 = G__10146__2;
    G__10146.cljs$core$IFn$_invoke$arity$3 = G__10146__3;
    G__10146.cljs$core$IFn$_invoke$arity$variadic = G__10146__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10146;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__10152 = null;
    var G__10152__0 = function() {
      var G__10113 = arg1;
      var G__10114 = arg2;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10113, G__10114) : f.call(null, G__10113, G__10114);
    };
    var G__10152__1 = function(x) {
      var G__10115 = arg1;
      var G__10116 = arg2;
      var G__10117 = x;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10115, G__10116, G__10117) : f.call(null, G__10115, G__10116, G__10117);
    };
    var G__10152__2 = function(x, y) {
      var G__10118 = arg1;
      var G__10119 = arg2;
      var G__10120 = x;
      var G__10121 = y;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10118, G__10119, G__10120, G__10121) : f.call(null, G__10118, G__10119, G__10120, G__10121);
    };
    var G__10152__3 = function(x, y, z) {
      var G__10122 = arg1;
      var G__10123 = arg2;
      var G__10124 = x;
      var G__10125 = y;
      var G__10126 = z;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__10122, G__10123, G__10124, G__10125, G__10126) : f.call(null, G__10122, G__10123, G__10124, G__10125, G__10126);
    };
    var G__10152__4 = function() {
      var G__10153__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__10153 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10154__i = 0, G__10154__a = new Array(arguments.length - 3);
          while (G__10154__i < G__10154__a.length) {
            G__10154__a[G__10154__i] = arguments[G__10154__i + 3];
            ++G__10154__i;
          }
          args = new cljs.core.IndexedSeq(G__10154__a, 0);
        }
        return G__10153__delegate.call(this, x, y, z, args);
      };
      G__10153.cljs$lang$maxFixedArity = 3;
      G__10153.cljs$lang$applyTo = function(arglist__10155) {
        var x = cljs.core.first(arglist__10155);
        arglist__10155 = cljs.core.next(arglist__10155);
        var y = cljs.core.first(arglist__10155);
        arglist__10155 = cljs.core.next(arglist__10155);
        var z = cljs.core.first(arglist__10155);
        var args = cljs.core.rest(arglist__10155);
        return G__10153__delegate(x, y, z, args);
      };
      G__10153.cljs$core$IFn$_invoke$arity$variadic = G__10153__delegate;
      return G__10153;
    }();
    G__10152 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10152__0.call(this);
        case 1:
          return G__10152__1.call(this, x);
        case 2:
          return G__10152__2.call(this, x, y);
        case 3:
          return G__10152__3.call(this, x, y, z);
        default:
          var G__10156 = null;
          if (arguments.length > 3) {
            var G__10157__i = 0, G__10157__a = new Array(arguments.length - 3);
            while (G__10157__i < G__10157__a.length) {
              G__10157__a[G__10157__i] = arguments[G__10157__i + 3];
              ++G__10157__i;
            }
            G__10156 = new cljs.core.IndexedSeq(G__10157__a, 0);
          }
          return G__10152__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10156);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10152.cljs$lang$maxFixedArity = 3;
    G__10152.cljs$lang$applyTo = G__10152__4.cljs$lang$applyTo;
    G__10152.cljs$core$IFn$_invoke$arity$0 = G__10152__0;
    G__10152.cljs$core$IFn$_invoke$arity$1 = G__10152__1;
    G__10152.cljs$core$IFn$_invoke$arity$2 = G__10152__2;
    G__10152.cljs$core$IFn$_invoke$arity$3 = G__10152__3;
    G__10152.cljs$core$IFn$_invoke$arity$variadic = G__10152__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10152;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__10158 = null;
    var G__10158__0 = function() {
      var G__10127 = arg1;
      var G__10128 = arg2;
      var G__10129 = arg3;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10127, G__10128, G__10129) : f.call(null, G__10127, G__10128, G__10129);
    };
    var G__10158__1 = function(x) {
      var G__10130 = arg1;
      var G__10131 = arg2;
      var G__10132 = arg3;
      var G__10133 = x;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10130, G__10131, G__10132, G__10133) : f.call(null, G__10130, G__10131, G__10132, G__10133);
    };
    var G__10158__2 = function(x, y) {
      var G__10134 = arg1;
      var G__10135 = arg2;
      var G__10136 = arg3;
      var G__10137 = x;
      var G__10138 = y;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__10134, G__10135, G__10136, G__10137, G__10138) : f.call(null, G__10134, G__10135, G__10136, G__10137, G__10138);
    };
    var G__10158__3 = function(x, y, z) {
      var G__10139 = arg1;
      var G__10140 = arg2;
      var G__10141 = arg3;
      var G__10142 = x;
      var G__10143 = y;
      var G__10144 = z;
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__10139, G__10140, G__10141, G__10142, G__10143, G__10144) : f.call(null, G__10139, G__10140, G__10141, G__10142, G__10143, G__10144);
    };
    var G__10158__4 = function() {
      var G__10159__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__10159 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10160__i = 0, G__10160__a = new Array(arguments.length - 3);
          while (G__10160__i < G__10160__a.length) {
            G__10160__a[G__10160__i] = arguments[G__10160__i + 3];
            ++G__10160__i;
          }
          args = new cljs.core.IndexedSeq(G__10160__a, 0);
        }
        return G__10159__delegate.call(this, x, y, z, args);
      };
      G__10159.cljs$lang$maxFixedArity = 3;
      G__10159.cljs$lang$applyTo = function(arglist__10161) {
        var x = cljs.core.first(arglist__10161);
        arglist__10161 = cljs.core.next(arglist__10161);
        var y = cljs.core.first(arglist__10161);
        arglist__10161 = cljs.core.next(arglist__10161);
        var z = cljs.core.first(arglist__10161);
        var args = cljs.core.rest(arglist__10161);
        return G__10159__delegate(x, y, z, args);
      };
      G__10159.cljs$core$IFn$_invoke$arity$variadic = G__10159__delegate;
      return G__10159;
    }();
    G__10158 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10158__0.call(this);
        case 1:
          return G__10158__1.call(this, x);
        case 2:
          return G__10158__2.call(this, x, y);
        case 3:
          return G__10158__3.call(this, x, y, z);
        default:
          var G__10162 = null;
          if (arguments.length > 3) {
            var G__10163__i = 0, G__10163__a = new Array(arguments.length - 3);
            while (G__10163__i < G__10163__a.length) {
              G__10163__a[G__10163__i] = arguments[G__10163__i + 3];
              ++G__10163__i;
            }
            G__10162 = new cljs.core.IndexedSeq(G__10163__a, 0);
          }
          return G__10158__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10162);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10158.cljs$lang$maxFixedArity = 3;
    G__10158.cljs$lang$applyTo = G__10158__4.cljs$lang$applyTo;
    G__10158.cljs$core$IFn$_invoke$arity$0 = G__10158__0;
    G__10158.cljs$core$IFn$_invoke$arity$1 = G__10158__1;
    G__10158.cljs$core$IFn$_invoke$arity$2 = G__10158__2;
    G__10158.cljs$core$IFn$_invoke$arity$3 = G__10158__3;
    G__10158.cljs$core$IFn$_invoke$arity$variadic = G__10158__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10158;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__10164__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__10164 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__10165__i = 0, G__10165__a = new Array(arguments.length - 0);
        while (G__10165__i < G__10165__a.length) {
          G__10165__a[G__10165__i] = arguments[G__10165__i + 0];
          ++G__10165__i;
        }
        args = new cljs.core.IndexedSeq(G__10165__a, 0);
      }
      return G__10164__delegate.call(this, args);
    };
    G__10164.cljs$lang$maxFixedArity = 0;
    G__10164.cljs$lang$applyTo = function(arglist__10166) {
      var args = cljs.core.seq(arglist__10166);
      return G__10164__delegate(args);
    };
    G__10164.cljs$core$IFn$_invoke$arity$variadic = G__10164__delegate;
    return G__10164;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq10096) {
  var G__10097 = cljs.core.first(seq10096);
  var seq10096__$1 = cljs.core.next(seq10096);
  var G__10098 = cljs.core.first(seq10096__$1);
  var seq10096__$2 = cljs.core.next(seq10096__$1);
  var G__10099 = cljs.core.first(seq10096__$2);
  var seq10096__$3 = cljs.core.next(seq10096__$2);
  var G__10100 = cljs.core.first(seq10096__$3);
  var seq10096__$4 = cljs.core.next(seq10096__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__10097, G__10098, G__10099, G__10100, seq10096__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil() {
  var G__10168 = arguments.length;
  switch(G__10168) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__10186 = null;
    var G__10186__1 = function(a) {
      var G__10169 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10169) : f.call(null, G__10169);
    };
    var G__10186__2 = function(a, b) {
      var G__10170 = a == null ? x : a;
      var G__10171 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10170, G__10171) : f.call(null, G__10170, G__10171);
    };
    var G__10186__3 = function(a, b, c) {
      var G__10172 = a == null ? x : a;
      var G__10173 = b;
      var G__10174 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10172, G__10173, G__10174) : f.call(null, G__10172, G__10173, G__10174);
    };
    var G__10186__4 = function() {
      var G__10187__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__10187 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__10188__i = 0, G__10188__a = new Array(arguments.length - 3);
          while (G__10188__i < G__10188__a.length) {
            G__10188__a[G__10188__i] = arguments[G__10188__i + 3];
            ++G__10188__i;
          }
          ds = new cljs.core.IndexedSeq(G__10188__a, 0);
        }
        return G__10187__delegate.call(this, a, b, c, ds);
      };
      G__10187.cljs$lang$maxFixedArity = 3;
      G__10187.cljs$lang$applyTo = function(arglist__10189) {
        var a = cljs.core.first(arglist__10189);
        arglist__10189 = cljs.core.next(arglist__10189);
        var b = cljs.core.first(arglist__10189);
        arglist__10189 = cljs.core.next(arglist__10189);
        var c = cljs.core.first(arglist__10189);
        var ds = cljs.core.rest(arglist__10189);
        return G__10187__delegate(a, b, c, ds);
      };
      G__10187.cljs$core$IFn$_invoke$arity$variadic = G__10187__delegate;
      return G__10187;
    }();
    G__10186 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__10186__1.call(this, a);
        case 2:
          return G__10186__2.call(this, a, b);
        case 3:
          return G__10186__3.call(this, a, b, c);
        default:
          var G__10190 = null;
          if (arguments.length > 3) {
            var G__10191__i = 0, G__10191__a = new Array(arguments.length - 3);
            while (G__10191__i < G__10191__a.length) {
              G__10191__a[G__10191__i] = arguments[G__10191__i + 3];
              ++G__10191__i;
            }
            G__10190 = new cljs.core.IndexedSeq(G__10191__a, 0);
          }
          return G__10186__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__10190);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10186.cljs$lang$maxFixedArity = 3;
    G__10186.cljs$lang$applyTo = G__10186__4.cljs$lang$applyTo;
    G__10186.cljs$core$IFn$_invoke$arity$1 = G__10186__1;
    G__10186.cljs$core$IFn$_invoke$arity$2 = G__10186__2;
    G__10186.cljs$core$IFn$_invoke$arity$3 = G__10186__3;
    G__10186.cljs$core$IFn$_invoke$arity$variadic = G__10186__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10186;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__10192 = null;
    var G__10192__2 = function(a, b) {
      var G__10175 = a == null ? x : a;
      var G__10176 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10175, G__10176) : f.call(null, G__10175, G__10176);
    };
    var G__10192__3 = function(a, b, c) {
      var G__10177 = a == null ? x : a;
      var G__10178 = b == null ? y : b;
      var G__10179 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10177, G__10178, G__10179) : f.call(null, G__10177, G__10178, G__10179);
    };
    var G__10192__4 = function() {
      var G__10193__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__10193 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__10194__i = 0, G__10194__a = new Array(arguments.length - 3);
          while (G__10194__i < G__10194__a.length) {
            G__10194__a[G__10194__i] = arguments[G__10194__i + 3];
            ++G__10194__i;
          }
          ds = new cljs.core.IndexedSeq(G__10194__a, 0);
        }
        return G__10193__delegate.call(this, a, b, c, ds);
      };
      G__10193.cljs$lang$maxFixedArity = 3;
      G__10193.cljs$lang$applyTo = function(arglist__10195) {
        var a = cljs.core.first(arglist__10195);
        arglist__10195 = cljs.core.next(arglist__10195);
        var b = cljs.core.first(arglist__10195);
        arglist__10195 = cljs.core.next(arglist__10195);
        var c = cljs.core.first(arglist__10195);
        var ds = cljs.core.rest(arglist__10195);
        return G__10193__delegate(a, b, c, ds);
      };
      G__10193.cljs$core$IFn$_invoke$arity$variadic = G__10193__delegate;
      return G__10193;
    }();
    G__10192 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__10192__2.call(this, a, b);
        case 3:
          return G__10192__3.call(this, a, b, c);
        default:
          var G__10196 = null;
          if (arguments.length > 3) {
            var G__10197__i = 0, G__10197__a = new Array(arguments.length - 3);
            while (G__10197__i < G__10197__a.length) {
              G__10197__a[G__10197__i] = arguments[G__10197__i + 3];
              ++G__10197__i;
            }
            G__10196 = new cljs.core.IndexedSeq(G__10197__a, 0);
          }
          return G__10192__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__10196);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10192.cljs$lang$maxFixedArity = 3;
    G__10192.cljs$lang$applyTo = G__10192__4.cljs$lang$applyTo;
    G__10192.cljs$core$IFn$_invoke$arity$2 = G__10192__2;
    G__10192.cljs$core$IFn$_invoke$arity$3 = G__10192__3;
    G__10192.cljs$core$IFn$_invoke$arity$variadic = G__10192__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10192;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__10198 = null;
    var G__10198__2 = function(a, b) {
      var G__10180 = a == null ? x : a;
      var G__10181 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10180, G__10181) : f.call(null, G__10180, G__10181);
    };
    var G__10198__3 = function(a, b, c) {
      var G__10182 = a == null ? x : a;
      var G__10183 = b == null ? y : b;
      var G__10184 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10182, G__10183, G__10184) : f.call(null, G__10182, G__10183, G__10184);
    };
    var G__10198__4 = function() {
      var G__10199__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__10199 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__10200__i = 0, G__10200__a = new Array(arguments.length - 3);
          while (G__10200__i < G__10200__a.length) {
            G__10200__a[G__10200__i] = arguments[G__10200__i + 3];
            ++G__10200__i;
          }
          ds = new cljs.core.IndexedSeq(G__10200__a, 0);
        }
        return G__10199__delegate.call(this, a, b, c, ds);
      };
      G__10199.cljs$lang$maxFixedArity = 3;
      G__10199.cljs$lang$applyTo = function(arglist__10201) {
        var a = cljs.core.first(arglist__10201);
        arglist__10201 = cljs.core.next(arglist__10201);
        var b = cljs.core.first(arglist__10201);
        arglist__10201 = cljs.core.next(arglist__10201);
        var c = cljs.core.first(arglist__10201);
        var ds = cljs.core.rest(arglist__10201);
        return G__10199__delegate(a, b, c, ds);
      };
      G__10199.cljs$core$IFn$_invoke$arity$variadic = G__10199__delegate;
      return G__10199;
    }();
    G__10198 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__10198__2.call(this, a, b);
        case 3:
          return G__10198__3.call(this, a, b, c);
        default:
          var G__10202 = null;
          if (arguments.length > 3) {
            var G__10203__i = 0, G__10203__a = new Array(arguments.length - 3);
            while (G__10203__i < G__10203__a.length) {
              G__10203__a[G__10203__i] = arguments[G__10203__i + 3];
              ++G__10203__i;
            }
            G__10202 = new cljs.core.IndexedSeq(G__10203__a, 0);
          }
          return G__10198__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__10202);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10198.cljs$lang$maxFixedArity = 3;
    G__10198.cljs$lang$applyTo = G__10198__4.cljs$lang$applyTo;
    G__10198.cljs$core$IFn$_invoke$arity$2 = G__10198__2;
    G__10198.cljs$core$IFn$_invoke$arity$3 = G__10198__3;
    G__10198.cljs$core$IFn$_invoke$arity$variadic = G__10198__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10198;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed() {
  var G__10205 = arguments.length;
  switch(G__10205) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = function() {
      var G__10206 = -1;
      return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__10206) : cljs.core.volatile_BANG_.call(null, G__10206);
    }();
    return function(i) {
      return function() {
        var G__10237 = null;
        var G__10237__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10237__1 = function(result) {
          var G__10207 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10207) : rf.call(null, G__10207);
        };
        var G__10237__2 = function(result, input) {
          var G__10208 = result;
          var G__10209 = function() {
            var G__10210 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__10211 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10210, G__10211) : f.call(null, G__10210, G__10211);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10208, G__10209) : rf.call(null, G__10208, G__10209);
        };
        G__10237 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10237__0.call(this);
            case 1:
              return G__10237__1.call(this, result);
            case 2:
              return G__10237__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10237.cljs$core$IFn$_invoke$arity$0 = G__10237__0;
        G__10237.cljs$core$IFn$_invoke$arity$1 = G__10237__1;
        G__10237.cljs$core$IFn$_invoke$arity$2 = G__10237__2;
        return G__10237;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5192__auto___10238 = size;
          var i_10239 = 0;
          while (true) {
            if (i_10239 < n__5192__auto___10238) {
              cljs.core.chunk_append(b, function() {
                var G__10232 = idx + i_10239;
                var G__10233 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_10239);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10232, G__10233) : f.call(null, G__10232, G__10233);
              }());
              var G__10240 = i_10239 + 1;
              i_10239 = G__10240;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__10234 = idx;
            var G__10235 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10234, G__10235) : f.call(null, G__10234, G__10235);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep() {
  var G__10242 = arguments.length;
  switch(G__10242) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__10250 = null;
      var G__10250__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__10250__1 = function(result) {
        var G__10243 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10243) : rf.call(null, G__10243);
      };
      var G__10250__2 = function(result, input) {
        var v = function() {
          var G__10244 = input;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10244) : f.call(null, G__10244);
        }();
        if (v == null) {
          return result;
        } else {
          var G__10245 = result;
          var G__10246 = v;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10245, G__10246) : rf.call(null, G__10245, G__10246);
        }
      };
      G__10250 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__10250__0.call(this);
          case 1:
            return G__10250__1.call(this, result);
          case 2:
            return G__10250__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10250.cljs$core$IFn$_invoke$arity$0 = G__10250__0;
      G__10250.cljs$core$IFn$_invoke$arity$1 = G__10250__1;
      G__10250.cljs$core$IFn$_invoke$arity$2 = G__10250__2;
      return G__10250;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5192__auto___10251 = size;
        var i_10252 = 0;
        while (true) {
          if (i_10252 < n__5192__auto___10251) {
            var x_10253 = function() {
              var G__10247 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_10252);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10247) : f.call(null, G__10247);
            }();
            if (x_10253 == null) {
            } else {
              cljs.core.chunk_append(b, x_10253);
            }
            var G__10254 = i_10252 + 1;
            i_10252 = G__10254;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__10248 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10248) : f.call(null, G__10248);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__10255 = cljs.core.seq(self__.watches);
  var chunk__10256 = null;
  var count__10257 = 0;
  var i__10258 = 0;
  while (true) {
    if (i__10258 < count__10257) {
      var vec__10259 = chunk__10256.cljs$core$IIndexed$_nth$arity$2(null, i__10258);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10259, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10259, 1, null);
      var G__10260_10270 = key;
      var G__10261_10271 = this$__$1;
      var G__10262_10272 = oldval;
      var G__10263_10273 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10260_10270, G__10261_10271, G__10262_10272, G__10263_10273) : f.call(null, G__10260_10270, G__10261_10271, G__10262_10272, G__10263_10273);
      var G__10274 = seq__10255;
      var G__10275 = chunk__10256;
      var G__10276 = count__10257;
      var G__10277 = i__10258 + 1;
      seq__10255 = G__10274;
      chunk__10256 = G__10275;
      count__10257 = G__10276;
      i__10258 = G__10277;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__10255);
      if (temp__4425__auto__) {
        var seq__10255__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10255__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first(seq__10255__$1);
          var G__10278 = cljs.core.chunk_rest(seq__10255__$1);
          var G__10279 = c__5092__auto__;
          var G__10280 = cljs.core.count(c__5092__auto__);
          var G__10281 = 0;
          seq__10255 = G__10278;
          chunk__10256 = G__10279;
          count__10257 = G__10280;
          i__10258 = G__10281;
          continue;
        } else {
          var vec__10264 = cljs.core.first(seq__10255__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10264, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10264, 1, null);
          var G__10265_10282 = key;
          var G__10266_10283 = this$__$1;
          var G__10267_10284 = oldval;
          var G__10268_10285 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10265_10282, G__10266_10283, G__10267_10284, G__10268_10285) : f.call(null, G__10265_10282, G__10266_10283, G__10267_10284, G__10268_10285);
          var G__10286 = cljs.core.next(seq__10255__$1);
          var G__10287 = null;
          var G__10288 = 0;
          var G__10289 = 0;
          seq__10255 = G__10286;
          chunk__10256 = G__10287;
          count__10257 = G__10288;
          i__10258 = G__10289;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__10269 = this$__$1;
  return goog.getUid(G__10269);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom() {
  var G__10293 = arguments.length;
  switch(G__10293) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5358__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__10294) {
  var map__10295 = p__10294;
  var map__10295__$1 = cljs.core.seq_QMARK_(map__10295) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__10295) : map__10295;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10295__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10295__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq10290) {
  var G__10291 = cljs.core.first(seq10290);
  var seq10290__$1 = cljs.core.next(seq10290);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__10291, seq10290__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__10299 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__10299) : validate.call(null, G__10299);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__10300 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__10300) : cljs.core.pr_str.call(null, G__10300);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_() {
  var G__10307 = arguments.length;
  switch(G__10307) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5358__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__10308 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10308) : f.call(null, G__10308);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__10309 = a.state;
      var G__10310 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10309, G__10310) : f.call(null, G__10309, G__10310);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__10311 = a.state;
      var G__10312 = x;
      var G__10313 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10311, G__10312, G__10313) : f.call(null, G__10311, G__10312, G__10313);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq10301) {
  var G__10302 = cljs.core.first(seq10301);
  var seq10301__$1 = cljs.core.next(seq10301);
  var G__10303 = cljs.core.first(seq10301__$1);
  var seq10301__$2 = cljs.core.next(seq10301__$1);
  var G__10304 = cljs.core.first(seq10301__$2);
  var seq10301__$3 = cljs.core.next(seq10301__$2);
  var G__10305 = cljs.core.first(seq10301__$3);
  var seq10301__$4 = cljs.core.next(seq10301__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__10302, G__10303, G__10304, G__10305, seq10301__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null)], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed() {
  var G__10316 = arguments.length;
  switch(G__10316) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__10351 = null;
        var G__10351__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10351__1 = function(result) {
          var G__10317 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10317) : rf.call(null, G__10317);
        };
        var G__10351__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = function() {
            var G__10318 = i;
            var G__10319 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10318, G__10319) : f.call(null, G__10318, G__10319);
          }();
          if (v == null) {
            return result;
          } else {
            var G__10320 = result;
            var G__10321 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10320, G__10321) : rf.call(null, G__10320, G__10321);
          }
        };
        G__10351 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10351__0.call(this);
            case 1:
              return G__10351__1.call(this, result);
            case 2:
              return G__10351__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10351.cljs$core$IFn$_invoke$arity$0 = G__10351__0;
        G__10351.cljs$core$IFn$_invoke$arity$1 = G__10351__1;
        G__10351.cljs$core$IFn$_invoke$arity$2 = G__10351__2;
        return G__10351;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5192__auto___10352 = size;
          var i_10353 = 0;
          while (true) {
            if (i_10353 < n__5192__auto___10352) {
              var x_10354 = function() {
                var G__10346 = idx + i_10353;
                var G__10347 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_10353);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10346, G__10347) : f.call(null, G__10346, G__10347);
              }();
              if (x_10354 == null) {
              } else {
                cljs.core.chunk_append(b, x_10354);
              }
              var G__10355 = i_10353 + 1;
              i_10353 = G__10355;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__10348 = idx;
            var G__10349 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10348, G__10349) : f.call(null, G__10348, G__10349);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred() {
  var G__10367 = arguments.length;
  switch(G__10367) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(function() {
        var G__10383 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10383) : p.call(null, G__10383);
      }());
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4295__auto__ = function() {
          var G__10385 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10385) : p.call(null, G__10385);
        }();
        if (cljs.core.truth_(and__4295__auto__)) {
          var G__10386 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10386) : p.call(null, G__10386);
        } else {
          return and__4295__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4295__auto__ = function() {
          var G__10388 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10388) : p.call(null, G__10388);
        }();
        if (cljs.core.truth_(and__4295__auto__)) {
          var and__4295__auto____$1 = function() {
            var G__10390 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10390) : p.call(null, G__10390);
          }();
          if (cljs.core.truth_(and__4295__auto____$1)) {
            var G__10391 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10391) : p.call(null, G__10391);
          } else {
            return and__4295__auto____$1;
          }
        } else {
          return and__4295__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__10553__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4295__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4295__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4295__auto__;
          }
        }());
      };
      var G__10553 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10554__i = 0, G__10554__a = new Array(arguments.length - 3);
          while (G__10554__i < G__10554__a.length) {
            G__10554__a[G__10554__i] = arguments[G__10554__i + 3];
            ++G__10554__i;
          }
          args = new cljs.core.IndexedSeq(G__10554__a, 0);
        }
        return G__10553__delegate.call(this, x, y, z, args);
      };
      G__10553.cljs$lang$maxFixedArity = 3;
      G__10553.cljs$lang$applyTo = function(arglist__10555) {
        var x = cljs.core.first(arglist__10555);
        arglist__10555 = cljs.core.next(arglist__10555);
        var y = cljs.core.first(arglist__10555);
        arglist__10555 = cljs.core.next(arglist__10555);
        var z = cljs.core.first(arglist__10555);
        var args = cljs.core.rest(arglist__10555);
        return G__10553__delegate(x, y, z, args);
      };
      G__10553.cljs$core$IFn$_invoke$arity$variadic = G__10553__delegate;
      return G__10553;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__10556 = null;
          if (arguments.length > 3) {
            var G__10557__i = 0, G__10557__a = new Array(arguments.length - 3);
            while (G__10557__i < G__10557__a.length) {
              G__10557__a[G__10557__i] = arguments[G__10557__i + 3];
              ++G__10557__i;
            }
            G__10556 = new cljs.core.IndexedSeq(G__10557__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10556);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4295__auto__ = function() {
          var G__10423 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10423) : p1.call(null, G__10423);
        }();
        if (cljs.core.truth_(and__4295__auto__)) {
          var G__10424 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10424) : p2.call(null, G__10424);
        } else {
          return and__4295__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4295__auto__ = function() {
          var G__10426 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10426) : p1.call(null, G__10426);
        }();
        if (cljs.core.truth_(and__4295__auto__)) {
          var and__4295__auto____$1 = function() {
            var G__10428 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10428) : p1.call(null, G__10428);
          }();
          if (cljs.core.truth_(and__4295__auto____$1)) {
            var and__4295__auto____$2 = function() {
              var G__10430 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10430) : p2.call(null, G__10430);
            }();
            if (cljs.core.truth_(and__4295__auto____$2)) {
              var G__10431 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10431) : p2.call(null, G__10431);
            } else {
              return and__4295__auto____$2;
            }
          } else {
            return and__4295__auto____$1;
          }
        } else {
          return and__4295__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4295__auto__ = function() {
          var G__10433 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10433) : p1.call(null, G__10433);
        }();
        if (cljs.core.truth_(and__4295__auto__)) {
          var and__4295__auto____$1 = function() {
            var G__10435 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10435) : p1.call(null, G__10435);
          }();
          if (cljs.core.truth_(and__4295__auto____$1)) {
            var and__4295__auto____$2 = function() {
              var G__10437 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10437) : p1.call(null, G__10437);
            }();
            if (cljs.core.truth_(and__4295__auto____$2)) {
              var and__4295__auto____$3 = function() {
                var G__10439 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10439) : p2.call(null, G__10439);
              }();
              if (cljs.core.truth_(and__4295__auto____$3)) {
                var and__4295__auto____$4 = function() {
                  var G__10441 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10441) : p2.call(null, G__10441);
                }();
                if (cljs.core.truth_(and__4295__auto____$4)) {
                  var G__10442 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10442) : p2.call(null, G__10442);
                } else {
                  return and__4295__auto____$4;
                }
              } else {
                return and__4295__auto____$3;
              }
            } else {
              return and__4295__auto____$2;
            }
          } else {
            return and__4295__auto____$1;
          }
        } else {
          return and__4295__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__10558__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4295__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4295__auto__)) {
            return cljs.core.every_QMARK_(function(and__4295__auto__) {
              return function(p1__10356_SHARP_) {
                var and__4295__auto____$1 = function() {
                  var G__10444 = p1__10356_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10444) : p1.call(null, G__10444);
                }();
                if (cljs.core.truth_(and__4295__auto____$1)) {
                  var G__10445 = p1__10356_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10445) : p2.call(null, G__10445);
                } else {
                  return and__4295__auto____$1;
                }
              };
            }(and__4295__auto__), args);
          } else {
            return and__4295__auto__;
          }
        }());
      };
      var G__10558 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10559__i = 0, G__10559__a = new Array(arguments.length - 3);
          while (G__10559__i < G__10559__a.length) {
            G__10559__a[G__10559__i] = arguments[G__10559__i + 3];
            ++G__10559__i;
          }
          args = new cljs.core.IndexedSeq(G__10559__a, 0);
        }
        return G__10558__delegate.call(this, x, y, z, args);
      };
      G__10558.cljs$lang$maxFixedArity = 3;
      G__10558.cljs$lang$applyTo = function(arglist__10560) {
        var x = cljs.core.first(arglist__10560);
        arglist__10560 = cljs.core.next(arglist__10560);
        var y = cljs.core.first(arglist__10560);
        arglist__10560 = cljs.core.next(arglist__10560);
        var z = cljs.core.first(arglist__10560);
        var args = cljs.core.rest(arglist__10560);
        return G__10558__delegate(x, y, z, args);
      };
      G__10558.cljs$core$IFn$_invoke$arity$variadic = G__10558__delegate;
      return G__10558;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__10561 = null;
          if (arguments.length > 3) {
            var G__10562__i = 0, G__10562__a = new Array(arguments.length - 3);
            while (G__10562__i < G__10562__a.length) {
              G__10562__a[G__10562__i] = arguments[G__10562__i + 3];
              ++G__10562__i;
            }
            G__10561 = new cljs.core.IndexedSeq(G__10562__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10561);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4295__auto__ = function() {
          var G__10491 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10491) : p1.call(null, G__10491);
        }();
        if (cljs.core.truth_(and__4295__auto__)) {
          var and__4295__auto____$1 = function() {
            var G__10493 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10493) : p2.call(null, G__10493);
          }();
          if (cljs.core.truth_(and__4295__auto____$1)) {
            var G__10494 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10494) : p3.call(null, G__10494);
          } else {
            return and__4295__auto____$1;
          }
        } else {
          return and__4295__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4295__auto__ = function() {
          var G__10496 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10496) : p1.call(null, G__10496);
        }();
        if (cljs.core.truth_(and__4295__auto__)) {
          var and__4295__auto____$1 = function() {
            var G__10498 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10498) : p2.call(null, G__10498);
          }();
          if (cljs.core.truth_(and__4295__auto____$1)) {
            var and__4295__auto____$2 = function() {
              var G__10500 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10500) : p3.call(null, G__10500);
            }();
            if (cljs.core.truth_(and__4295__auto____$2)) {
              var and__4295__auto____$3 = function() {
                var G__10502 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10502) : p1.call(null, G__10502);
              }();
              if (cljs.core.truth_(and__4295__auto____$3)) {
                var and__4295__auto____$4 = function() {
                  var G__10504 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10504) : p2.call(null, G__10504);
                }();
                if (cljs.core.truth_(and__4295__auto____$4)) {
                  var G__10505 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10505) : p3.call(null, G__10505);
                } else {
                  return and__4295__auto____$4;
                }
              } else {
                return and__4295__auto____$3;
              }
            } else {
              return and__4295__auto____$2;
            }
          } else {
            return and__4295__auto____$1;
          }
        } else {
          return and__4295__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4295__auto__ = function() {
          var G__10507 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10507) : p1.call(null, G__10507);
        }();
        if (cljs.core.truth_(and__4295__auto__)) {
          var and__4295__auto____$1 = function() {
            var G__10509 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10509) : p2.call(null, G__10509);
          }();
          if (cljs.core.truth_(and__4295__auto____$1)) {
            var and__4295__auto____$2 = function() {
              var G__10511 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10511) : p3.call(null, G__10511);
            }();
            if (cljs.core.truth_(and__4295__auto____$2)) {
              var and__4295__auto____$3 = function() {
                var G__10513 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10513) : p1.call(null, G__10513);
              }();
              if (cljs.core.truth_(and__4295__auto____$3)) {
                var and__4295__auto____$4 = function() {
                  var G__10515 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10515) : p2.call(null, G__10515);
                }();
                if (cljs.core.truth_(and__4295__auto____$4)) {
                  var and__4295__auto____$5 = function() {
                    var G__10517 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10517) : p3.call(null, G__10517);
                  }();
                  if (cljs.core.truth_(and__4295__auto____$5)) {
                    var and__4295__auto____$6 = function() {
                      var G__10519 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10519) : p1.call(null, G__10519);
                    }();
                    if (cljs.core.truth_(and__4295__auto____$6)) {
                      var and__4295__auto____$7 = function() {
                        var G__10521 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10521) : p2.call(null, G__10521);
                      }();
                      if (cljs.core.truth_(and__4295__auto____$7)) {
                        var G__10522 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10522) : p3.call(null, G__10522);
                      } else {
                        return and__4295__auto____$7;
                      }
                    } else {
                      return and__4295__auto____$6;
                    }
                  } else {
                    return and__4295__auto____$5;
                  }
                } else {
                  return and__4295__auto____$4;
                }
              } else {
                return and__4295__auto____$3;
              }
            } else {
              return and__4295__auto____$2;
            }
          } else {
            return and__4295__auto____$1;
          }
        } else {
          return and__4295__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__10563__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4295__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4295__auto__)) {
            return cljs.core.every_QMARK_(function(and__4295__auto__) {
              return function(p1__10357_SHARP_) {
                var and__4295__auto____$1 = function() {
                  var G__10524 = p1__10357_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10524) : p1.call(null, G__10524);
                }();
                if (cljs.core.truth_(and__4295__auto____$1)) {
                  var and__4295__auto____$2 = function() {
                    var G__10526 = p1__10357_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10526) : p2.call(null, G__10526);
                  }();
                  if (cljs.core.truth_(and__4295__auto____$2)) {
                    var G__10527 = p1__10357_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10527) : p3.call(null, G__10527);
                  } else {
                    return and__4295__auto____$2;
                  }
                } else {
                  return and__4295__auto____$1;
                }
              };
            }(and__4295__auto__), args);
          } else {
            return and__4295__auto__;
          }
        }());
      };
      var G__10563 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10564__i = 0, G__10564__a = new Array(arguments.length - 3);
          while (G__10564__i < G__10564__a.length) {
            G__10564__a[G__10564__i] = arguments[G__10564__i + 3];
            ++G__10564__i;
          }
          args = new cljs.core.IndexedSeq(G__10564__a, 0);
        }
        return G__10563__delegate.call(this, x, y, z, args);
      };
      G__10563.cljs$lang$maxFixedArity = 3;
      G__10563.cljs$lang$applyTo = function(arglist__10565) {
        var x = cljs.core.first(arglist__10565);
        arglist__10565 = cljs.core.next(arglist__10565);
        var y = cljs.core.first(arglist__10565);
        arglist__10565 = cljs.core.next(arglist__10565);
        var z = cljs.core.first(arglist__10565);
        var args = cljs.core.rest(arglist__10565);
        return G__10563__delegate(x, y, z, args);
      };
      G__10563.cljs$core$IFn$_invoke$arity$variadic = G__10563__delegate;
      return G__10563;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__10566 = null;
          if (arguments.length > 3) {
            var G__10567__i = 0, G__10567__a = new Array(arguments.length - 3);
            while (G__10567__i < G__10567__a.length) {
              G__10567__a[G__10567__i] = arguments[G__10567__i + 3];
              ++G__10567__i;
            }
            G__10566 = new cljs.core.IndexedSeq(G__10567__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10566);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__10358_SHARP_) {
            var G__10543 = x;
            return p1__10358_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10358_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10543) : p1__10358_SHARP_.call(null, G__10543);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__10359_SHARP_) {
            var and__4295__auto__ = function() {
              var G__10545 = x;
              return p1__10359_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10359_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10545) : p1__10359_SHARP_.call(null, G__10545);
            }();
            if (cljs.core.truth_(and__4295__auto__)) {
              var G__10546 = y;
              return p1__10359_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10359_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10546) : p1__10359_SHARP_.call(null, G__10546);
            } else {
              return and__4295__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__10360_SHARP_) {
            var and__4295__auto__ = function() {
              var G__10548 = x;
              return p1__10360_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10360_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10548) : p1__10360_SHARP_.call(null, G__10548);
            }();
            if (cljs.core.truth_(and__4295__auto__)) {
              var and__4295__auto____$1 = function() {
                var G__10550 = y;
                return p1__10360_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10360_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10550) : p1__10360_SHARP_.call(null, G__10550);
              }();
              if (cljs.core.truth_(and__4295__auto____$1)) {
                var G__10551 = z;
                return p1__10360_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10360_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10551) : p1__10360_SHARP_.call(null, G__10551);
              } else {
                return and__4295__auto____$1;
              }
            } else {
              return and__4295__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__10568__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4295__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4295__auto__)) {
              return cljs.core.every_QMARK_(function(and__4295__auto__, ps__$1) {
                return function(p1__10361_SHARP_) {
                  return cljs.core.every_QMARK_(p1__10361_SHARP_, args);
                };
              }(and__4295__auto__, ps__$1), ps__$1);
            } else {
              return and__4295__auto__;
            }
          }());
        };
        var G__10568 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__10569__i = 0, G__10569__a = new Array(arguments.length - 3);
            while (G__10569__i < G__10569__a.length) {
              G__10569__a[G__10569__i] = arguments[G__10569__i + 3];
              ++G__10569__i;
            }
            args = new cljs.core.IndexedSeq(G__10569__a, 0);
          }
          return G__10568__delegate.call(this, x, y, z, args);
        };
        G__10568.cljs$lang$maxFixedArity = 3;
        G__10568.cljs$lang$applyTo = function(arglist__10570) {
          var x = cljs.core.first(arglist__10570);
          arglist__10570 = cljs.core.next(arglist__10570);
          var y = cljs.core.first(arglist__10570);
          arglist__10570 = cljs.core.next(arglist__10570);
          var z = cljs.core.first(arglist__10570);
          var args = cljs.core.rest(arglist__10570);
          return G__10568__delegate(x, y, z, args);
        };
        G__10568.cljs$core$IFn$_invoke$arity$variadic = G__10568__delegate;
        return G__10568;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__10571 = null;
            if (arguments.length > 3) {
              var G__10572__i = 0, G__10572__a = new Array(arguments.length - 3);
              while (G__10572__i < G__10572__a.length) {
                G__10572__a[G__10572__i] = arguments[G__10572__i + 3];
                ++G__10572__i;
              }
              G__10571 = new cljs.core.IndexedSeq(G__10572__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10571);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq10362) {
  var G__10363 = cljs.core.first(seq10362);
  var seq10362__$1 = cljs.core.next(seq10362);
  var G__10364 = cljs.core.first(seq10362__$1);
  var seq10362__$2 = cljs.core.next(seq10362__$1);
  var G__10365 = cljs.core.first(seq10362__$2);
  var seq10362__$3 = cljs.core.next(seq10362__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__10363, G__10364, G__10365, seq10362__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn() {
  var G__10584 = arguments.length;
  switch(G__10584) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      var G__10600 = x;
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10600) : p.call(null, G__10600);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4307__auto__ = function() {
        var G__10602 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10602) : p.call(null, G__10602);
      }();
      if (cljs.core.truth_(or__4307__auto__)) {
        return or__4307__auto__;
      } else {
        var G__10603 = y;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10603) : p.call(null, G__10603);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4307__auto__ = function() {
        var G__10605 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10605) : p.call(null, G__10605);
      }();
      if (cljs.core.truth_(or__4307__auto__)) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = function() {
          var G__10607 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10607) : p.call(null, G__10607);
        }();
        if (cljs.core.truth_(or__4307__auto____$1)) {
          return or__4307__auto____$1;
        } else {
          var G__10608 = z;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10608) : p.call(null, G__10608);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__10770__delegate = function(x, y, z, args) {
        var or__4307__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4307__auto__)) {
          return or__4307__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__10770 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10771__i = 0, G__10771__a = new Array(arguments.length - 3);
          while (G__10771__i < G__10771__a.length) {
            G__10771__a[G__10771__i] = arguments[G__10771__i + 3];
            ++G__10771__i;
          }
          args = new cljs.core.IndexedSeq(G__10771__a, 0);
        }
        return G__10770__delegate.call(this, x, y, z, args);
      };
      G__10770.cljs$lang$maxFixedArity = 3;
      G__10770.cljs$lang$applyTo = function(arglist__10772) {
        var x = cljs.core.first(arglist__10772);
        arglist__10772 = cljs.core.next(arglist__10772);
        var y = cljs.core.first(arglist__10772);
        arglist__10772 = cljs.core.next(arglist__10772);
        var z = cljs.core.first(arglist__10772);
        var args = cljs.core.rest(arglist__10772);
        return G__10770__delegate(x, y, z, args);
      };
      G__10770.cljs$core$IFn$_invoke$arity$variadic = G__10770__delegate;
      return G__10770;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__10773 = null;
          if (arguments.length > 3) {
            var G__10774__i = 0, G__10774__a = new Array(arguments.length - 3);
            while (G__10774__i < G__10774__a.length) {
              G__10774__a[G__10774__i] = arguments[G__10774__i + 3];
              ++G__10774__i;
            }
            G__10773 = new cljs.core.IndexedSeq(G__10774__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10773);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4307__auto__ = function() {
        var G__10640 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10640) : p1.call(null, G__10640);
      }();
      if (cljs.core.truth_(or__4307__auto__)) {
        return or__4307__auto__;
      } else {
        var G__10641 = x;
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10641) : p2.call(null, G__10641);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4307__auto__ = function() {
        var G__10643 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10643) : p1.call(null, G__10643);
      }();
      if (cljs.core.truth_(or__4307__auto__)) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = function() {
          var G__10645 = y;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10645) : p1.call(null, G__10645);
        }();
        if (cljs.core.truth_(or__4307__auto____$1)) {
          return or__4307__auto____$1;
        } else {
          var or__4307__auto____$2 = function() {
            var G__10647 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10647) : p2.call(null, G__10647);
          }();
          if (cljs.core.truth_(or__4307__auto____$2)) {
            return or__4307__auto____$2;
          } else {
            var G__10648 = y;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10648) : p2.call(null, G__10648);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4307__auto__ = function() {
        var G__10650 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10650) : p1.call(null, G__10650);
      }();
      if (cljs.core.truth_(or__4307__auto__)) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = function() {
          var G__10652 = y;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10652) : p1.call(null, G__10652);
        }();
        if (cljs.core.truth_(or__4307__auto____$1)) {
          return or__4307__auto____$1;
        } else {
          var or__4307__auto____$2 = function() {
            var G__10654 = z;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10654) : p1.call(null, G__10654);
          }();
          if (cljs.core.truth_(or__4307__auto____$2)) {
            return or__4307__auto____$2;
          } else {
            var or__4307__auto____$3 = function() {
              var G__10656 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10656) : p2.call(null, G__10656);
            }();
            if (cljs.core.truth_(or__4307__auto____$3)) {
              return or__4307__auto____$3;
            } else {
              var or__4307__auto____$4 = function() {
                var G__10658 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10658) : p2.call(null, G__10658);
              }();
              if (cljs.core.truth_(or__4307__auto____$4)) {
                return or__4307__auto____$4;
              } else {
                var G__10659 = z;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10659) : p2.call(null, G__10659);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__10775__delegate = function(x, y, z, args) {
        var or__4307__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4307__auto__)) {
          return or__4307__auto__;
        } else {
          return cljs.core.some(function(or__4307__auto__) {
            return function(p1__10573_SHARP_) {
              var or__4307__auto____$1 = function() {
                var G__10661 = p1__10573_SHARP_;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10661) : p1.call(null, G__10661);
              }();
              if (cljs.core.truth_(or__4307__auto____$1)) {
                return or__4307__auto____$1;
              } else {
                var G__10662 = p1__10573_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10662) : p2.call(null, G__10662);
              }
            };
          }(or__4307__auto__), args);
        }
      };
      var G__10775 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10776__i = 0, G__10776__a = new Array(arguments.length - 3);
          while (G__10776__i < G__10776__a.length) {
            G__10776__a[G__10776__i] = arguments[G__10776__i + 3];
            ++G__10776__i;
          }
          args = new cljs.core.IndexedSeq(G__10776__a, 0);
        }
        return G__10775__delegate.call(this, x, y, z, args);
      };
      G__10775.cljs$lang$maxFixedArity = 3;
      G__10775.cljs$lang$applyTo = function(arglist__10777) {
        var x = cljs.core.first(arglist__10777);
        arglist__10777 = cljs.core.next(arglist__10777);
        var y = cljs.core.first(arglist__10777);
        arglist__10777 = cljs.core.next(arglist__10777);
        var z = cljs.core.first(arglist__10777);
        var args = cljs.core.rest(arglist__10777);
        return G__10775__delegate(x, y, z, args);
      };
      G__10775.cljs$core$IFn$_invoke$arity$variadic = G__10775__delegate;
      return G__10775;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__10778 = null;
          if (arguments.length > 3) {
            var G__10779__i = 0, G__10779__a = new Array(arguments.length - 3);
            while (G__10779__i < G__10779__a.length) {
              G__10779__a[G__10779__i] = arguments[G__10779__i + 3];
              ++G__10779__i;
            }
            G__10778 = new cljs.core.IndexedSeq(G__10779__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10778);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4307__auto__ = function() {
        var G__10708 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10708) : p1.call(null, G__10708);
      }();
      if (cljs.core.truth_(or__4307__auto__)) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = function() {
          var G__10710 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10710) : p2.call(null, G__10710);
        }();
        if (cljs.core.truth_(or__4307__auto____$1)) {
          return or__4307__auto____$1;
        } else {
          var G__10711 = x;
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10711) : p3.call(null, G__10711);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4307__auto__ = function() {
        var G__10713 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10713) : p1.call(null, G__10713);
      }();
      if (cljs.core.truth_(or__4307__auto__)) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = function() {
          var G__10715 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10715) : p2.call(null, G__10715);
        }();
        if (cljs.core.truth_(or__4307__auto____$1)) {
          return or__4307__auto____$1;
        } else {
          var or__4307__auto____$2 = function() {
            var G__10717 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10717) : p3.call(null, G__10717);
          }();
          if (cljs.core.truth_(or__4307__auto____$2)) {
            return or__4307__auto____$2;
          } else {
            var or__4307__auto____$3 = function() {
              var G__10719 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10719) : p1.call(null, G__10719);
            }();
            if (cljs.core.truth_(or__4307__auto____$3)) {
              return or__4307__auto____$3;
            } else {
              var or__4307__auto____$4 = function() {
                var G__10721 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10721) : p2.call(null, G__10721);
              }();
              if (cljs.core.truth_(or__4307__auto____$4)) {
                return or__4307__auto____$4;
              } else {
                var G__10722 = y;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10722) : p3.call(null, G__10722);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4307__auto__ = function() {
        var G__10724 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10724) : p1.call(null, G__10724);
      }();
      if (cljs.core.truth_(or__4307__auto__)) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = function() {
          var G__10726 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10726) : p2.call(null, G__10726);
        }();
        if (cljs.core.truth_(or__4307__auto____$1)) {
          return or__4307__auto____$1;
        } else {
          var or__4307__auto____$2 = function() {
            var G__10728 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10728) : p3.call(null, G__10728);
          }();
          if (cljs.core.truth_(or__4307__auto____$2)) {
            return or__4307__auto____$2;
          } else {
            var or__4307__auto____$3 = function() {
              var G__10730 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10730) : p1.call(null, G__10730);
            }();
            if (cljs.core.truth_(or__4307__auto____$3)) {
              return or__4307__auto____$3;
            } else {
              var or__4307__auto____$4 = function() {
                var G__10732 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10732) : p2.call(null, G__10732);
              }();
              if (cljs.core.truth_(or__4307__auto____$4)) {
                return or__4307__auto____$4;
              } else {
                var or__4307__auto____$5 = function() {
                  var G__10734 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10734) : p3.call(null, G__10734);
                }();
                if (cljs.core.truth_(or__4307__auto____$5)) {
                  return or__4307__auto____$5;
                } else {
                  var or__4307__auto____$6 = function() {
                    var G__10736 = z;
                    return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10736) : p1.call(null, G__10736);
                  }();
                  if (cljs.core.truth_(or__4307__auto____$6)) {
                    return or__4307__auto____$6;
                  } else {
                    var or__4307__auto____$7 = function() {
                      var G__10738 = z;
                      return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10738) : p2.call(null, G__10738);
                    }();
                    if (cljs.core.truth_(or__4307__auto____$7)) {
                      return or__4307__auto____$7;
                    } else {
                      var G__10739 = z;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10739) : p3.call(null, G__10739);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__10780__delegate = function(x, y, z, args) {
        var or__4307__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4307__auto__)) {
          return or__4307__auto__;
        } else {
          return cljs.core.some(function(or__4307__auto__) {
            return function(p1__10574_SHARP_) {
              var or__4307__auto____$1 = function() {
                var G__10741 = p1__10574_SHARP_;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10741) : p1.call(null, G__10741);
              }();
              if (cljs.core.truth_(or__4307__auto____$1)) {
                return or__4307__auto____$1;
              } else {
                var or__4307__auto____$2 = function() {
                  var G__10743 = p1__10574_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10743) : p2.call(null, G__10743);
                }();
                if (cljs.core.truth_(or__4307__auto____$2)) {
                  return or__4307__auto____$2;
                } else {
                  var G__10744 = p1__10574_SHARP_;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10744) : p3.call(null, G__10744);
                }
              }
            };
          }(or__4307__auto__), args);
        }
      };
      var G__10780 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10781__i = 0, G__10781__a = new Array(arguments.length - 3);
          while (G__10781__i < G__10781__a.length) {
            G__10781__a[G__10781__i] = arguments[G__10781__i + 3];
            ++G__10781__i;
          }
          args = new cljs.core.IndexedSeq(G__10781__a, 0);
        }
        return G__10780__delegate.call(this, x, y, z, args);
      };
      G__10780.cljs$lang$maxFixedArity = 3;
      G__10780.cljs$lang$applyTo = function(arglist__10782) {
        var x = cljs.core.first(arglist__10782);
        arglist__10782 = cljs.core.next(arglist__10782);
        var y = cljs.core.first(arglist__10782);
        arglist__10782 = cljs.core.next(arglist__10782);
        var z = cljs.core.first(arglist__10782);
        var args = cljs.core.rest(arglist__10782);
        return G__10780__delegate(x, y, z, args);
      };
      G__10780.cljs$core$IFn$_invoke$arity$variadic = G__10780__delegate;
      return G__10780;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__10783 = null;
          if (arguments.length > 3) {
            var G__10784__i = 0, G__10784__a = new Array(arguments.length - 3);
            while (G__10784__i < G__10784__a.length) {
              G__10784__a[G__10784__i] = arguments[G__10784__i + 3];
              ++G__10784__i;
            }
            G__10783 = new cljs.core.IndexedSeq(G__10784__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10783);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__10575_SHARP_) {
            var G__10760 = x;
            return p1__10575_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10575_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10760) : p1__10575_SHARP_.call(null, G__10760);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__10576_SHARP_) {
            var or__4307__auto__ = function() {
              var G__10762 = x;
              return p1__10576_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10576_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10762) : p1__10576_SHARP_.call(null, G__10762);
            }();
            if (cljs.core.truth_(or__4307__auto__)) {
              return or__4307__auto__;
            } else {
              var G__10763 = y;
              return p1__10576_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10576_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10763) : p1__10576_SHARP_.call(null, G__10763);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__10577_SHARP_) {
            var or__4307__auto__ = function() {
              var G__10765 = x;
              return p1__10577_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10577_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10765) : p1__10577_SHARP_.call(null, G__10765);
            }();
            if (cljs.core.truth_(or__4307__auto__)) {
              return or__4307__auto__;
            } else {
              var or__4307__auto____$1 = function() {
                var G__10767 = y;
                return p1__10577_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10577_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10767) : p1__10577_SHARP_.call(null, G__10767);
              }();
              if (cljs.core.truth_(or__4307__auto____$1)) {
                return or__4307__auto____$1;
              } else {
                var G__10768 = z;
                return p1__10577_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10577_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10768) : p1__10577_SHARP_.call(null, G__10768);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__10785__delegate = function(x, y, z, args) {
          var or__4307__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4307__auto__)) {
            return or__4307__auto__;
          } else {
            return cljs.core.some(function(or__4307__auto__, ps__$1) {
              return function(p1__10578_SHARP_) {
                return cljs.core.some(p1__10578_SHARP_, args);
              };
            }(or__4307__auto__, ps__$1), ps__$1);
          }
        };
        var G__10785 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__10786__i = 0, G__10786__a = new Array(arguments.length - 3);
            while (G__10786__i < G__10786__a.length) {
              G__10786__a[G__10786__i] = arguments[G__10786__i + 3];
              ++G__10786__i;
            }
            args = new cljs.core.IndexedSeq(G__10786__a, 0);
          }
          return G__10785__delegate.call(this, x, y, z, args);
        };
        G__10785.cljs$lang$maxFixedArity = 3;
        G__10785.cljs$lang$applyTo = function(arglist__10787) {
          var x = cljs.core.first(arglist__10787);
          arglist__10787 = cljs.core.next(arglist__10787);
          var y = cljs.core.first(arglist__10787);
          arglist__10787 = cljs.core.next(arglist__10787);
          var z = cljs.core.first(arglist__10787);
          var args = cljs.core.rest(arglist__10787);
          return G__10785__delegate(x, y, z, args);
        };
        G__10785.cljs$core$IFn$_invoke$arity$variadic = G__10785__delegate;
        return G__10785;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__10788 = null;
            if (arguments.length > 3) {
              var G__10789__i = 0, G__10789__a = new Array(arguments.length - 3);
              while (G__10789__i < G__10789__a.length) {
                G__10789__a[G__10789__i] = arguments[G__10789__i + 3];
                ++G__10789__i;
              }
              G__10788 = new cljs.core.IndexedSeq(G__10789__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10788);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq10579) {
  var G__10580 = cljs.core.first(seq10579);
  var seq10579__$1 = cljs.core.next(seq10579);
  var G__10581 = cljs.core.first(seq10579__$1);
  var seq10579__$2 = cljs.core.next(seq10579__$1);
  var G__10582 = cljs.core.first(seq10579__$2);
  var seq10579__$3 = cljs.core.next(seq10579__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__10580, G__10581, G__10582, seq10579__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map() {
  var G__10797 = arguments.length;
  switch(G__10797) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5358__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__10813 = null;
      var G__10813__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__10813__1 = function(result) {
        var G__10798 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10798) : rf.call(null, G__10798);
      };
      var G__10813__2 = function(result, input) {
        var G__10799 = result;
        var G__10800 = function() {
          var G__10801 = input;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10801) : f.call(null, G__10801);
        }();
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10799, G__10800) : rf.call(null, G__10799, G__10800);
      };
      var G__10813__3 = function() {
        var G__10814__delegate = function(result, input, inputs) {
          var G__10802 = result;
          var G__10803 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10802, G__10803) : rf.call(null, G__10802, G__10803);
        };
        var G__10814 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__10815__i = 0, G__10815__a = new Array(arguments.length - 2);
            while (G__10815__i < G__10815__a.length) {
              G__10815__a[G__10815__i] = arguments[G__10815__i + 2];
              ++G__10815__i;
            }
            inputs = new cljs.core.IndexedSeq(G__10815__a, 0);
          }
          return G__10814__delegate.call(this, result, input, inputs);
        };
        G__10814.cljs$lang$maxFixedArity = 2;
        G__10814.cljs$lang$applyTo = function(arglist__10816) {
          var result = cljs.core.first(arglist__10816);
          arglist__10816 = cljs.core.next(arglist__10816);
          var input = cljs.core.first(arglist__10816);
          var inputs = cljs.core.rest(arglist__10816);
          return G__10814__delegate(result, input, inputs);
        };
        G__10814.cljs$core$IFn$_invoke$arity$variadic = G__10814__delegate;
        return G__10814;
      }();
      G__10813 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__10813__0.call(this);
          case 1:
            return G__10813__1.call(this, result);
          case 2:
            return G__10813__2.call(this, result, input);
          default:
            var G__10817 = null;
            if (arguments.length > 2) {
              var G__10818__i = 0, G__10818__a = new Array(arguments.length - 2);
              while (G__10818__i < G__10818__a.length) {
                G__10818__a[G__10818__i] = arguments[G__10818__i + 2];
                ++G__10818__i;
              }
              G__10817 = new cljs.core.IndexedSeq(G__10818__a, 0);
            }
            return G__10813__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__10817);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10813.cljs$lang$maxFixedArity = 2;
      G__10813.cljs$lang$applyTo = G__10813__3.cljs$lang$applyTo;
      G__10813.cljs$core$IFn$_invoke$arity$0 = G__10813__0;
      G__10813.cljs$core$IFn$_invoke$arity$1 = G__10813__1;
      G__10813.cljs$core$IFn$_invoke$arity$2 = G__10813__2;
      G__10813.cljs$core$IFn$_invoke$arity$variadic = G__10813__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__10813;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5192__auto___10819 = size;
        var i_10820 = 0;
        while (true) {
          if (i_10820 < n__5192__auto___10819) {
            cljs.core.chunk_append(b, function() {
              var G__10804 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_10820);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10804) : f.call(null, G__10804);
            }());
            var G__10821 = i_10820 + 1;
            i_10820 = G__10821;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__10805 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10805) : f.call(null, G__10805);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__10806 = cljs.core.first(s1);
        var G__10807 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10806, G__10807) : f.call(null, G__10806, G__10807);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__10808 = cljs.core.first(s1);
        var G__10809 = cljs.core.first(s2);
        var G__10810 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10808, G__10809, G__10810) : f.call(null, G__10808, G__10809, G__10810);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__10790_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__10790_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq10791) {
  var G__10792 = cljs.core.first(seq10791);
  var seq10791__$1 = cljs.core.next(seq10791);
  var G__10793 = cljs.core.first(seq10791__$1);
  var seq10791__$2 = cljs.core.next(seq10791__$1);
  var G__10794 = cljs.core.first(seq10791__$2);
  var seq10791__$3 = cljs.core.next(seq10791__$2);
  var G__10795 = cljs.core.first(seq10791__$3);
  var seq10791__$4 = cljs.core.next(seq10791__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__10792, G__10793, G__10794, G__10795, seq10791__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take() {
  var G__10823 = arguments.length;
  switch(G__10823) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__10828 = null;
        var G__10828__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10828__1 = function(result) {
          var G__10824 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10824) : rf.call(null, G__10824);
        };
        var G__10828__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? function() {
            var G__10825 = result;
            var G__10826 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10825, G__10826) : rf.call(null, G__10825, G__10826);
          }() : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__10828 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10828__0.call(this);
            case 1:
              return G__10828__1.call(this, result);
            case 2:
              return G__10828__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10828.cljs$core$IFn$_invoke$arity$0 = G__10828__0;
        G__10828.cljs$core$IFn$_invoke$arity$1 = G__10828__1;
        G__10828.cljs$core$IFn$_invoke$arity$2 = G__10828__2;
        return G__10828;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4425__auto__ = cljs.core.seq(coll);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop() {
  var G__10830 = arguments.length;
  switch(G__10830) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__10835 = null;
        var G__10835__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10835__1 = function(result) {
          var G__10831 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10831) : rf.call(null, G__10831);
        };
        var G__10835__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            var G__10832 = result;
            var G__10833 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10832, G__10833) : rf.call(null, G__10832, G__10833);
          }
        };
        G__10835 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10835__0.call(this);
            case 1:
              return G__10835__1.call(this, result);
            case 2:
              return G__10835__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10835.cljs$core$IFn$_invoke$arity$0 = G__10835__0;
        G__10835.cljs$core$IFn$_invoke$arity$1 = G__10835__1;
        G__10835.cljs$core$IFn$_invoke$arity$2 = G__10835__2;
        return G__10835;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__10836 = n__$1 - 1;
        var G__10837 = cljs.core.rest(s);
        n__$1 = G__10836;
        coll__$1 = G__10837;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last() {
  var G__10839 = arguments.length;
  switch(G__10839) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__10841 = cljs.core.next(s);
      var G__10842 = cljs.core.next(lead);
      s = G__10841;
      lead = G__10842;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while() {
  var G__10844 = arguments.length;
  switch(G__10844) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__10852 = null;
        var G__10852__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10852__1 = function(result) {
          var G__10845 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10845) : rf.call(null, G__10845);
        };
        var G__10852__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4295__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4295__auto__)) {
              var G__10846 = input;
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10846) : pred.call(null, G__10846);
            } else {
              return and__4295__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            var G__10847 = result;
            var G__10848 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10847, G__10848) : rf.call(null, G__10847, G__10848);
          }
        };
        G__10852 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10852__0.call(this);
            case 1:
              return G__10852__1.call(this, result);
            case 2:
              return G__10852__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10852.cljs$core$IFn$_invoke$arity$0 = G__10852__0;
        G__10852.cljs$core$IFn$_invoke$arity$1 = G__10852__1;
        G__10852.cljs$core$IFn$_invoke$arity$2 = G__10852__2;
        return G__10852;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4295__auto__ = s;
        if (and__4295__auto__) {
          var G__10850 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__10850) : pred__$1.call(null, G__10850);
        } else {
          return and__4295__auto__;
        }
      }())) {
        var G__10853 = pred__$1;
        var G__10854 = cljs.core.rest(s);
        pred__$1 = G__10853;
        coll__$1 = G__10854;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat() {
  var G__10857 = arguments.length;
  switch(G__10857) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly() {
  var G__10860 = arguments.length;
  switch(G__10860) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, function() {
      var G__10865 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10865) : f.call(null, G__10865);
    }());
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave() {
  var G__10870 = arguments.length;
  switch(G__10870) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq10866) {
  var G__10867 = cljs.core.first(seq10866);
  var seq10866__$1 = cljs.core.next(seq10866);
  var G__10868 = cljs.core.first(seq10866__$1);
  var seq10866__$2 = cljs.core.next(seq10866__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__10867, G__10868, seq10866__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose() {
  var G__10873 = arguments.length;
  switch(G__10873) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__10882 = null;
        var G__10882__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10882__1 = function(result) {
          var G__10874 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10874) : rf.call(null, G__10874);
        };
        var G__10882__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = function() {
              var G__10875 = result;
              var G__10876 = sep;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10875, G__10876) : rf.call(null, G__10875, G__10876);
            }();
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              var G__10877 = sepr;
              var G__10878 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10877, G__10878) : rf.call(null, G__10877, G__10878);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            var G__10879 = result;
            var G__10880 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10879, G__10880) : rf.call(null, G__10879, G__10880);
          }
        };
        G__10882 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10882__0.call(this);
            case 1:
              return G__10882__1.call(this, result);
            case 2:
              return G__10882__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10882.cljs$core$IFn$_invoke$arity$0 = G__10882__0;
        G__10882.cljs$core$IFn$_invoke$arity$1 = G__10882__1;
        G__10882.cljs$core$IFn$_invoke$arity$2 = G__10882__2;
        return G__10882;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4423__auto__ = cljs.core.seq(coll);
      if (temp__4423__auto__) {
        var coll__$1 = temp__4423__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat() {
  var G__10894 = arguments.length;
  switch(G__10894) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5358__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq10891) {
  var G__10892 = cljs.core.first(seq10891);
  var seq10891__$1 = cljs.core.next(seq10891);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__10892, seq10891__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter() {
  var G__10897 = arguments.length;
  switch(G__10897) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__10905 = null;
      var G__10905__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__10905__1 = function(result) {
        var G__10898 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10898) : rf.call(null, G__10898);
      };
      var G__10905__2 = function(result, input) {
        if (cljs.core.truth_(function() {
          var G__10899 = input;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10899) : pred.call(null, G__10899);
        }())) {
          var G__10900 = result;
          var G__10901 = input;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10900, G__10901) : rf.call(null, G__10900, G__10901);
        } else {
          return result;
        }
      };
      G__10905 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__10905__0.call(this);
          case 1:
            return G__10905__1.call(this, result);
          case 2:
            return G__10905__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10905.cljs$core$IFn$_invoke$arity$0 = G__10905__0;
      G__10905.cljs$core$IFn$_invoke$arity$1 = G__10905__1;
      G__10905.cljs$core$IFn$_invoke$arity$2 = G__10905__2;
      return G__10905;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5192__auto___10906 = size;
        var i_10907 = 0;
        while (true) {
          if (i_10907 < n__5192__auto___10906) {
            if (cljs.core.truth_(function() {
              var G__10902 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_10907);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10902) : pred.call(null, G__10902);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_10907));
            } else {
            }
            var G__10908 = i_10907 + 1;
            i_10907 = G__10908;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(function() {
          var G__10903 = f;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10903) : pred.call(null, G__10903);
        }())) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove() {
  var G__10910 = arguments.length;
  switch(G__10910) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__10918 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__10918) : branch_QMARK_.call(null, G__10918);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([function() {
        var G__10919 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__10919) : children.call(null, G__10919);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__10920_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__10920_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into() {
  var G__10922 = arguments.length;
  switch(G__10922) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__10923 = to;
      if (G__10923) {
        var bit__4974__auto__ = G__10923.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4974__auto__ || G__10923.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (function() {
    var G__10924 = to;
    if (G__10924) {
      var bit__4974__auto__ = G__10924.cljs$lang$protocol_mask$partition1$ & 4;
      if (bit__4974__auto__ || G__10924.cljs$core$IEditableCollection$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv() {
  var G__10932 = arguments.length;
  switch(G__10932) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5358__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
      var G__10933 = o;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10933) : f.call(null, G__10933);
    }());
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq10926) {
  var G__10927 = cljs.core.first(seq10926);
  var seq10926__$1 = cljs.core.next(seq10926);
  var G__10928 = cljs.core.first(seq10926__$1);
  var seq10926__$2 = cljs.core.next(seq10926__$1);
  var G__10929 = cljs.core.first(seq10926__$2);
  var seq10926__$3 = cljs.core.next(seq10926__$2);
  var G__10930 = cljs.core.first(seq10926__$3);
  var seq10926__$4 = cljs.core.next(seq10926__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__10927, G__10928, G__10929, G__10930, seq10926__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__10936 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10936) : pred.call(null, G__10936);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition() {
  var G__10938 = arguments.length;
  switch(G__10938) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in() {
  var G__10941 = arguments.length;
  switch(G__10941) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!function() {
        var G__10942 = m__$1;
        if (G__10942) {
          var bit__4981__auto__ = G__10942.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4981__auto__ || G__10942.cljs$core$ILookup$) {
            return true;
          } else {
            if (!G__10942.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__10942);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__10942);
        }
      }()) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__10944 = sentinel;
          var G__10945 = m__$2;
          var G__10946 = cljs.core.next(ks__$1);
          sentinel = G__10944;
          m__$1 = G__10945;
          ks__$1 = G__10946;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__10947, v) {
  var vec__10952 = p__10947;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10952, 0, null);
  var ks = cljs.core.nthnext(vec__10952, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in() {
  var G__10961 = arguments.length;
  switch(G__10961) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5358__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__10962, f) {
  var vec__10963 = p__10962;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10963, 0, null);
  var ks = cljs.core.nthnext(vec__10963, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__10964 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10964) : f.call(null, G__10964);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__10965, f, a) {
  var vec__10966 = p__10965;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10966, 0, null);
  var ks = cljs.core.nthnext(vec__10966, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__10967 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__10968 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10967, G__10968) : f.call(null, G__10967, G__10968);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__10969, f, a, b) {
  var vec__10970 = p__10969;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10970, 0, null);
  var ks = cljs.core.nthnext(vec__10970, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__10971 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__10972 = a;
      var G__10973 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10971, G__10972, G__10973) : f.call(null, G__10971, G__10972, G__10973);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__10974, f, a, b, c) {
  var vec__10975 = p__10974;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10975, 0, null);
  var ks = cljs.core.nthnext(vec__10975, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__10976 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__10977 = a;
      var G__10978 = b;
      var G__10979 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10976, G__10977, G__10978, G__10979) : f.call(null, G__10976, G__10977, G__10978, G__10979);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__10980, f, a, b, c, args) {
  var vec__10981 = p__10980;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10981, 0, null);
  var ks = cljs.core.nthnext(vec__10981, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq10953) {
  var G__10954 = cljs.core.first(seq10953);
  var seq10953__$1 = cljs.core.next(seq10953);
  var G__10955 = cljs.core.first(seq10953__$1);
  var seq10953__$2 = cljs.core.next(seq10953__$1);
  var G__10956 = cljs.core.first(seq10953__$2);
  var seq10953__$3 = cljs.core.next(seq10953__$2);
  var G__10957 = cljs.core.first(seq10953__$3);
  var seq10953__$4 = cljs.core.next(seq10953__$3);
  var G__10958 = cljs.core.first(seq10953__$4);
  var seq10953__$5 = cljs.core.next(seq10953__$4);
  var G__10959 = cljs.core.first(seq10953__$5);
  var seq10953__$6 = cljs.core.next(seq10953__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__10954, G__10955, G__10956, G__10957, G__10958, G__10959, seq10953__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update() {
  var G__10991 = arguments.length;
  switch(G__10991) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5358__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__10992 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10992) : f.call(null, G__10992);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__10993 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__10994 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10993, G__10994) : f.call(null, G__10993, G__10994);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__10995 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__10996 = x;
    var G__10997 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10995, G__10996, G__10997) : f.call(null, G__10995, G__10996, G__10997);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__10998 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__10999 = x;
    var G__11000 = y;
    var G__11001 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10998, G__10999, G__11000, G__11001) : f.call(null, G__10998, G__10999, G__11000, G__11001);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq10983) {
  var G__10984 = cljs.core.first(seq10983);
  var seq10983__$1 = cljs.core.next(seq10983);
  var G__10985 = cljs.core.first(seq10983__$1);
  var seq10983__$2 = cljs.core.next(seq10983__$1);
  var G__10986 = cljs.core.first(seq10983__$2);
  var seq10983__$3 = cljs.core.next(seq10983__$2);
  var G__10987 = cljs.core.first(seq10983__$3);
  var seq10983__$4 = cljs.core.next(seq10983__$3);
  var G__10988 = cljs.core.first(seq10983__$4);
  var seq10983__$5 = cljs.core.next(seq10983__$4);
  var G__10989 = cljs.core.first(seq10983__$5);
  var seq10983__$6 = cljs.core.next(seq10983__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__10984, G__10985, G__10986, G__10987, G__10988, G__10989, seq10983__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__11003 = ll - 5;
      var G__11004 = r;
      ll = G__11003;
      ret = G__11004;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__11009 = cljs.core.pv_aget(node, 0);
      var G__11010 = level - 5;
      node = G__11009;
      level = G__11010;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__11011 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__11012 = level - 5;
        node = G__11011;
        level = G__11012;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__11022 = init__$2;
              var G__11023 = j + i;
              var G__11024 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11022, G__11023, G__11024) : f.call(null, G__11022, G__11023, G__11024);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__11035 = j + 1;
              var G__11036 = init__$3;
              j = G__11035;
              init__$2 = G__11036;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__11025 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11025) : cljs.core.deref.call(null, G__11025);
      } else {
        var G__11037 = i + len;
        var G__11038 = init__$2;
        i = G__11037;
        init__$1 = G__11038;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__11026 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__11026) : cljs.core.tv_editable_root.call(null, G__11026);
  }(), function() {
    var G__11027 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__11027) : cljs.core.tv_editable_tail.call(null, G__11027);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__11028 = init__$2;
              var G__11029 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11028, G__11029) : f.call(null, G__11028, G__11029);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__11039 = j + 1;
              var G__11040 = init__$3;
              j = G__11039;
              init__$2 = G__11040;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__11030 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11030) : cljs.core.deref.call(null, G__11030);
      } else {
        var G__11041 = i + len;
        var G__11042 = init__$2;
        i = G__11041;
        init__$1 = G__11042;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__11031 = coll__$1;
      var G__11032 = cljs.core.first_array_for_longvec(coll__$1);
      var G__11033 = 0;
      var G__11034 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11031, G__11032, G__11033, G__11034) : cljs.core.chunked_seq.call(null, G__11031, G__11032, G__11033, G__11034);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5192__auto___11043 = len;
    var i_11044 = 0;
    while (true) {
      if (i_11044 < n__5192__auto___11043) {
        new_tail[i_11044] = self__.tail[i_11044];
        var G__11045 = i_11044 + 1;
        i_11044 = G__11045;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__11046 = null;
  var G__11046__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__11046__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__11046 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11046__2.call(this, self__, k);
      case 3:
        return G__11046__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11046.cljs$core$IFn$_invoke$arity$2 = G__11046__2;
  G__11046.cljs$core$IFn$_invoke$arity$3 = G__11046__3;
  return G__11046;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args11021) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11021)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__11047 = i + 1;
        var G__11048 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__11047;
        out = G__11048;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq11049) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11049));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__11050 = self__.vec;
      var G__11051 = self__.node;
      var G__11052 = self__.i;
      var G__11053 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11050, G__11051, G__11052, G__11053) : cljs.core.chunked_seq.call(null, G__11050, G__11051, G__11052, G__11053);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__11054 = self__.vec;
    var G__11055 = self__.i + self__.off;
    var G__11056 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__11054, G__11055, G__11056) : cljs.core.subvec.call(null, G__11054, G__11055, G__11056);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__11057 = self__.vec;
    var G__11058 = self__.i + self__.off;
    var G__11059 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__11057, G__11058, G__11059) : cljs.core.subvec.call(null, G__11057, G__11058, G__11059);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__11060 = self__.vec;
      var G__11061 = self__.node;
      var G__11062 = self__.i;
      var G__11063 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11060, G__11061, G__11062, G__11063) : cljs.core.chunked_seq.call(null, G__11060, G__11061, G__11062, G__11063);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__11064 = self__.vec;
    var G__11065 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__11066 = end;
    var G__11067 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11064, G__11065, G__11066, G__11067) : cljs.core.chunked_seq.call(null, G__11064, G__11065, G__11066, G__11067);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__11068 = self__.vec;
  var G__11069 = self__.node;
  var G__11070 = self__.i;
  var G__11071 = self__.off;
  var G__11072 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__11068, G__11069, G__11070, G__11071, G__11072) : cljs.core.chunked_seq.call(null, G__11068, G__11069, G__11070, G__11071, G__11072);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__11073 = self__.vec;
    var G__11074 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__11075 = end;
    var G__11076 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11073, G__11074, G__11075, G__11076) : cljs.core.chunked_seq.call(null, G__11073, G__11074, G__11075, G__11076);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq() {
  var G__11078 = arguments.length;
  switch(G__11078) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__11081 = init__$1;
        var G__11082 = j;
        var G__11083 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11081, G__11082, G__11083) : f.call(null, G__11081, G__11082, G__11083);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__11084 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11084) : cljs.core.deref.call(null, G__11084);
      } else {
        var G__11106 = i + 1;
        var G__11107 = j + 1;
        var G__11108 = init__$2;
        i = G__11106;
        j = G__11107;
        init__$1 = G__11108;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__11085 = self__.meta;
  var G__11086 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__11087 = self__.start;
  var G__11088 = function() {
    var x__4619__auto__ = self__.end;
    var y__4620__auto__ = v_pos + 1;
    return x__4619__auto__ > y__4620__auto__ ? x__4619__auto__ : y__4620__auto__;
  }();
  var G__11089 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11085, G__11086, G__11087, G__11088, G__11089) : cljs.core.build_subvec.call(null, G__11085, G__11086, G__11087, G__11088, G__11089);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__11090 = self__.meta;
    var G__11091 = self__.v;
    var G__11092 = self__.start;
    var G__11093 = self__.end - 1;
    var G__11094 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11090, G__11091, G__11092, G__11093, G__11094) : cljs.core.build_subvec.call(null, G__11090, G__11091, G__11092, G__11093, G__11094);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__11096 = meta__$1;
  var G__11097 = self__.v;
  var G__11098 = self__.start;
  var G__11099 = self__.end;
  var G__11100 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11096, G__11097, G__11098, G__11099, G__11100) : cljs.core.build_subvec.call(null, G__11096, G__11097, G__11098, G__11099, G__11100);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__11101 = self__.meta;
  var G__11102 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__11103 = self__.start;
  var G__11104 = self__.end + 1;
  var G__11105 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11101, G__11102, G__11103, G__11104, G__11105) : cljs.core.build_subvec.call(null, G__11101, G__11102, G__11103, G__11104, G__11105);
};
cljs.core.Subvec.prototype.call = function() {
  var G__11109 = null;
  var G__11109__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__11109__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__11109 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11109__2.call(this, self__, k);
      case 3:
        return G__11109__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11109.cljs$core$IFn$_invoke$arity$2 = G__11109__2;
  G__11109.cljs$core$IFn$_invoke$arity$3 = G__11109__3;
  return G__11109;
}();
cljs.core.Subvec.prototype.apply = function(self__, args11080) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11080)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__11110 = meta;
      var G__11111 = v.v;
      var G__11112 = v.start + start;
      var G__11113 = v.start + end;
      var G__11114 = __hash;
      meta = G__11110;
      v = G__11111;
      start = G__11112;
      end = G__11113;
      __hash = G__11114;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec() {
  var G__11116 = arguments.length;
  switch(G__11116) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj11121 = {};
    return obj11121;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__11129 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__11130 = level - 5;
        node = G__11129;
        level = G__11130;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__11134 = null;
  var G__11134__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11134__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11134 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11134__2.call(this, self__, k);
      case 3:
        return G__11134__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11134.cljs$core$IFn$_invoke$arity$2 = G__11134__2;
  G__11134.cljs$core$IFn$_invoke$arity$3 = G__11134__3;
  return G__11134;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args11131) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11131)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null)], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4423__auto__ = cljs.core.next(self__.front);
  if (temp__4423__auto__) {
    var f1 = temp__4423__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4423__auto__ = cljs.core.next(self__.front);
    if (temp__4423__auto__) {
      var f1 = temp__4423__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4307__auto__ = self__.front;
    if (cljs.core.truth_(or__4307__auto__)) {
      return or__4307__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4307__auto__ = self__.rear;
      if (cljs.core.truth_(or__4307__auto__)) {
        return or__4307__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__11135 = i + incr;
        i = G__11135;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__11136 = i + 1;
      var G__11137 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__11136;
      out = G__11137;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = function() {
    var obj11141 = {};
    return obj11141;
  }();
  var l = ks.length;
  var i_11142 = 0;
  while (true) {
    if (i_11142 < l) {
      var k_11143 = ks[i_11142];
      new_obj[k_11143] = obj[k_11143];
      var G__11144 = i_11142 + 1;
      i_11142 = G__11144;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4295__auto__ = function() {
      var G__11148 = k;
      return goog.isString(G__11148);
    }();
    if (cljs.core.truth_(and__4295__auto__)) {
      return !(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4295__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__11149 = init__$1;
        var G__11150 = k;
        var G__11151 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11149, G__11150, G__11151) : f.call(null, G__11149, G__11150, G__11151);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__11152 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11152) : cljs.core.deref.call(null, G__11152);
      } else {
        var G__11158 = cljs.core.rest(keys__$1);
        var G__11159 = init__$2;
        keys__$1 = G__11158;
        init__$1 = G__11159;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4295__auto__ = function() {
      var G__11154 = k;
      return goog.isString(G__11154);
    }();
    if (cljs.core.truth_(and__4295__auto__)) {
      return !(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4295__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__11155 = k;
    return goog.isString(G__11155);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4295__auto__ = function() {
      var G__11157 = k;
      return goog.isString(G__11157);
    }();
    if (cljs.core.truth_(and__4295__auto__)) {
      return !(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4295__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__11145_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__11145_SHARP_, self__.strobj[p1__11145_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__11160 = null;
  var G__11160__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11160__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11160 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11160__2.call(this, self__, k);
      case 3:
        return G__11160__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11160.cljs$core$IFn$_invoke$arity$2 = G__11160__2;
  G__11160.cljs$core$IFn$_invoke$arity$3 = G__11160__3;
  return G__11160;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args11146) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11146)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj11162 = {};
  return obj11162;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__11163 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11163, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11163, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__11164 = i + 2;
        i = G__11164;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__11165 = i + 2;
        i = G__11165;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__11166 = i + 2;
        i = G__11166;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__11167 = i + 2;
        i = G__11167;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__11168 = i + 2;
        i = G__11168;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__4307__auto__ = function() {
        var G__11172 = k;
        return goog.isString(G__11172);
      }();
      if (cljs.core.truth_(or__4307__auto__)) {
        return or__4307__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_11173 = 0;
  while (true) {
    if (i_11173 < l) {
      narr[i_11173] = arr[i_11173];
      var G__11174 = i_11173 + 1;
      i_11173 = G__11174;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__11176 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11176) : cljs.core.keys.call(null, G__11176);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__11177 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11177) : cljs.core.vals.call(null, G__11177);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11178 = cljs.core.seq(coll);
  var chunk__11179 = null;
  var count__11180 = 0;
  var i__11181 = 0;
  while (true) {
    if (i__11181 < count__11180) {
      var vec__11182 = chunk__11179.cljs$core$IIndexed$_nth$arity$2(null, i__11181);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11182, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11182, 1, null);
      var G__11183_11196 = v;
      var G__11184_11197 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11183_11196, G__11184_11197) : f.call(null, G__11183_11196, G__11184_11197);
      var G__11198 = seq__11178;
      var G__11199 = chunk__11179;
      var G__11200 = count__11180;
      var G__11201 = i__11181 + 1;
      seq__11178 = G__11198;
      chunk__11179 = G__11199;
      count__11180 = G__11200;
      i__11181 = G__11201;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__11178);
      if (temp__4425__auto__) {
        var seq__11178__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11178__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first(seq__11178__$1);
          var G__11202 = cljs.core.chunk_rest(seq__11178__$1);
          var G__11203 = c__5092__auto__;
          var G__11204 = cljs.core.count(c__5092__auto__);
          var G__11205 = 0;
          seq__11178 = G__11202;
          chunk__11179 = G__11203;
          count__11180 = G__11204;
          i__11181 = G__11205;
          continue;
        } else {
          var vec__11185 = cljs.core.first(seq__11178__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11185, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11185, 1, null);
          var G__11186_11206 = v;
          var G__11187_11207 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11186_11206, G__11187_11207) : f.call(null, G__11186_11206, G__11187_11207);
          var G__11208 = cljs.core.next(seq__11178__$1);
          var G__11209 = null;
          var G__11210 = 0;
          var G__11211 = 0;
          seq__11178 = G__11208;
          chunk__11179 = G__11209;
          count__11180 = G__11210;
          i__11181 = G__11211;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__11188 = init__$1;
        var G__11189 = self__.arr[i];
        var G__11190 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11188, G__11189, G__11190) : f.call(null, G__11188, G__11189, G__11190);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__11191 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11191) : cljs.core.deref.call(null, G__11191);
      } else {
        var G__11212 = i + 2;
        var G__11213 = init__$2;
        i = G__11212;
        init__$1 = G__11213;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__11192 = other;
    if (G__11192) {
      var bit__4974__auto__ = G__11192.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4974__auto__ || G__11192.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__11214 = i + 2;
              i = G__11214;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj11194 = {};
    return obj11194;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__11215 = s + 2;
            var G__11216 = d;
            s = G__11215;
            d = G__11216;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__11217 = s + 2;
            var G__11218 = d + 2;
            s = G__11217;
            d = G__11218;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__11195 = cljs.core.aclone(self__.arr);
        G__11195[idx + 1] = v;
        return G__11195;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__11219 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__11220 = cljs.core.next(es);
          ret = G__11219;
          es = G__11220;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__11221 = null;
  var G__11221__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11221__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11221 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11221__2.call(this, self__, k);
      case 3:
        return G__11221__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11221.cljs$core$IFn$_invoke$arity$2 = G__11221__2;
  G__11221.cljs$core$IFn$_invoke$arity$3 = G__11221__3;
  return G__11221;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args11175) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11175)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_11222 = 0;
    while (true) {
      if (i_11222 < arr__$1.length) {
        var k_11223 = arr__$1[i_11222];
        var v_11224 = arr__$1[i_11222 + 1];
        var idx_11225 = cljs.core.array_index_of(ret, k_11223);
        if (idx_11225 === -1) {
          ret.push(k_11223);
          ret.push(v_11224);
        } else {
        }
        var G__11226 = i_11222 + 2;
        i_11222 = G__11226;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__11227 = o;
      if (G__11227) {
        var bit__4981__auto__ = G__11227.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4981__auto__ || G__11227.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__11227.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__11227);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__11227);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__11228 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11228) : cljs.core.key.call(null, G__11228);
      }(), function() {
        var G__11229 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11229) : cljs.core.val.call(null, G__11229);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__11235 = cljs.core.next(es);
          var G__11236 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__11230 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11230) : cljs.core.key.call(null, G__11230);
          }(), function() {
            var G__11231 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11231) : cljs.core.val.call(null, G__11231);
          }());
          es = G__11235;
          tcoll__$2 = G__11236;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__11232 = self__.len;
          var G__11233 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__11232, G__11233) : cljs.core.array__GT_transient_hash_map.call(null, G__11232, G__11233);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__11234_11237 = self__.arr;
      G__11234_11237.pop();
      G__11234_11237.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__11238 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__11239 = i + 2;
      out = G__11238;
      i = G__11239;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set() {
  var G__11241 = arguments.length;
  switch(G__11241) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__11242 = cljs.core.aclone(arr);
  G__11242[i] = a;
  return G__11242;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__11243 = cljs.core.aclone(arr);
  G__11243[i] = a;
  G__11243[j] = b;
  return G__11243;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set() {
  var G__11246 = arguments.length;
  switch(G__11246) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__11252 = init__$1;
          var G__11253 = k;
          var G__11254 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11252, G__11253, G__11254) : f.call(null, G__11252, G__11253, G__11254);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__11255 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11255) : cljs.core.deref.call(null, G__11255);
      } else {
        var G__11256 = i + 2;
        var G__11257 = init__$2;
        i = G__11256;
        init__$1 = G__11257;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__11258 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__11258) : cljs.core.create_inode_seq.call(null, G__11258);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_11272 = 0;
        var j_11273 = 0;
        while (true) {
          if (i_11272 < 32) {
            if ((self__.bitmap >>> i_11272 & 1) === 0) {
              var G__11274 = i_11272 + 1;
              var G__11275 = j_11273;
              i_11272 = G__11274;
              j_11273 = G__11275;
              continue;
            } else {
              nodes[i_11272] = !(self__.arr[j_11273] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_11273]), self__.arr[j_11273], self__.arr[j_11273 + 1], added_leaf_QMARK_) : self__.arr[j_11273 + 1];
              var G__11276 = i_11272 + 1;
              var G__11277 = j_11273 + 2;
              i_11272 = G__11276;
              j_11273 = G__11277;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__11259 = edit__$1;
          var G__11260 = shift + 5;
          var G__11261 = key_or_nil;
          var G__11262 = val_or_node;
          var G__11263 = hash;
          var G__11264 = key;
          var G__11265 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__11259, G__11260, G__11261, G__11262, G__11263, G__11264, G__11265) : cljs.core.create_node.call(null, G__11259, G__11260, G__11261, G__11262, G__11263, G__11264, G__11265);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_11278 = 0;
      var j_11279 = 0;
      while (true) {
        if (i_11278 < 32) {
          if ((self__.bitmap >>> i_11278 & 1) === 0) {
            var G__11280 = i_11278 + 1;
            var G__11281 = j_11279;
            i_11278 = G__11280;
            j_11279 = G__11281;
            continue;
          } else {
            nodes[i_11278] = !(self__.arr[j_11279] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_11279]), self__.arr[j_11279], self__.arr[j_11279 + 1], added_leaf_QMARK_) : self__.arr[j_11279 + 1];
            var G__11282 = i_11278 + 1;
            var G__11283 = j_11279 + 2;
            i_11278 = G__11282;
            j_11279 = G__11283;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__11266 = shift + 5;
          var G__11267 = key_or_nil;
          var G__11268 = val_or_node;
          var G__11269 = hash;
          var G__11270 = key;
          var G__11271 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__11266, G__11267, G__11268, G__11269, G__11270, G__11271) : cljs.core.create_node.call(null, G__11266, G__11267, G__11268, G__11269, G__11270, G__11271);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__11284 = i + 1;
        var G__11285 = j + 2;
        var G__11286 = bitmap | 1 << i;
        i = G__11284;
        j = G__11285;
        bitmap = G__11286;
        continue;
      } else {
        var G__11287 = i + 1;
        var G__11288 = j;
        var G__11289 = bitmap;
        i = G__11287;
        j = G__11288;
        bitmap = G__11289;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__11290 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__11290) : cljs.core.create_array_node_seq.call(null, G__11290);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__11291 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11291) : cljs.core.deref.call(null, G__11291);
        } else {
          var G__11292 = i + 1;
          var G__11293 = init__$2;
          i = G__11292;
          init__$1 = G__11293;
          continue;
        }
      } else {
        var G__11294 = i + 1;
        var G__11295 = init__$1;
        i = G__11294;
        init__$1 = G__11295;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__11296 = i + 2;
        i = G__11296;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__11297 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__11297) : cljs.core.create_inode_seq.call(null, G__11297);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node() {
  var G__11299 = arguments.length;
  switch(G__11299) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__11301 = self__.nodes;
    var G__11302 = self__.i + 2;
    var G__11303 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11301, G__11302, G__11303) : cljs.core.create_inode_seq.call(null, G__11301, G__11302, G__11303);
  } else {
    var G__11304 = self__.nodes;
    var G__11305 = self__.i;
    var G__11306 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11304, G__11305, G__11306) : cljs.core.create_inode_seq.call(null, G__11304, G__11305, G__11306);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq() {
  var G__11308 = arguments.length;
  switch(G__11308) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4423__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var node = temp__4423__auto__;
            var temp__4423__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4423__auto____$1)) {
              var node_seq = temp__4423__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__11310 = j + 2;
              j = G__11310;
              continue;
            }
          } else {
            var G__11311 = j + 2;
            j = G__11311;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__11312 = null;
  var G__11313 = self__.nodes;
  var G__11314 = self__.i;
  var G__11315 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__11312, G__11313, G__11314, G__11315) : cljs.core.create_array_node_seq.call(null, G__11312, G__11313, G__11314, G__11315);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq() {
  var G__11317 = arguments.length;
  switch(G__11317) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4423__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4423__auto__)) {
          var nj = temp__4423__auto__;
          var temp__4423__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4423__auto____$1)) {
            var ns = temp__4423__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__11319 = j + 1;
            j = G__11319;
            continue;
          }
        } else {
          var G__11320 = j + 1;
          j = G__11320;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__11322 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11322) : cljs.core.keys.call(null, G__11322);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__11323 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11323) : cljs.core.vals.call(null, G__11323);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11324 = cljs.core.seq(coll);
  var chunk__11325 = null;
  var count__11326 = 0;
  var i__11327 = 0;
  while (true) {
    if (i__11327 < count__11326) {
      var vec__11328 = chunk__11325.cljs$core$IIndexed$_nth$arity$2(null, i__11327);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11328, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11328, 1, null);
      var G__11329_11340 = v;
      var G__11330_11341 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11329_11340, G__11330_11341) : f.call(null, G__11329_11340, G__11330_11341);
      var G__11342 = seq__11324;
      var G__11343 = chunk__11325;
      var G__11344 = count__11326;
      var G__11345 = i__11327 + 1;
      seq__11324 = G__11342;
      chunk__11325 = G__11343;
      count__11326 = G__11344;
      i__11327 = G__11345;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__11324);
      if (temp__4425__auto__) {
        var seq__11324__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11324__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first(seq__11324__$1);
          var G__11346 = cljs.core.chunk_rest(seq__11324__$1);
          var G__11347 = c__5092__auto__;
          var G__11348 = cljs.core.count(c__5092__auto__);
          var G__11349 = 0;
          seq__11324 = G__11346;
          chunk__11325 = G__11347;
          count__11326 = G__11348;
          i__11327 = G__11349;
          continue;
        } else {
          var vec__11331 = cljs.core.first(seq__11324__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11331, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11331, 1, null);
          var G__11332_11350 = v;
          var G__11333_11351 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11332_11350, G__11333_11351) : f.call(null, G__11332_11350, G__11333_11351);
          var G__11352 = cljs.core.next(seq__11324__$1);
          var G__11353 = null;
          var G__11354 = 0;
          var G__11355 = 0;
          seq__11324 = G__11352;
          chunk__11325 = G__11353;
          count__11326 = G__11354;
          i__11327 = G__11355;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__11334 = init;
    var G__11335 = null;
    var G__11336 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11334, G__11335, G__11336) : f.call(null, G__11334, G__11335, G__11336);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__11337 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11337) : cljs.core.deref.call(null, G__11337);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj11339 = {};
    return obj11339;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__11356 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__11357 = cljs.core.next(es);
          ret = G__11356;
          es = G__11357;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__11358 = null;
  var G__11358__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11358__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11358 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11358__2.call(this, self__, k);
      case 3:
        return G__11358__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11358.cljs$core$IFn$_invoke$arity$2 = G__11358__2;
  G__11358.cljs$core$IFn$_invoke$arity$3 = G__11358__3;
  return G__11358;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args11321) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11321)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__11359 = i + 2;
      var G__11360 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__11359;
      ret = G__11360;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__11361 = i + 1;
      var G__11362 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__11361;
      out = G__11362;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__11363 = o;
      if (G__11363) {
        var bit__4981__auto__ = G__11363.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4981__auto__ || G__11363.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__11363.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__11363);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__11363);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__11364 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11364) : cljs.core.key.call(null, G__11364);
      }(), function() {
        var G__11365 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11365) : cljs.core.val.call(null, G__11365);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__11368 = cljs.core.next(es);
          var G__11369 = tcoll__$1.assoc_BANG_(function() {
            var G__11366 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11366) : cljs.core.key.call(null, G__11366);
          }(), function() {
            var G__11367 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11367) : cljs.core.val.call(null, G__11367);
          }());
          es = G__11368;
          tcoll__$1 = G__11369;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null)], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__11370 = ascending_QMARK_ ? t.left : t.right;
      var G__11371 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__11370;
      stack__$1 = G__11371;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__11384 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11384) : cljs.core.deref.call(null, G__11384);
  } else {
    var init__$2 = function() {
      var G__11385 = init__$1;
      var G__11386 = node.key;
      var G__11387 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11385, G__11386, G__11387) : f.call(null, G__11385, G__11386, G__11387);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__11388 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11388) : cljs.core.deref.call(null, G__11388);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__11389 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11389) : cljs.core.deref.call(null, G__11389);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__11391 = null;
  var G__11391__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11391__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11391 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11391__2.call(this, self__, k);
      case 3:
        return G__11391__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11391.cljs$core$IFn$_invoke$arity$2 = G__11391__2;
  G__11391.cljs$core$IFn$_invoke$arity$3 = G__11391__3;
  return G__11391;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args11390) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11390)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__11393 = null;
  var G__11393__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11393__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11393 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11393__2.call(this, self__, k);
      case 3:
        return G__11393__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11393.cljs$core$IFn$_invoke$arity$2 = G__11393__2;
  G__11393.cljs$core$IFn$_invoke$arity$3 = G__11393__3;
  return G__11393;
}();
cljs.core.RedNode.prototype.apply = function(self__, args11392) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11392)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__11406 = k;
      var G__11407 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11406, G__11407) : comp.call(null, G__11406, G__11407);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__11426 = k;
      var G__11427 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11426, G__11427) : comp.call(null, G__11426, G__11427);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__11438 = k;
    var G__11439 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11438, G__11439) : comp.call(null, G__11438, G__11439);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11441 = cljs.core.seq(coll);
  var chunk__11442 = null;
  var count__11443 = 0;
  var i__11444 = 0;
  while (true) {
    if (i__11444 < count__11443) {
      var vec__11445 = chunk__11442.cljs$core$IIndexed$_nth$arity$2(null, i__11444);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11445, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11445, 1, null);
      var G__11446_11458 = v;
      var G__11447_11459 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11446_11458, G__11447_11459) : f.call(null, G__11446_11458, G__11447_11459);
      var G__11460 = seq__11441;
      var G__11461 = chunk__11442;
      var G__11462 = count__11443;
      var G__11463 = i__11444 + 1;
      seq__11441 = G__11460;
      chunk__11442 = G__11461;
      count__11443 = G__11462;
      i__11444 = G__11463;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__11441);
      if (temp__4425__auto__) {
        var seq__11441__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11441__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first(seq__11441__$1);
          var G__11464 = cljs.core.chunk_rest(seq__11441__$1);
          var G__11465 = c__5092__auto__;
          var G__11466 = cljs.core.count(c__5092__auto__);
          var G__11467 = 0;
          seq__11441 = G__11464;
          chunk__11442 = G__11465;
          count__11443 = G__11466;
          i__11444 = G__11467;
          continue;
        } else {
          var vec__11448 = cljs.core.first(seq__11441__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11448, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11448, 1, null);
          var G__11449_11468 = v;
          var G__11450_11469 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11449_11468, G__11450_11469) : f.call(null, G__11449_11468, G__11450_11469);
          var G__11470 = cljs.core.next(seq__11441__$1);
          var G__11471 = null;
          var G__11472 = 0;
          var G__11473 = 0;
          seq__11441 = G__11470;
          chunk__11442 = G__11471;
          count__11443 = G__11472;
          i__11444 = G__11473;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__11451 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11451) : cljs.core.keys.call(null, G__11451);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__11452 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11452) : cljs.core.vals.call(null, G__11452);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__11453 = k;
        var G__11454 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11453, G__11454) : self__.comp.call(null, G__11453, G__11454);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__11474 = t.left;
          t = G__11474;
          continue;
        } else {
          var G__11475 = t.right;
          t = G__11475;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__11476 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__11477 = cljs.core.next(es);
          ret = G__11476;
          es = G__11477;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__11478 = null;
  var G__11478__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11478__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11478 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11478__2.call(this, self__, k);
      case 3:
        return G__11478__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11478.cljs$core$IFn$_invoke$arity$2 = G__11478__2;
  G__11478.cljs$core$IFn$_invoke$arity$3 = G__11478__3;
  return G__11478;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args11440) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11440)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__11455 = k;
          var G__11456 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11455, G__11456) : self__.comp.call(null, G__11455, G__11456);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__11479 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__11480 = t.left;
              stack = G__11479;
              t = G__11480;
              continue;
            } else {
              var G__11481 = stack;
              var G__11482 = t.right;
              stack = G__11481;
              t = G__11482;
              continue;
            }
          } else {
            if (c > 0) {
              var G__11483 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__11484 = t.right;
              stack = G__11483;
              t = G__11484;
              continue;
            } else {
              var G__11485 = stack;
              var G__11486 = t.left;
              stack = G__11485;
              t = G__11486;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__11457 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11457) : cljs.core.key.call(null, G__11457);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__11488 = cljs.core.nnext(in$);
      var G__11489 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__11488;
      out = G__11489;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq11487) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11487));
};
cljs.core.array_map = function cljs$core$array_map() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq11490) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11490));
};
cljs.core.obj_map = function cljs$core$obj_map() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = function() {
    var obj11493 = {};
    return obj11493;
  }();
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__11494 = cljs.core.nnext(kvs);
      kvs = G__11494;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq11491) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11491));
};
cljs.core.sorted_map = function cljs$core$sorted_map() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__11496 = cljs.core.nnext(in$);
      var G__11497 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__11496;
      out = G__11497;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq11495) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11495));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by() {
  var argseq__5347__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5347__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__11500 = cljs.core.nnext(in$);
      var G__11501 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__11500;
      out = G__11501;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq11498) {
  var G__11499 = cljs.core.first(seq11498);
  var seq11498__$1 = cljs.core.next(seq11498);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__11499, seq11498__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11502 = self__.mseq;
    if (G__11502) {
      var bit__4981__auto__ = G__11502.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4981__auto__ || G__11502.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11502.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__11502);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__11502);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11503 = self__.mseq;
    if (G__11503) {
      var bit__4981__auto__ = G__11503.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4981__auto__ || G__11503.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11503.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__11503);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__11503);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11504 = self__.mseq;
    if (G__11504) {
      var bit__4981__auto__ = G__11504.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4981__auto__ || G__11504.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11504.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__11504);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__11504);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11505 = self__.mseq;
    if (G__11505) {
      var bit__4981__auto__ = G__11505.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4981__auto__ || G__11505.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11505.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__11505);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__11505);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__11506_SHARP_, p2__11507_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4307__auto__ = p1__11506_SHARP_;
        if (cljs.core.truth_(or__4307__auto__)) {
          return or__4307__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__11507_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq11508) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11508));
};
cljs.core.merge_with = function cljs$core$merge_with() {
  var argseq__5347__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5347__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__11511 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__11512 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11511, G__11512) : f.call(null, G__11511, G__11512);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4307__auto__ = m1;
          if (cljs.core.truth_(or__4307__auto__)) {
            return or__4307__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq11509) {
  var G__11510 = cljs.core.first(seq11509);
  var seq11509__$1 = cljs.core.next(seq11509);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__11510, seq11509__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__11513 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__11514 = cljs.core.next(keys);
      ret = G__11513;
      keys = G__11514;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11517 = cljs.core.seq(coll);
  var chunk__11518 = null;
  var count__11519 = 0;
  var i__11520 = 0;
  while (true) {
    if (i__11520 < count__11519) {
      var vec__11521 = chunk__11518.cljs$core$IIndexed$_nth$arity$2(null, i__11520);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11521, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11521, 1, null);
      var G__11522_11527 = v;
      var G__11523_11528 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11522_11527, G__11523_11528) : f.call(null, G__11522_11527, G__11523_11528);
      var G__11529 = seq__11517;
      var G__11530 = chunk__11518;
      var G__11531 = count__11519;
      var G__11532 = i__11520 + 1;
      seq__11517 = G__11529;
      chunk__11518 = G__11530;
      count__11519 = G__11531;
      i__11520 = G__11532;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__11517);
      if (temp__4425__auto__) {
        var seq__11517__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11517__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first(seq__11517__$1);
          var G__11533 = cljs.core.chunk_rest(seq__11517__$1);
          var G__11534 = c__5092__auto__;
          var G__11535 = cljs.core.count(c__5092__auto__);
          var G__11536 = 0;
          seq__11517 = G__11533;
          chunk__11518 = G__11534;
          count__11519 = G__11535;
          i__11520 = G__11536;
          continue;
        } else {
          var vec__11524 = cljs.core.first(seq__11517__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11524, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11524, 1, null);
          var G__11525_11537 = v;
          var G__11526_11538 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11525_11537, G__11526_11538) : f.call(null, G__11525_11537, G__11526_11538);
          var G__11539 = cljs.core.next(seq__11517__$1);
          var G__11540 = null;
          var G__11541 = 0;
          var G__11542 = 0;
          seq__11517 = G__11539;
          chunk__11518 = G__11540;
          count__11519 = G__11541;
          i__11520 = G__11542;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__11515_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__11515_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__11543 = null;
  var G__11543__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11543__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11543 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11543__2.call(this, self__, k);
      case 3:
        return G__11543__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11543.cljs$core$IFn$_invoke$arity$2 = G__11543__2;
  G__11543.cljs$core$IFn$_invoke$arity$3 = G__11543__3;
  return G__11543;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args11516) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11516)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__11544 = i + 1;
        var G__11545 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__11544;
        out = G__11545;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__11546 = i + 1;
        var G__11547 = cljs.core._conj_BANG_(out, items[i]);
        i = G__11546;
        out = G__11547;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__11549 = null;
  var G__11549__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__11549__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__11549 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11549__2.call(this, self__, k);
      case 3:
        return G__11549__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11549.cljs$core$IFn$_invoke$arity$2 = G__11549__2;
  G__11549.cljs$core$IFn$_invoke$arity$3 = G__11549__3;
  return G__11549;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args11548) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11548)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null)], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11552 = cljs.core.seq(coll);
  var chunk__11553 = null;
  var count__11554 = 0;
  var i__11555 = 0;
  while (true) {
    if (i__11555 < count__11554) {
      var vec__11556 = chunk__11553.cljs$core$IIndexed$_nth$arity$2(null, i__11555);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11556, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11556, 1, null);
      var G__11557_11562 = v;
      var G__11558_11563 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11557_11562, G__11558_11563) : f.call(null, G__11557_11562, G__11558_11563);
      var G__11564 = seq__11552;
      var G__11565 = chunk__11553;
      var G__11566 = count__11554;
      var G__11567 = i__11555 + 1;
      seq__11552 = G__11564;
      chunk__11553 = G__11565;
      count__11554 = G__11566;
      i__11555 = G__11567;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__11552);
      if (temp__4425__auto__) {
        var seq__11552__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11552__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first(seq__11552__$1);
          var G__11568 = cljs.core.chunk_rest(seq__11552__$1);
          var G__11569 = c__5092__auto__;
          var G__11570 = cljs.core.count(c__5092__auto__);
          var G__11571 = 0;
          seq__11552 = G__11568;
          chunk__11553 = G__11569;
          count__11554 = G__11570;
          i__11555 = G__11571;
          continue;
        } else {
          var vec__11559 = cljs.core.first(seq__11552__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11559, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11559, 1, null);
          var G__11560_11572 = v;
          var G__11561_11573 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11560_11572, G__11561_11573) : f.call(null, G__11560_11572, G__11561_11573);
          var G__11574 = cljs.core.next(seq__11552__$1);
          var G__11575 = null;
          var G__11576 = 0;
          var G__11577 = 0;
          seq__11552 = G__11574;
          chunk__11553 = G__11575;
          count__11554 = G__11576;
          i__11555 = G__11577;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__11550_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__11550_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__11578 = null;
  var G__11578__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11578__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11578 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11578__2.call(this, self__, k);
      case 3:
        return G__11578__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11578.cljs$core$IFn$_invoke$arity$2 = G__11578__2;
  G__11578.cljs$core$IFn$_invoke$arity$3 = G__11578__3;
  return G__11578;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args11551) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11551)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5186__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5186__auto__.length) {
        var G__11579 = i + 1;
        var G__11580 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__11579;
        res = G__11580;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__11581 = cljs.core.next(in$__$1);
          var G__11582 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__11581;
          out = G__11582;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set() {
  var G__11585 = arguments.length;
  switch(G__11585) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5358__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq11583) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11583));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq11587) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11587));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by() {
  var argseq__5347__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5347__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq11588) {
  var G__11589 = cljs.core.first(seq11588);
  var seq11588__$1 = cljs.core.next(seq11588);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__11589, seq11588__$1);
};
cljs.core.replace = function cljs$core$replace() {
  var G__11593 = arguments.length;
  switch(G__11593) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__11590_SHARP_) {
    var temp__4423__auto__ = cljs.core.find(smap, p1__11590_SHARP_);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var e = temp__4423__auto__;
      return cljs.core.val(e);
    } else {
      return p1__11590_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4423__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__11591_SHARP_) {
      var temp__4423__auto__ = cljs.core.find(smap, p1__11591_SHARP_);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var e = temp__4423__auto__;
        return cljs.core.second(e);
      } else {
        return p1__11591_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct() {
  var G__11596 = arguments.length;
  switch(G__11596) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__11608 = null;
        var G__11608__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11608__1 = function(result) {
          var G__11597 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11597) : rf.call(null, G__11597);
        };
        var G__11608__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(function() {
            var G__11598 = seen;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11598) : cljs.core.deref.call(null, G__11598);
          }(), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            var G__11599 = result;
            var G__11600 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11599, G__11600) : rf.call(null, G__11599, G__11600);
          }
        };
        G__11608 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11608__0.call(this);
            case 1:
              return G__11608__1.call(this, result);
            case 2:
              return G__11608__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11608.cljs$core$IFn$_invoke$arity$0 = G__11608__0;
        G__11608.cljs$core$IFn$_invoke$arity$1 = G__11608__1;
        G__11608.cljs$core$IFn$_invoke$arity$2 = G__11608__2;
        return G__11608;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__11605, seen__$1) {
        while (true) {
          var vec__11606 = p__11605;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11606, 0, null);
          var xs__$1 = vec__11606;
          var temp__4425__auto__ = cljs.core.seq(xs__$1);
          if (temp__4425__auto__) {
            var s = temp__4425__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__11609 = cljs.core.rest(s);
              var G__11610 = seen__$1;
              p__11605 = G__11609;
              seen__$1 = G__11610;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__11611 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__11612 = cljs.core.next(s__$1);
      ret = G__11611;
      s__$1 = G__11612;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (function() {
    var G__11614 = x;
    if (G__11614) {
      var bit__4974__auto__ = G__11614.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4974__auto__ || G__11614.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__11615 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__11616 = cljs.core.next(ks);
      var G__11617 = cljs.core.next(vs);
      map = G__11615;
      ks = G__11616;
      vs = G__11617;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key() {
  var G__11625 = arguments.length;
  switch(G__11625) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if (function() {
    var G__11626 = x;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11626) : k.call(null, G__11626);
  }() > function() {
    var G__11627 = y;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11627) : k.call(null, G__11627);
  }()) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__11618_SHARP_, p2__11619_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__11618_SHARP_, p2__11619_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq11620) {
  var G__11621 = cljs.core.first(seq11620);
  var seq11620__$1 = cljs.core.next(seq11620);
  var G__11622 = cljs.core.first(seq11620__$1);
  var seq11620__$2 = cljs.core.next(seq11620__$1);
  var G__11623 = cljs.core.first(seq11620__$2);
  var seq11620__$3 = cljs.core.next(seq11620__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__11621, G__11622, G__11623, seq11620__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key() {
  var G__11636 = arguments.length;
  switch(G__11636) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if (function() {
    var G__11637 = x;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11637) : k.call(null, G__11637);
  }() < function() {
    var G__11638 = y;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11638) : k.call(null, G__11638);
  }()) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__11629_SHARP_, p2__11630_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__11629_SHARP_, p2__11630_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq11631) {
  var G__11632 = cljs.core.first(seq11631);
  var seq11631__$1 = cljs.core.next(seq11631);
  var G__11633 = cljs.core.first(seq11631__$1);
  var seq11631__$2 = cljs.core.next(seq11631__$1);
  var G__11634 = cljs.core.first(seq11631__$2);
  var seq11631__$3 = cljs.core.next(seq11631__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__11632, G__11633, G__11634, seq11631__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all() {
  var G__11641 = arguments.length;
  switch(G__11641) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__11648 = null;
        var G__11648__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11648__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(function() {
              var G__11642 = result;
              var G__11643 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11642, G__11643) : rf.call(null, G__11642, G__11643);
            }());
          }();
          var G__11644 = result__$1;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11644) : rf.call(null, G__11644);
        };
        var G__11648__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var G__11645 = result;
            var G__11646 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11645, G__11646) : rf.call(null, G__11645, G__11646);
          } else {
            return result;
          }
        };
        G__11648 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11648__0.call(this);
            case 1:
              return G__11648__1.call(this, result);
            case 2:
              return G__11648__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11648.cljs$core$IFn$_invoke$arity$0 = G__11648__0;
        G__11648.cljs$core$IFn$_invoke$arity$1 = G__11648__1;
        G__11648.cljs$core$IFn$_invoke$arity$2 = G__11648__2;
        return G__11648;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while() {
  var G__11650 = arguments.length;
  switch(G__11650) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__11657 = null;
      var G__11657__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11657__1 = function(result) {
        var G__11651 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11651) : rf.call(null, G__11651);
      };
      var G__11657__2 = function(result, input) {
        if (cljs.core.truth_(function() {
          var G__11652 = input;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11652) : pred.call(null, G__11652);
        }())) {
          var G__11653 = result;
          var G__11654 = input;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11653, G__11654) : rf.call(null, G__11653, G__11654);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__11657 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__11657__0.call(this);
          case 1:
            return G__11657__1.call(this, result);
          case 2:
            return G__11657__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11657.cljs$core$IFn$_invoke$arity$0 = G__11657__0;
      G__11657.cljs$core$IFn$_invoke$arity$1 = G__11657__1;
      G__11657.cljs$core$IFn$_invoke$arity$2 = G__11657__2;
      return G__11657;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.truth_(function() {
        var G__11655 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11655) : pred.call(null, G__11655);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__11662 = function() {
      var G__11664 = cljs.core._entry_key(sc, e);
      var G__11665 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11664, G__11665) : comp.call(null, G__11664, G__11665);
    }();
    var G__11663 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__11662, G__11663) : test.call(null, G__11662, G__11663);
  };
};
cljs.core.subseq = function cljs$core$subseq() {
  var G__11667 = arguments.length;
  switch(G__11667) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__11668 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11668, 0, null);
      var s = vec__11668;
      if (cljs.core.truth_(function() {
        var G__11669 = e;
        return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__11669) : include.call(null, G__11669);
      }())) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__11670 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11670, 0, null);
    var s = vec__11670;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq() {
  var G__11673 = arguments.length;
  switch(G__11673) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__11674 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11674, 0, null);
      var s = vec__11674;
      if (cljs.core.truth_(function() {
        var G__11675 = e;
        return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__11675) : include.call(null, G__11675);
      }())) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__11676 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11676, 0, null);
    var s = vec__11676;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__11678 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__11678);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4723__auto__ = self__.__hash;
  if (!(h__4723__auto__ == null)) {
    return h__4723__auto__;
  } else {
    var h__4723__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4723__auto____$1;
    return h__4723__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__11679 = ret;
        var G__11680 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11679, G__11680) : f.call(null, G__11679, G__11680);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__11681 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11681) : cljs.core.deref.call(null, G__11681);
      } else {
        var G__11682 = i + self__.step;
        var G__11683 = ret__$1;
        i = G__11682;
        ret = G__11683;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.range = function cljs$core$range() {
  var G__11685 = arguments.length;
  switch(G__11685) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth() {
  var G__11688 = arguments.length;
  switch(G__11688) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__11693 = null;
        var G__11693__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11693__1 = function(result) {
          var G__11689 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11689) : rf.call(null, G__11689);
        };
        var G__11693__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            var G__11690 = result;
            var G__11691 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11690, G__11691) : rf.call(null, G__11690, G__11691);
          } else {
            return result;
          }
        };
        G__11693 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11693__0.call(this);
            case 1:
              return G__11693__1.call(this, result);
            case 2:
              return G__11693__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11693.cljs$core$IFn$_invoke$arity$0 = G__11693__0;
        G__11693.cljs$core$IFn$_invoke$arity$1 = G__11693__1;
        G__11693.cljs$core$IFn$_invoke$arity$2 = G__11693__2;
        return G__11693;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by() {
  var G__11696 = arguments.length;
  switch(G__11696) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__11707 = null;
        var G__11707__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11707__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(function() {
              var G__11697 = result;
              var G__11698 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11697, G__11698) : rf.call(null, G__11697, G__11698);
            }());
          }();
          var G__11699 = result__$1;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11699) : rf.call(null, G__11699);
        };
        var G__11707__2 = function(result, input) {
          var pval = function() {
            var G__11700 = pa;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11700) : cljs.core.deref.call(null, G__11700);
          }();
          var val = function() {
            var G__11701 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11701) : f.call(null, G__11701);
          }();
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = function() {
              var G__11702 = result;
              var G__11703 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11702, G__11703) : rf.call(null, G__11702, G__11703);
            }();
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__11707 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11707__0.call(this);
            case 1:
              return G__11707__1.call(this, result);
            case 2:
              return G__11707__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11707.cljs$core$IFn$_invoke$arity$0 = G__11707__0;
        G__11707.cljs$core$IFn$_invoke$arity$1 = G__11707__1;
        G__11707.cljs$core$IFn$_invoke$arity$2 = G__11707__2;
        return G__11707;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var fst = cljs.core.first(s);
      var fv = function() {
        var G__11704 = fst;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11704) : f.call(null, G__11704);
      }();
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4425__auto__) {
        return function(p1__11694_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
            var G__11705 = p1__11694_SHARP_;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11705) : f.call(null, G__11705);
          }());
        };
      }(fst, fv, s, temp__4425__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions() {
  var G__11709 = arguments.length;
  switch(G__11709) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4423__auto__ = cljs.core.seq(coll);
    if (temp__4423__auto__) {
      var s = temp__4423__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__11710 = init;
        var G__11711 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11710, G__11711) : f.call(null, G__11710, G__11711);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt() {
  var G__11728 = arguments.length;
  switch(G__11728) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__11772 = null;
    var G__11772__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }()], null);
    };
    var G__11772__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__11729 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11729) : f.call(null, G__11729);
      }()], null);
    };
    var G__11772__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__11730 = x;
        var G__11731 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11730, G__11731) : f.call(null, G__11730, G__11731);
      }()], null);
    };
    var G__11772__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__11732 = x;
        var G__11733 = y;
        var G__11734 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11732, G__11733, G__11734) : f.call(null, G__11732, G__11733, G__11734);
      }()], null);
    };
    var G__11772__4 = function() {
      var G__11773__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__11773 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11774__i = 0, G__11774__a = new Array(arguments.length - 3);
          while (G__11774__i < G__11774__a.length) {
            G__11774__a[G__11774__i] = arguments[G__11774__i + 3];
            ++G__11774__i;
          }
          args = new cljs.core.IndexedSeq(G__11774__a, 0);
        }
        return G__11773__delegate.call(this, x, y, z, args);
      };
      G__11773.cljs$lang$maxFixedArity = 3;
      G__11773.cljs$lang$applyTo = function(arglist__11775) {
        var x = cljs.core.first(arglist__11775);
        arglist__11775 = cljs.core.next(arglist__11775);
        var y = cljs.core.first(arglist__11775);
        arglist__11775 = cljs.core.next(arglist__11775);
        var z = cljs.core.first(arglist__11775);
        var args = cljs.core.rest(arglist__11775);
        return G__11773__delegate(x, y, z, args);
      };
      G__11773.cljs$core$IFn$_invoke$arity$variadic = G__11773__delegate;
      return G__11773;
    }();
    G__11772 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__11772__0.call(this);
        case 1:
          return G__11772__1.call(this, x);
        case 2:
          return G__11772__2.call(this, x, y);
        case 3:
          return G__11772__3.call(this, x, y, z);
        default:
          var G__11776 = null;
          if (arguments.length > 3) {
            var G__11777__i = 0, G__11777__a = new Array(arguments.length - 3);
            while (G__11777__i < G__11777__a.length) {
              G__11777__a[G__11777__i] = arguments[G__11777__i + 3];
              ++G__11777__i;
            }
            G__11776 = new cljs.core.IndexedSeq(G__11777__a, 0);
          }
          return G__11772__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11776);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11772.cljs$lang$maxFixedArity = 3;
    G__11772.cljs$lang$applyTo = G__11772__4.cljs$lang$applyTo;
    G__11772.cljs$core$IFn$_invoke$arity$0 = G__11772__0;
    G__11772.cljs$core$IFn$_invoke$arity$1 = G__11772__1;
    G__11772.cljs$core$IFn$_invoke$arity$2 = G__11772__2;
    G__11772.cljs$core$IFn$_invoke$arity$3 = G__11772__3;
    G__11772.cljs$core$IFn$_invoke$arity$variadic = G__11772__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11772;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__11778 = null;
    var G__11778__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }()], null);
    };
    var G__11778__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__11735 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11735) : f.call(null, G__11735);
      }(), function() {
        var G__11736 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11736) : g.call(null, G__11736);
      }()], null);
    };
    var G__11778__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__11737 = x;
        var G__11738 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11737, G__11738) : f.call(null, G__11737, G__11738);
      }(), function() {
        var G__11739 = x;
        var G__11740 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__11739, G__11740) : g.call(null, G__11739, G__11740);
      }()], null);
    };
    var G__11778__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__11741 = x;
        var G__11742 = y;
        var G__11743 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11741, G__11742, G__11743) : f.call(null, G__11741, G__11742, G__11743);
      }(), function() {
        var G__11744 = x;
        var G__11745 = y;
        var G__11746 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__11744, G__11745, G__11746) : g.call(null, G__11744, G__11745, G__11746);
      }()], null);
    };
    var G__11778__4 = function() {
      var G__11779__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__11779 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11780__i = 0, G__11780__a = new Array(arguments.length - 3);
          while (G__11780__i < G__11780__a.length) {
            G__11780__a[G__11780__i] = arguments[G__11780__i + 3];
            ++G__11780__i;
          }
          args = new cljs.core.IndexedSeq(G__11780__a, 0);
        }
        return G__11779__delegate.call(this, x, y, z, args);
      };
      G__11779.cljs$lang$maxFixedArity = 3;
      G__11779.cljs$lang$applyTo = function(arglist__11781) {
        var x = cljs.core.first(arglist__11781);
        arglist__11781 = cljs.core.next(arglist__11781);
        var y = cljs.core.first(arglist__11781);
        arglist__11781 = cljs.core.next(arglist__11781);
        var z = cljs.core.first(arglist__11781);
        var args = cljs.core.rest(arglist__11781);
        return G__11779__delegate(x, y, z, args);
      };
      G__11779.cljs$core$IFn$_invoke$arity$variadic = G__11779__delegate;
      return G__11779;
    }();
    G__11778 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__11778__0.call(this);
        case 1:
          return G__11778__1.call(this, x);
        case 2:
          return G__11778__2.call(this, x, y);
        case 3:
          return G__11778__3.call(this, x, y, z);
        default:
          var G__11782 = null;
          if (arguments.length > 3) {
            var G__11783__i = 0, G__11783__a = new Array(arguments.length - 3);
            while (G__11783__i < G__11783__a.length) {
              G__11783__a[G__11783__i] = arguments[G__11783__i + 3];
              ++G__11783__i;
            }
            G__11782 = new cljs.core.IndexedSeq(G__11783__a, 0);
          }
          return G__11778__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11782);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11778.cljs$lang$maxFixedArity = 3;
    G__11778.cljs$lang$applyTo = G__11778__4.cljs$lang$applyTo;
    G__11778.cljs$core$IFn$_invoke$arity$0 = G__11778__0;
    G__11778.cljs$core$IFn$_invoke$arity$1 = G__11778__1;
    G__11778.cljs$core$IFn$_invoke$arity$2 = G__11778__2;
    G__11778.cljs$core$IFn$_invoke$arity$3 = G__11778__3;
    G__11778.cljs$core$IFn$_invoke$arity$variadic = G__11778__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11778;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__11784 = null;
    var G__11784__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }(), function() {
        return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
      }()], null);
    };
    var G__11784__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__11747 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11747) : f.call(null, G__11747);
      }(), function() {
        var G__11748 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11748) : g.call(null, G__11748);
      }(), function() {
        var G__11749 = x;
        return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__11749) : h.call(null, G__11749);
      }()], null);
    };
    var G__11784__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__11750 = x;
        var G__11751 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11750, G__11751) : f.call(null, G__11750, G__11751);
      }(), function() {
        var G__11752 = x;
        var G__11753 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__11752, G__11753) : g.call(null, G__11752, G__11753);
      }(), function() {
        var G__11754 = x;
        var G__11755 = y;
        return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__11754, G__11755) : h.call(null, G__11754, G__11755);
      }()], null);
    };
    var G__11784__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__11756 = x;
        var G__11757 = y;
        var G__11758 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11756, G__11757, G__11758) : f.call(null, G__11756, G__11757, G__11758);
      }(), function() {
        var G__11759 = x;
        var G__11760 = y;
        var G__11761 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__11759, G__11760, G__11761) : g.call(null, G__11759, G__11760, G__11761);
      }(), function() {
        var G__11762 = x;
        var G__11763 = y;
        var G__11764 = z;
        return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__11762, G__11763, G__11764) : h.call(null, G__11762, G__11763, G__11764);
      }()], null);
    };
    var G__11784__4 = function() {
      var G__11785__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__11785 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11786__i = 0, G__11786__a = new Array(arguments.length - 3);
          while (G__11786__i < G__11786__a.length) {
            G__11786__a[G__11786__i] = arguments[G__11786__i + 3];
            ++G__11786__i;
          }
          args = new cljs.core.IndexedSeq(G__11786__a, 0);
        }
        return G__11785__delegate.call(this, x, y, z, args);
      };
      G__11785.cljs$lang$maxFixedArity = 3;
      G__11785.cljs$lang$applyTo = function(arglist__11787) {
        var x = cljs.core.first(arglist__11787);
        arglist__11787 = cljs.core.next(arglist__11787);
        var y = cljs.core.first(arglist__11787);
        arglist__11787 = cljs.core.next(arglist__11787);
        var z = cljs.core.first(arglist__11787);
        var args = cljs.core.rest(arglist__11787);
        return G__11785__delegate(x, y, z, args);
      };
      G__11785.cljs$core$IFn$_invoke$arity$variadic = G__11785__delegate;
      return G__11785;
    }();
    G__11784 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__11784__0.call(this);
        case 1:
          return G__11784__1.call(this, x);
        case 2:
          return G__11784__2.call(this, x, y);
        case 3:
          return G__11784__3.call(this, x, y, z);
        default:
          var G__11788 = null;
          if (arguments.length > 3) {
            var G__11789__i = 0, G__11789__a = new Array(arguments.length - 3);
            while (G__11789__i < G__11789__a.length) {
              G__11789__a[G__11789__i] = arguments[G__11789__i + 3];
              ++G__11789__i;
            }
            G__11788 = new cljs.core.IndexedSeq(G__11789__a, 0);
          }
          return G__11784__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11788);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11784.cljs$lang$maxFixedArity = 3;
    G__11784.cljs$lang$applyTo = G__11784__4.cljs$lang$applyTo;
    G__11784.cljs$core$IFn$_invoke$arity$0 = G__11784__0;
    G__11784.cljs$core$IFn$_invoke$arity$1 = G__11784__1;
    G__11784.cljs$core$IFn$_invoke$arity$2 = G__11784__2;
    G__11784.cljs$core$IFn$_invoke$arity$3 = G__11784__3;
    G__11784.cljs$core$IFn$_invoke$arity$variadic = G__11784__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11784;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__11790 = null;
      var G__11790__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__11713_SHARP_, p2__11714_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11713_SHARP_, function() {
              return p2__11714_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__11714_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__11714_SHARP_.call(null);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__11790__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__11715_SHARP_, p2__11716_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11715_SHARP_, function() {
              var G__11765 = x;
              return p2__11716_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__11716_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11765) : p2__11716_SHARP_.call(null, G__11765);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__11790__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__11717_SHARP_, p2__11718_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11717_SHARP_, function() {
              var G__11766 = x;
              var G__11767 = y;
              return p2__11718_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__11718_SHARP_.cljs$core$IFn$_invoke$arity$2(G__11766, G__11767) : p2__11718_SHARP_.call(null, G__11766, G__11767);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__11790__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__11719_SHARP_, p2__11720_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11719_SHARP_, function() {
              var G__11768 = x;
              var G__11769 = y;
              var G__11770 = z;
              return p2__11720_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__11720_SHARP_.cljs$core$IFn$_invoke$arity$3(G__11768, G__11769, G__11770) : p2__11720_SHARP_.call(null, G__11768, G__11769, G__11770);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__11790__4 = function() {
        var G__11791__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__11721_SHARP_, p2__11722_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11721_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__11722_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__11791 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__11792__i = 0, G__11792__a = new Array(arguments.length - 3);
            while (G__11792__i < G__11792__a.length) {
              G__11792__a[G__11792__i] = arguments[G__11792__i + 3];
              ++G__11792__i;
            }
            args = new cljs.core.IndexedSeq(G__11792__a, 0);
          }
          return G__11791__delegate.call(this, x, y, z, args);
        };
        G__11791.cljs$lang$maxFixedArity = 3;
        G__11791.cljs$lang$applyTo = function(arglist__11793) {
          var x = cljs.core.first(arglist__11793);
          arglist__11793 = cljs.core.next(arglist__11793);
          var y = cljs.core.first(arglist__11793);
          arglist__11793 = cljs.core.next(arglist__11793);
          var z = cljs.core.first(arglist__11793);
          var args = cljs.core.rest(arglist__11793);
          return G__11791__delegate(x, y, z, args);
        };
        G__11791.cljs$core$IFn$_invoke$arity$variadic = G__11791__delegate;
        return G__11791;
      }();
      G__11790 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11790__0.call(this);
          case 1:
            return G__11790__1.call(this, x);
          case 2:
            return G__11790__2.call(this, x, y);
          case 3:
            return G__11790__3.call(this, x, y, z);
          default:
            var G__11794 = null;
            if (arguments.length > 3) {
              var G__11795__i = 0, G__11795__a = new Array(arguments.length - 3);
              while (G__11795__i < G__11795__a.length) {
                G__11795__a[G__11795__i] = arguments[G__11795__i + 3];
                ++G__11795__i;
              }
              G__11794 = new cljs.core.IndexedSeq(G__11795__a, 0);
            }
            return G__11790__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11794);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11790.cljs$lang$maxFixedArity = 3;
      G__11790.cljs$lang$applyTo = G__11790__4.cljs$lang$applyTo;
      G__11790.cljs$core$IFn$_invoke$arity$0 = G__11790__0;
      G__11790.cljs$core$IFn$_invoke$arity$1 = G__11790__1;
      G__11790.cljs$core$IFn$_invoke$arity$2 = G__11790__2;
      G__11790.cljs$core$IFn$_invoke$arity$3 = G__11790__3;
      G__11790.cljs$core$IFn$_invoke$arity$variadic = G__11790__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11790;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq11723) {
  var G__11724 = cljs.core.first(seq11723);
  var seq11723__$1 = cljs.core.next(seq11723);
  var G__11725 = cljs.core.first(seq11723__$1);
  var seq11723__$2 = cljs.core.next(seq11723__$1);
  var G__11726 = cljs.core.first(seq11723__$2);
  var seq11723__$3 = cljs.core.next(seq11723__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__11724, G__11725, G__11726, seq11723__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun() {
  var G__11797 = arguments.length;
  switch(G__11797) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__11799 = cljs.core.next(coll);
      coll = G__11799;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__11800 = n - 1;
      var G__11801 = cljs.core.next(coll);
      n = G__11800;
      coll = G__11801;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall() {
  var G__11803 = arguments.length;
  switch(G__11803) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__11808 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11808, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11808, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4307__auto__ = flags;
      if (cljs.core.truth_(or__4307__auto__)) {
        return or__4307__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_11816 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4307__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4307__auto__)) {
              return or__4307__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__11817_11823 = cljs.core.first(coll);
          var G__11818_11824 = writer;
          var G__11819_11825 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11817_11823, G__11818_11824, G__11819_11825) : print_one.call(null, G__11817_11823, G__11818_11824, G__11819_11825);
        } else {
        }
        var coll_11826__$1 = cljs.core.next(coll);
        var n_11827 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_11826__$1 && (n_11827 == null || !(n_11827 === 0))) {
            cljs.core._write(writer, sep);
            var G__11820_11828 = cljs.core.first(coll_11826__$1);
            var G__11821_11829 = writer;
            var G__11822_11830 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11820_11828, G__11821_11829, G__11822_11830) : print_one.call(null, G__11820_11828, G__11821_11829, G__11822_11830);
            var G__11831 = cljs.core.next(coll_11826__$1);
            var G__11832 = n_11827 - 1;
            coll_11826__$1 = G__11831;
            n_11827 = G__11832;
            continue;
          } else {
            if (cljs.core.seq(coll_11826__$1) && n_11827 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4307__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4307__auto__)) {
                  return or__4307__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_11816;
  }
};
cljs.core.write_all = function cljs$core$write_all() {
  var argseq__5347__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5347__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__11835 = cljs.core.seq(ss);
  var chunk__11836 = null;
  var count__11837 = 0;
  var i__11838 = 0;
  while (true) {
    if (i__11838 < count__11837) {
      var s = chunk__11836.cljs$core$IIndexed$_nth$arity$2(null, i__11838);
      cljs.core._write(writer, s);
      var G__11839 = seq__11835;
      var G__11840 = chunk__11836;
      var G__11841 = count__11837;
      var G__11842 = i__11838 + 1;
      seq__11835 = G__11839;
      chunk__11836 = G__11840;
      count__11837 = G__11841;
      i__11838 = G__11842;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__11835);
      if (temp__4425__auto__) {
        var seq__11835__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11835__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first(seq__11835__$1);
          var G__11843 = cljs.core.chunk_rest(seq__11835__$1);
          var G__11844 = c__5092__auto__;
          var G__11845 = cljs.core.count(c__5092__auto__);
          var G__11846 = 0;
          seq__11835 = G__11843;
          chunk__11836 = G__11844;
          count__11837 = G__11845;
          i__11838 = G__11846;
          continue;
        } else {
          var s = cljs.core.first(seq__11835__$1);
          cljs.core._write(writer, s);
          var G__11847 = cljs.core.next(seq__11835__$1);
          var G__11848 = null;
          var G__11849 = 0;
          var G__11850 = 0;
          seq__11835 = G__11847;
          chunk__11836 = G__11848;
          count__11837 = G__11849;
          i__11838 = G__11850;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq11833) {
  var G__11834 = cljs.core.first(seq11833);
  var seq11833__$1 = cljs.core.next(seq11833);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__11834, seq11833__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj11852 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj11852;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__11855 = '[\\\\"\b\f\n\r\t]';
    var G__11856 = "g";
    return RegExp(G__11855, G__11856);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__4295__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__4295__auto__)) {
          var and__4295__auto____$1 = function() {
            var G__11870 = obj;
            if (G__11870) {
              var bit__4981__auto__ = G__11870.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4981__auto__ || G__11870.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__11870.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__11870);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__11870);
            }
          }();
          if (and__4295__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__4295__auto____$1;
          }
        } else {
          return and__4295__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        var G__11871_11881 = cljs.core.meta(obj);
        var G__11872_11882 = writer;
        var G__11873_11883 = opts;
        cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__11871_11881, G__11872_11882, G__11873_11883) : cljs.core.pr_writer.call(null, G__11871_11881, G__11872_11882, G__11873_11883);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__11874 = obj;
            if (G__11874) {
              var bit__4974__auto__ = G__11874.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4974__auto__ || G__11874.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__11875 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__11876 = cljs.core.pr_writer;
                var G__11877 = writer;
                var G__11878 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__11875, G__11876, G__11877, G__11878) : cljs.core.print_map.call(null, G__11875, G__11876, G__11877, G__11878);
              } else {
                if (cljs.core.array_QMARK_(obj)) {
                  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__11879 = obj;
                    return goog.isString(G__11879);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__11884 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__11884;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.truth_(cljs.core.regexp_QMARK_(obj))) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__11880 = obj;
                            if (G__11880) {
                              var bit__4981__auto__ = G__11880.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4981__auto__ || G__11880.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__11880.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__11880);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__11880);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var alt_impl = temp__4423__auto__;
    var G__11888 = obj;
    var G__11889 = writer;
    var G__11890 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__11888, G__11889, G__11890) : alt_impl.call(null, G__11888, G__11889, G__11890);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__11895 = cljs.core.seq(cljs.core.next(objs));
  var chunk__11896 = null;
  var count__11897 = 0;
  var i__11898 = 0;
  while (true) {
    if (i__11898 < count__11897) {
      var obj = chunk__11896.cljs$core$IIndexed$_nth$arity$2(null, i__11898);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__11899 = seq__11895;
      var G__11900 = chunk__11896;
      var G__11901 = count__11897;
      var G__11902 = i__11898 + 1;
      seq__11895 = G__11899;
      chunk__11896 = G__11900;
      count__11897 = G__11901;
      i__11898 = G__11902;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__11895);
      if (temp__4425__auto__) {
        var seq__11895__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11895__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first(seq__11895__$1);
          var G__11903 = cljs.core.chunk_rest(seq__11895__$1);
          var G__11904 = c__5092__auto__;
          var G__11905 = cljs.core.count(c__5092__auto__);
          var G__11906 = 0;
          seq__11895 = G__11903;
          chunk__11896 = G__11904;
          count__11897 = G__11905;
          i__11898 = G__11906;
          continue;
        } else {
          var obj = cljs.core.first(seq__11895__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__11907 = cljs.core.next(seq__11895__$1);
          var G__11908 = null;
          var G__11909 = 0;
          var G__11910 = 0;
          seq__11895 = G__11907;
          chunk__11896 = G__11908;
          count__11897 = G__11909;
          i__11898 = G__11910;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline() {
  var G__11912 = arguments.length;
  switch(G__11912) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq11914) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11914));
};
cljs.core.prn_str = function cljs$core$prn_str() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq11915) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11915));
};
cljs.core.pr = function cljs$core$pr() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq11916) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11916));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__11917__i = 0, G__11917__a = new Array(arguments.length - 0);
      while (G__11917__i < G__11917__a.length) {
        G__11917__a[G__11917__i] = arguments[G__11917__i + 0];
        ++G__11917__i;
      }
      objs = new cljs.core.IndexedSeq(G__11917__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__11918) {
    var objs = cljs.core.seq(arglist__11918);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq11919) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11919));
};
cljs.core.println = function cljs$core$println() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq11920) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11920));
};
cljs.core.println_str = function cljs$core$println_str() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq11921) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11921));
};
cljs.core.prn = function cljs$core$prn() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq11922) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11922));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__11929_11935 = cljs.core.key(e);
    var G__11930_11936 = w;
    var G__11931_11937 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11929_11935, G__11930_11936, G__11931_11937) : print_one.call(null, G__11929_11935, G__11930_11936, G__11931_11937);
    cljs.core._write(w, " ");
    var G__11932 = cljs.core.val(e);
    var G__11933 = w;
    var G__11934 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11932, G__11933, G__11934) : print_one.call(null, G__11932, G__11933, G__11934);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_() {
  var argseq__5347__auto__ = 2 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5347__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq11938) {
  var G__11939 = cljs.core.first(seq11938);
  var seq11938__$1 = cljs.core.next(seq11938);
  var G__11940 = cljs.core.first(seq11938__$1);
  var seq11938__$2 = cljs.core.next(seq11938__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__11939, G__11940, seq11938__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym() {
  var G__11942 = arguments.length;
  switch(G__11942) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = function() {
      var G__11943 = 0;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11943) : cljs.core.atom.call(null, G__11943);
    }();
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "value", "value", 1946509744, null)], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__11946 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11946) : cljs.core.deref.call(null, G__11946);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__11947_SHARP_, p2__11948_SHARP_) {
    var ret = function() {
      var G__11951 = p1__11947_SHARP_;
      var G__11952 = p2__11948_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11951, G__11952) : rf.call(null, G__11951, G__11952);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__11955 = null;
      var G__11955__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11955__1 = function(result) {
        var G__11954 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11954) : rf.call(null, G__11954);
      };
      var G__11955__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__11955 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__11955__0.call(this);
          case 1:
            return G__11955__1.call(this, result);
          case 2:
            return G__11955__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11955.cljs$core$IFn$_invoke$arity$0 = G__11955__0;
      G__11955.cljs$core$IFn$_invoke$arity$1 = G__11955__1;
      G__11955.cljs$core$IFn$_invoke$arity$2 = G__11955__2;
      return G__11955;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe() {
  var G__11957 = arguments.length;
  switch(G__11957) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__11963 = null;
        var G__11963__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11963__1 = function(result) {
          var G__11958 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11958) : rf.call(null, G__11958);
        };
        var G__11963__2 = function(result, input) {
          var prior = function() {
            var G__11959 = pa;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11959) : cljs.core.deref.call(null, G__11959);
          }();
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            var G__11960 = result;
            var G__11961 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11960, G__11961) : rf.call(null, G__11960, G__11961);
          }
        };
        G__11963 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11963__0.call(this);
            case 1:
              return G__11963__1.call(this, result);
            case 2:
              return G__11963__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11963.cljs$core$IFn$_invoke$arity$0 = G__11963__0;
        G__11963.cljs$core$IFn$_invoke$arity$1 = G__11963__1;
        G__11963.cljs$core$IFn$_invoke$arity$2 = G__11963__2;
        return G__11963;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample() {
  var G__11965 = arguments.length;
  switch(G__11965) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return function() {
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
    }() < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return function() {
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
    }() < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5283__auto__ = this;
  return cljs.core.es6_iterator(this__5283__auto__);
};
cljs.core.eduction = function cljs$core$eduction() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq11967) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11967));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__11969_SHARP_, p2__11968_SHARP_) {
    var G__11971 = p2__11968_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__11971) : proc.call(null, G__11971);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj11973 = {};
  return obj11973;
}();
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (function() {
    var and__4295__auto__ = x;
    if (and__4295__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4943__auto__ = x == null ? null : x;
    return function() {
      var or__4307__auto__ = cljs.core._clj__GT_js[function() {
        var G__11977 = x__4943__auto__;
        return goog.typeOf(G__11977);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (function() {
    var and__4295__auto__ = x;
    if (and__4295__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4943__auto__ = x == null ? null : x;
    return function() {
      var or__4307__auto__ = cljs.core._key__GT_js[function() {
        var G__11981 = x__4943__auto__;
        return goog.typeOf(G__11981);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (function() {
    var G__11984 = k;
    if (G__11984) {
      var bit__4981__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4307__auto__ = bit__4981__auto__;
        if (cljs.core.truth_(or__4307__auto__)) {
          return or__4307__auto__;
        } else {
          return G__11984.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__11984.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__11984);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__11984);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__11985 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__11985) : cljs.core.clj__GT_js.call(null, G__11985);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__12001 = x;
      if (G__12001) {
        var bit__4981__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__4307__auto__ = bit__4981__auto__;
          if (cljs.core.truth_(or__4307__auto__)) {
            return or__4307__auto__;
          } else {
            return G__12001.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__12001.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__12001);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__12001);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj12003 = {};
              return obj12003;
            }();
            var seq__12004_12014 = cljs.core.seq(x);
            var chunk__12005_12015 = null;
            var count__12006_12016 = 0;
            var i__12007_12017 = 0;
            while (true) {
              if (i__12007_12017 < count__12006_12016) {
                var vec__12008_12018 = chunk__12005_12015.cljs$core$IIndexed$_nth$arity$2(null, i__12007_12017);
                var k_12019 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12008_12018, 0, null);
                var v_12020 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12008_12018, 1, null);
                m[cljs.core.key__GT_js(k_12019)] = cljs$core$clj__GT_js(v_12020);
                var G__12021 = seq__12004_12014;
                var G__12022 = chunk__12005_12015;
                var G__12023 = count__12006_12016;
                var G__12024 = i__12007_12017 + 1;
                seq__12004_12014 = G__12021;
                chunk__12005_12015 = G__12022;
                count__12006_12016 = G__12023;
                i__12007_12017 = G__12024;
                continue;
              } else {
                var temp__4425__auto___12025 = cljs.core.seq(seq__12004_12014);
                if (temp__4425__auto___12025) {
                  var seq__12004_12026__$1 = temp__4425__auto___12025;
                  if (cljs.core.chunked_seq_QMARK_(seq__12004_12026__$1)) {
                    var c__5092__auto___12027 = cljs.core.chunk_first(seq__12004_12026__$1);
                    var G__12028 = cljs.core.chunk_rest(seq__12004_12026__$1);
                    var G__12029 = c__5092__auto___12027;
                    var G__12030 = cljs.core.count(c__5092__auto___12027);
                    var G__12031 = 0;
                    seq__12004_12014 = G__12028;
                    chunk__12005_12015 = G__12029;
                    count__12006_12016 = G__12030;
                    i__12007_12017 = G__12031;
                    continue;
                  } else {
                    var vec__12009_12032 = cljs.core.first(seq__12004_12026__$1);
                    var k_12033 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12009_12032, 0, null);
                    var v_12034 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12009_12032, 1, null);
                    m[cljs.core.key__GT_js(k_12033)] = cljs$core$clj__GT_js(v_12034);
                    var G__12035 = cljs.core.next(seq__12004_12026__$1);
                    var G__12036 = null;
                    var G__12037 = 0;
                    var G__12038 = 0;
                    seq__12004_12014 = G__12035;
                    chunk__12005_12015 = G__12036;
                    count__12006_12016 = G__12037;
                    i__12007_12017 = G__12038;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__12010_12039 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__12011_12040 = null;
              var count__12012_12041 = 0;
              var i__12013_12042 = 0;
              while (true) {
                if (i__12013_12042 < count__12012_12041) {
                  var x_12043__$1 = chunk__12011_12040.cljs$core$IIndexed$_nth$arity$2(null, i__12013_12042);
                  arr.push(x_12043__$1);
                  var G__12044 = seq__12010_12039;
                  var G__12045 = chunk__12011_12040;
                  var G__12046 = count__12012_12041;
                  var G__12047 = i__12013_12042 + 1;
                  seq__12010_12039 = G__12044;
                  chunk__12011_12040 = G__12045;
                  count__12012_12041 = G__12046;
                  i__12013_12042 = G__12047;
                  continue;
                } else {
                  var temp__4425__auto___12048 = cljs.core.seq(seq__12010_12039);
                  if (temp__4425__auto___12048) {
                    var seq__12010_12049__$1 = temp__4425__auto___12048;
                    if (cljs.core.chunked_seq_QMARK_(seq__12010_12049__$1)) {
                      var c__5092__auto___12050 = cljs.core.chunk_first(seq__12010_12049__$1);
                      var G__12051 = cljs.core.chunk_rest(seq__12010_12049__$1);
                      var G__12052 = c__5092__auto___12050;
                      var G__12053 = cljs.core.count(c__5092__auto___12050);
                      var G__12054 = 0;
                      seq__12010_12039 = G__12051;
                      chunk__12011_12040 = G__12052;
                      count__12012_12041 = G__12053;
                      i__12013_12042 = G__12054;
                      continue;
                    } else {
                      var x_12055__$1 = cljs.core.first(seq__12010_12049__$1);
                      arr.push(x_12055__$1);
                      var G__12056 = cljs.core.next(seq__12010_12049__$1);
                      var G__12057 = null;
                      var G__12058 = 0;
                      var G__12059 = 0;
                      seq__12010_12039 = G__12056;
                      chunk__12011_12040 = G__12057;
                      count__12012_12041 = G__12058;
                      i__12013_12042 = G__12059;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj12061 = {};
  return obj12061;
}();
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (function() {
    var and__4295__auto__ = x;
    if (and__4295__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4943__auto__ = x == null ? null : x;
    return function() {
      var or__4307__auto__ = cljs.core._js__GT_clj[function() {
        var G__12065 = x__4943__auto__;
        return goog.typeOf(G__12065);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj() {
  var G__12069 = arguments.length;
  switch(G__12069) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5358__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__12070 = opts;
  var map__12070__$1 = cljs.core.seq_QMARK_(map__12070) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12070) : map__12070;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12070__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__12070, map__12070__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (function() {
        var G__12086 = x__$1;
        if (G__12086) {
          var bit__4981__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__4307__auto__ = bit__4981__auto__;
            if (cljs.core.truth_(or__4307__auto__)) {
              return or__4307__auto__;
            } else {
              return G__12086.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__12086.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__12086);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__12086);
        }
      }()) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__5061__auto__ = function(map__12070, map__12070__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__12087(s__12088) {
                      return new cljs.core.LazySeq(null, function(map__12070, map__12070__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__12088__$1 = s__12088;
                          while (true) {
                            var temp__4425__auto__ = cljs.core.seq(s__12088__$1);
                            if (temp__4425__auto__) {
                              var s__12088__$2 = temp__4425__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__12088__$2)) {
                                var c__5059__auto__ = cljs.core.chunk_first(s__12088__$2);
                                var size__5060__auto__ = cljs.core.count(c__5059__auto__);
                                var b__12090 = cljs.core.chunk_buffer(size__5060__auto__);
                                if (function() {
                                  var i__12089 = 0;
                                  while (true) {
                                    if (i__12089 < size__5060__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5059__auto__, i__12089);
                                      cljs.core.chunk_append(b__12090, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                        var G__12095 = k;
                                        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12095) : keyfn.call(null, G__12095);
                                      }(), cljs$core$thisfn(x__$1[k])], null));
                                      var G__12098 = i__12089 + 1;
                                      i__12089 = G__12098;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__12090), cljs$core$thisfn_$_iter__12087(cljs.core.chunk_rest(s__12088__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__12090), null);
                                }
                              } else {
                                var k = cljs.core.first(s__12088__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                  var G__12096 = k;
                                  return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12096) : keyfn.call(null, G__12096);
                                }(), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__12087(cljs.core.rest(s__12088__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__12070, map__12070__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__12070, map__12070__$1, keywordize_keys, keyfn);
                  return iter__5061__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__12070, map__12070__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq12066) {
  var G__12067 = cljs.core.first(seq12066);
  var seq12066__$1 = cljs.core.next(seq12066);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__12067, seq12066__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__12101 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12101) : cljs.core.atom.call(null, G__12101);
  }();
  return function(mem) {
    return function() {
      var G__12103__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__12102 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12102) : cljs.core.deref.call(null, G__12102);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__12103 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__12104__i = 0, G__12104__a = new Array(arguments.length - 0);
          while (G__12104__i < G__12104__a.length) {
            G__12104__a[G__12104__i] = arguments[G__12104__i + 0];
            ++G__12104__i;
          }
          args = new cljs.core.IndexedSeq(G__12104__a, 0);
        }
        return G__12103__delegate.call(this, args);
      };
      G__12103.cljs$lang$maxFixedArity = 0;
      G__12103.cljs$lang$applyTo = function(arglist__12105) {
        var args = cljs.core.seq(arglist__12105);
        return G__12103__delegate(args);
      };
      G__12103.cljs$core$IFn$_invoke$arity$variadic = G__12103__delegate;
      return G__12103;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline() {
  var G__12109 = arguments.length;
  switch(G__12109) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5358__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }();
    if (cljs.core.fn_QMARK_(ret)) {
      var G__12111 = ret;
      f = G__12111;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq12106) {
  var G__12107 = cljs.core.first(seq12106);
  var seq12106__$1 = cljs.core.next(seq12106);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__12107, seq12106__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand() {
  var G__12113 = arguments.length;
  switch(G__12113) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function() {
    return Math.random();
  }() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__12116 = function() {
    return Math.random();
  }() * n;
  return Math.floor(G__12116);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__12118 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12118) : f.call(null, G__12118);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__12120 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12120) : cljs.core.atom.call(null, G__12120);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_() {
  var argseq__5347__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5347__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq12121) {
  var G__12122 = cljs.core.first(seq12121);
  var seq12121__$1 = cljs.core.next(seq12121);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__12122, seq12121__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_() {
  var G__12124 = arguments.length;
  switch(G__12124) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__12125 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12125) : cljs.core.deref.call(null, G__12125);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4307__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4307__auto__) {
    return or__4307__auto__;
  } else {
    var or__4307__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__4307__auto____$1) {
      return or__4307__auto____$1;
    } else {
      var and__4295__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4295__auto__) {
        var and__4295__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4295__auto____$1) {
          var and__4295__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4295__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__12151 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                  var G__12148 = i;
                  return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__12148) : child.call(null, G__12148);
                }(), function() {
                  var G__12149 = i;
                  return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__12149) : parent.call(null, G__12149);
                }());
                var G__12152 = i + 1;
                ret = G__12151;
                i = G__12152;
                continue;
              }
              break;
            }
          } else {
            return and__4295__auto____$2;
          }
        } else {
          return and__4295__auto____$1;
        }
      } else {
        return and__4295__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents() {
  var G__12154 = arguments.length;
  switch(G__12154) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__12155 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12155) : cljs.core.deref.call(null, G__12155);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors() {
  var G__12158 = arguments.length;
  switch(G__12158) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__12159 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12159) : cljs.core.deref.call(null, G__12159);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants() {
  var G__12162 = arguments.length;
  switch(G__12162) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__12163 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12163) : cljs.core.deref.call(null, G__12163);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive() {
  var G__12166 = arguments.length;
  switch(G__12166) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
            var G__12167 = target;
            return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__12167) : targets.call(null, G__12167);
          }())));
        };
      }(tp, td, ta), m, cljs.core.cons(source, function() {
        var G__12168 = source;
        return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__12168) : sources.call(null, G__12168);
      }()));
    };
  }(tp, td, ta);
  var or__4307__auto__ = cljs.core.contains_QMARK_(function() {
    var G__12172 = tag;
    return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__12172) : tp.call(null, G__12172);
  }(), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(function() {
      var G__12173 = tag;
      return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__12173) : ta.call(null, G__12173);
    }(), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(function() {
      var G__12174 = parent;
      return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__12174) : ta.call(null, G__12174);
    }(), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4307__auto__)) {
    return or__4307__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive() {
  var G__12180 = arguments.length;
  switch(G__12180) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(function() {
    var G__12181 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12181) : parentMap.call(null, G__12181);
  }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
    var G__12182 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12182) : parentMap.call(null, G__12182);
  }(), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__12176_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__12176_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__12176_SHARP_), cljs.core.second(p1__12176_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(function() {
    var G__12183 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12183) : parentMap.call(null, G__12183);
  }(), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__12177_SHARP_, p2__12178_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__12177_SHARP_, p2__12178_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__12187 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12187) : cljs.core.deref.call(null, G__12187);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__12188 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12188) : cljs.core.deref.call(null, G__12188);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__12204 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12204) : cljs.core.deref.call(null, G__12204);
  }().call(null, x);
  var or__4307__auto__ = cljs.core.truth_(function() {
    var and__4295__auto__ = xprefs;
    if (cljs.core.truth_(and__4295__auto__)) {
      var G__12206 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__12206) : xprefs.call(null, G__12206);
    } else {
      return and__4295__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4307__auto__)) {
    return or__4307__auto__;
  } else {
    var or__4307__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__12207 = cljs.core.rest(ps);
          ps = G__12207;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4307__auto____$1)) {
      return or__4307__auto____$1;
    } else {
      var or__4307__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__12208 = cljs.core.rest(ps);
            ps = G__12208;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4307__auto____$2)) {
        return or__4307__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4307__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4307__auto__)) {
    return or__4307__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__12222) {
    var vec__12223 = p__12222;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12223, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12223, 1, null);
    var e = vec__12223;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__12224 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12224) : cljs.core.deref.call(null, G__12224);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4307__auto__ = be == null;
        if (or__4307__auto__) {
          return or__4307__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__12225 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12225) : cljs.core.deref.call(null, G__12225);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__12226 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12226) : cljs.core.deref.call(null, G__12226);
    }(), function() {
      var G__12227 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12227) : cljs.core.deref.call(null, G__12227);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj12229 = {};
  return obj12229;
}();
cljs.core._reset = function cljs$core$_reset(mf) {
  if (function() {
    var and__4295__auto__ = mf;
    if (and__4295__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4943__auto__ = mf == null ? null : mf;
    return function() {
      var or__4307__auto__ = cljs.core._reset[function() {
        var G__12233 = x__4943__auto__;
        return goog.typeOf(G__12233);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._reset["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (function() {
    var and__4295__auto__ = mf;
    if (and__4295__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4943__auto__ = mf == null ? null : mf;
    return function() {
      var or__4307__auto__ = cljs.core._add_method[function() {
        var G__12237 = x__4943__auto__;
        return goog.typeOf(G__12237);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._add_method["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (function() {
    var and__4295__auto__ = mf;
    if (and__4295__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4943__auto__ = mf == null ? null : mf;
    return function() {
      var or__4307__auto__ = cljs.core._remove_method[function() {
        var G__12241 = x__4943__auto__;
        return goog.typeOf(G__12241);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._remove_method["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__4295__auto__ = mf;
    if (and__4295__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4943__auto__ = mf == null ? null : mf;
    return function() {
      var or__4307__auto__ = cljs.core._prefer_method[function() {
        var G__12245 = x__4943__auto__;
        return goog.typeOf(G__12245);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._prefer_method["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (function() {
    var and__4295__auto__ = mf;
    if (and__4295__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4943__auto__ = mf == null ? null : mf;
    return function() {
      var or__4307__auto__ = cljs.core._get_method[function() {
        var G__12249 = x__4943__auto__;
        return goog.typeOf(G__12249);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._get_method["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (function() {
    var and__4295__auto__ = mf;
    if (and__4295__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4943__auto__ = mf == null ? null : mf;
    return function() {
      var or__4307__auto__ = cljs.core._methods[function() {
        var G__12253 = x__4943__auto__;
        return goog.typeOf(G__12253);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._methods["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (function() {
    var and__4295__auto__ = mf;
    if (and__4295__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4943__auto__ = mf == null ? null : mf;
    return function() {
      var or__4307__auto__ = cljs.core._prefers[function() {
        var G__12257 = x__4943__auto__;
        return goog.typeOf(G__12257);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._prefers["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (function() {
    var and__4295__auto__ = mf;
    if (and__4295__auto__) {
      return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__4943__auto__ = mf == null ? null : mf;
    return function() {
      var or__4307__auto__ = cljs.core._default_dispatch_val[function() {
        var G__12261 = x__4943__auto__;
        return goog.typeOf(G__12261);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._default_dispatch_val["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (function() {
    var and__4295__auto__ = mf;
    if (and__4295__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__4943__auto__ = mf == null ? null : mf;
    return function() {
      var or__4307__auto__ = cljs.core._dispatch_fn[function() {
        var G__12265 = x__4943__auto__;
        return goog.typeOf(G__12265);
      }()];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = cljs.core._dispatch_fn["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__13114 = null;
  var G__13114__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__13114__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12267 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__12267) : self__.dispatch_fn.call(null, G__12267);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12268 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__12268) : target_fn.call(null, G__12268);
  };
  var G__13114__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12269 = a;
      var G__12270 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__12269, G__12270) : self__.dispatch_fn.call(null, G__12269, G__12270);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12271 = a;
    var G__12272 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__12271, G__12272) : target_fn.call(null, G__12271, G__12272);
  };
  var G__13114__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12273 = a;
      var G__12274 = b;
      var G__12275 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__12273, G__12274, G__12275) : self__.dispatch_fn.call(null, G__12273, G__12274, G__12275);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12276 = a;
    var G__12277 = b;
    var G__12278 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__12276, G__12277, G__12278) : target_fn.call(null, G__12276, G__12277, G__12278);
  };
  var G__13114__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12279 = a;
      var G__12280 = b;
      var G__12281 = c;
      var G__12282 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__12279, G__12280, G__12281, G__12282) : self__.dispatch_fn.call(null, G__12279, G__12280, G__12281, G__12282);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12283 = a;
    var G__12284 = b;
    var G__12285 = c;
    var G__12286 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__12283, G__12284, G__12285, G__12286) : target_fn.call(null, G__12283, G__12284, G__12285, G__12286);
  };
  var G__13114__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12287 = a;
      var G__12288 = b;
      var G__12289 = c;
      var G__12290 = d;
      var G__12291 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__12287, G__12288, G__12289, G__12290, G__12291) : self__.dispatch_fn.call(null, G__12287, G__12288, G__12289, G__12290, G__12291);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12292 = a;
    var G__12293 = b;
    var G__12294 = c;
    var G__12295 = d;
    var G__12296 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__12292, G__12293, G__12294, G__12295, G__12296) : target_fn.call(null, G__12292, G__12293, G__12294, G__12295, G__12296);
  };
  var G__13114__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12297 = a;
      var G__12298 = b;
      var G__12299 = c;
      var G__12300 = d;
      var G__12301 = e;
      var G__12302 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__12297, G__12298, G__12299, G__12300, G__12301, G__12302) : self__.dispatch_fn.call(null, G__12297, G__12298, G__12299, G__12300, G__12301, G__12302);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12303 = a;
    var G__12304 = b;
    var G__12305 = c;
    var G__12306 = d;
    var G__12307 = e;
    var G__12308 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__12303, G__12304, G__12305, G__12306, G__12307, G__12308) : target_fn.call(null, G__12303, G__12304, G__12305, G__12306, G__12307, G__12308);
  };
  var G__13114__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12309 = a;
      var G__12310 = b;
      var G__12311 = c;
      var G__12312 = d;
      var G__12313 = e;
      var G__12314 = f;
      var G__12315 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12309, G__12310, G__12311, G__12312, G__12313, G__12314, G__12315) : self__.dispatch_fn.call(null, G__12309, G__12310, G__12311, G__12312, G__12313, G__12314, G__12315);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12316 = a;
    var G__12317 = b;
    var G__12318 = c;
    var G__12319 = d;
    var G__12320 = e;
    var G__12321 = f;
    var G__12322 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12316, G__12317, G__12318, G__12319, G__12320, G__12321, G__12322) : target_fn.call(null, G__12316, G__12317, G__12318, G__12319, G__12320, G__12321, G__12322);
  };
  var G__13114__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12323 = a;
      var G__12324 = b;
      var G__12325 = c;
      var G__12326 = d;
      var G__12327 = e;
      var G__12328 = f;
      var G__12329 = g;
      var G__12330 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__12323, G__12324, G__12325, G__12326, G__12327, G__12328, G__12329, G__12330) : self__.dispatch_fn.call(null, G__12323, G__12324, G__12325, G__12326, G__12327, G__12328, G__12329, G__12330);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12331 = a;
    var G__12332 = b;
    var G__12333 = c;
    var G__12334 = d;
    var G__12335 = e;
    var G__12336 = f;
    var G__12337 = g;
    var G__12338 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__12331, G__12332, G__12333, G__12334, G__12335, G__12336, G__12337, G__12338) : target_fn.call(null, G__12331, G__12332, G__12333, G__12334, G__12335, G__12336, G__12337, G__12338);
  };
  var G__13114__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12339 = a;
      var G__12340 = b;
      var G__12341 = c;
      var G__12342 = d;
      var G__12343 = e;
      var G__12344 = f;
      var G__12345 = g;
      var G__12346 = h;
      var G__12347 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__12339, G__12340, G__12341, G__12342, G__12343, G__12344, G__12345, G__12346, G__12347) : self__.dispatch_fn.call(null, G__12339, G__12340, G__12341, G__12342, G__12343, G__12344, G__12345, G__12346, G__12347);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12348 = a;
    var G__12349 = b;
    var G__12350 = c;
    var G__12351 = d;
    var G__12352 = e;
    var G__12353 = f;
    var G__12354 = g;
    var G__12355 = h;
    var G__12356 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__12348, G__12349, G__12350, G__12351, G__12352, G__12353, G__12354, G__12355, G__12356) : target_fn.call(null, G__12348, G__12349, G__12350, G__12351, G__12352, G__12353, G__12354, G__12355, G__12356);
  };
  var G__13114__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12357 = a;
      var G__12358 = b;
      var G__12359 = c;
      var G__12360 = d;
      var G__12361 = e;
      var G__12362 = f;
      var G__12363 = g;
      var G__12364 = h;
      var G__12365 = i;
      var G__12366 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__12357, G__12358, G__12359, G__12360, G__12361, G__12362, G__12363, G__12364, G__12365, G__12366) : self__.dispatch_fn.call(null, G__12357, G__12358, G__12359, G__12360, G__12361, G__12362, G__12363, G__12364, G__12365, G__12366);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12367 = a;
    var G__12368 = b;
    var G__12369 = c;
    var G__12370 = d;
    var G__12371 = e;
    var G__12372 = f;
    var G__12373 = g;
    var G__12374 = h;
    var G__12375 = i;
    var G__12376 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__12367, G__12368, G__12369, G__12370, G__12371, G__12372, G__12373, G__12374, G__12375, G__12376) : target_fn.call(null, G__12367, G__12368, G__12369, G__12370, G__12371, G__12372, G__12373, G__12374, G__12375, G__12376);
  };
  var G__13114__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12377 = a;
      var G__12378 = b;
      var G__12379 = c;
      var G__12380 = d;
      var G__12381 = e;
      var G__12382 = f;
      var G__12383 = g;
      var G__12384 = h;
      var G__12385 = i;
      var G__12386 = j;
      var G__12387 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__12377, G__12378, G__12379, G__12380, G__12381, G__12382, G__12383, G__12384, G__12385, G__12386, G__12387) : self__.dispatch_fn.call(null, G__12377, G__12378, G__12379, G__12380, G__12381, G__12382, G__12383, G__12384, G__12385, G__12386, G__12387);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12388 = a;
    var G__12389 = b;
    var G__12390 = c;
    var G__12391 = d;
    var G__12392 = e;
    var G__12393 = f;
    var G__12394 = g;
    var G__12395 = h;
    var G__12396 = i;
    var G__12397 = j;
    var G__12398 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12388, G__12389, G__12390, G__12391, G__12392, G__12393, G__12394, G__12395, G__12396, G__12397, G__12398) : target_fn.call(null, G__12388, G__12389, G__12390, G__12391, G__12392, G__12393, G__12394, G__12395, G__12396, G__12397, G__12398);
  };
  var G__13114__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12399 = a;
      var G__12400 = b;
      var G__12401 = c;
      var G__12402 = d;
      var G__12403 = e;
      var G__12404 = f;
      var G__12405 = g;
      var G__12406 = h;
      var G__12407 = i;
      var G__12408 = j;
      var G__12409 = k;
      var G__12410 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12399, G__12400, G__12401, G__12402, G__12403, G__12404, G__12405, G__12406, G__12407, G__12408, G__12409, G__12410) : self__.dispatch_fn.call(null, G__12399, G__12400, G__12401, G__12402, G__12403, G__12404, G__12405, G__12406, G__12407, G__12408, G__12409, G__12410);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12411 = a;
    var G__12412 = b;
    var G__12413 = c;
    var G__12414 = d;
    var G__12415 = e;
    var G__12416 = f;
    var G__12417 = g;
    var G__12418 = h;
    var G__12419 = i;
    var G__12420 = j;
    var G__12421 = k;
    var G__12422 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12411, G__12412, G__12413, G__12414, G__12415, G__12416, G__12417, G__12418, G__12419, G__12420, G__12421, G__12422) : target_fn.call(null, G__12411, G__12412, G__12413, G__12414, G__12415, G__12416, G__12417, G__12418, G__12419, G__12420, G__12421, G__12422);
  };
  var G__13114__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12423 = a;
      var G__12424 = b;
      var G__12425 = c;
      var G__12426 = d;
      var G__12427 = e;
      var G__12428 = f;
      var G__12429 = g;
      var G__12430 = h;
      var G__12431 = i;
      var G__12432 = j;
      var G__12433 = k;
      var G__12434 = l;
      var G__12435 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12423, G__12424, G__12425, G__12426, G__12427, G__12428, G__12429, G__12430, G__12431, G__12432, G__12433, G__12434, G__12435) : self__.dispatch_fn.call(null, G__12423, G__12424, G__12425, G__12426, G__12427, G__12428, G__12429, G__12430, G__12431, G__12432, G__12433, G__12434, G__12435);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12436 = a;
    var G__12437 = b;
    var G__12438 = c;
    var G__12439 = d;
    var G__12440 = e;
    var G__12441 = f;
    var G__12442 = g;
    var G__12443 = h;
    var G__12444 = i;
    var G__12445 = j;
    var G__12446 = k;
    var G__12447 = l;
    var G__12448 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12436, G__12437, G__12438, G__12439, G__12440, G__12441, G__12442, G__12443, G__12444, G__12445, G__12446, G__12447, G__12448) : target_fn.call(null, G__12436, G__12437, G__12438, G__12439, G__12440, G__12441, G__12442, G__12443, G__12444, G__12445, G__12446, G__12447, G__12448);
  };
  var G__13114__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12449 = a;
      var G__12450 = b;
      var G__12451 = c;
      var G__12452 = d;
      var G__12453 = e;
      var G__12454 = f;
      var G__12455 = g;
      var G__12456 = h;
      var G__12457 = i;
      var G__12458 = j;
      var G__12459 = k;
      var G__12460 = l;
      var G__12461 = m;
      var G__12462 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12449, G__12450, G__12451, G__12452, G__12453, G__12454, G__12455, G__12456, G__12457, G__12458, G__12459, G__12460, G__12461, G__12462) : self__.dispatch_fn.call(null, G__12449, G__12450, G__12451, G__12452, G__12453, G__12454, G__12455, G__12456, G__12457, G__12458, G__12459, G__12460, G__12461, G__12462);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12463 = a;
    var G__12464 = b;
    var G__12465 = c;
    var G__12466 = d;
    var G__12467 = e;
    var G__12468 = f;
    var G__12469 = g;
    var G__12470 = h;
    var G__12471 = i;
    var G__12472 = j;
    var G__12473 = k;
    var G__12474 = l;
    var G__12475 = m;
    var G__12476 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12463, G__12464, G__12465, G__12466, G__12467, G__12468, G__12469, G__12470, G__12471, G__12472, G__12473, G__12474, G__12475, G__12476) : target_fn.call(null, G__12463, G__12464, G__12465, G__12466, G__12467, G__12468, G__12469, G__12470, G__12471, G__12472, G__12473, G__12474, G__12475, G__12476);
  };
  var G__13114__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12477 = a;
      var G__12478 = b;
      var G__12479 = c;
      var G__12480 = d;
      var G__12481 = e;
      var G__12482 = f;
      var G__12483 = g;
      var G__12484 = h;
      var G__12485 = i;
      var G__12486 = j;
      var G__12487 = k;
      var G__12488 = l;
      var G__12489 = m;
      var G__12490 = n;
      var G__12491 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12477, G__12478, G__12479, G__12480, G__12481, G__12482, G__12483, G__12484, G__12485, G__12486, G__12487, G__12488, G__12489, G__12490, G__12491) : self__.dispatch_fn.call(null, G__12477, G__12478, G__12479, G__12480, G__12481, G__12482, G__12483, G__12484, G__12485, G__12486, G__12487, G__12488, G__12489, G__12490, G__12491);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12492 = a;
    var G__12493 = b;
    var G__12494 = c;
    var G__12495 = d;
    var G__12496 = e;
    var G__12497 = f;
    var G__12498 = g;
    var G__12499 = h;
    var G__12500 = i;
    var G__12501 = j;
    var G__12502 = k;
    var G__12503 = l;
    var G__12504 = m;
    var G__12505 = n;
    var G__12506 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12492, G__12493, G__12494, G__12495, G__12496, G__12497, G__12498, G__12499, G__12500, G__12501, G__12502, G__12503, G__12504, G__12505, G__12506) : target_fn.call(null, G__12492, G__12493, G__12494, G__12495, G__12496, G__12497, G__12498, G__12499, G__12500, G__12501, G__12502, G__12503, G__12504, G__12505, G__12506);
  };
  var G__13114__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12507 = a;
      var G__12508 = b;
      var G__12509 = c;
      var G__12510 = d;
      var G__12511 = e;
      var G__12512 = f;
      var G__12513 = g;
      var G__12514 = h;
      var G__12515 = i;
      var G__12516 = j;
      var G__12517 = k;
      var G__12518 = l;
      var G__12519 = m;
      var G__12520 = n;
      var G__12521 = o;
      var G__12522 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12507, G__12508, G__12509, G__12510, G__12511, G__12512, G__12513, G__12514, G__12515, G__12516, G__12517, G__12518, G__12519, G__12520, G__12521, G__12522) : self__.dispatch_fn.call(null, G__12507, G__12508, G__12509, G__12510, G__12511, G__12512, G__12513, G__12514, G__12515, G__12516, G__12517, G__12518, G__12519, G__12520, G__12521, G__12522);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12523 = a;
    var G__12524 = b;
    var G__12525 = c;
    var G__12526 = d;
    var G__12527 = e;
    var G__12528 = f;
    var G__12529 = g;
    var G__12530 = h;
    var G__12531 = i;
    var G__12532 = j;
    var G__12533 = k;
    var G__12534 = l;
    var G__12535 = m;
    var G__12536 = n;
    var G__12537 = o;
    var G__12538 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__12523, G__12524, G__12525, G__12526, G__12527, G__12528, G__12529, G__12530, G__12531, G__12532, G__12533, G__12534, G__12535, G__12536, G__12537, G__12538) : target_fn.call(null, G__12523, G__12524, G__12525, G__12526, G__12527, G__12528, G__12529, G__12530, G__12531, G__12532, G__12533, G__12534, G__12535, G__12536, G__12537, G__12538);
  };
  var G__13114__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12539 = a;
      var G__12540 = b;
      var G__12541 = c;
      var G__12542 = d;
      var G__12543 = e;
      var G__12544 = f;
      var G__12545 = g;
      var G__12546 = h;
      var G__12547 = i;
      var G__12548 = j;
      var G__12549 = k;
      var G__12550 = l;
      var G__12551 = m;
      var G__12552 = n;
      var G__12553 = o;
      var G__12554 = p;
      var G__12555 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__12539, G__12540, G__12541, G__12542, G__12543, G__12544, G__12545, G__12546, G__12547, G__12548, G__12549, G__12550, G__12551, G__12552, G__12553, G__12554, G__12555) : self__.dispatch_fn.call(null, G__12539, G__12540, G__12541, G__12542, G__12543, G__12544, G__12545, G__12546, G__12547, G__12548, G__12549, G__12550, G__12551, G__12552, G__12553, G__12554, G__12555);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12556 = a;
    var G__12557 = b;
    var G__12558 = c;
    var G__12559 = d;
    var G__12560 = e;
    var G__12561 = f;
    var G__12562 = g;
    var G__12563 = h;
    var G__12564 = i;
    var G__12565 = j;
    var G__12566 = k;
    var G__12567 = l;
    var G__12568 = m;
    var G__12569 = n;
    var G__12570 = o;
    var G__12571 = p;
    var G__12572 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__12556, G__12557, G__12558, G__12559, G__12560, G__12561, G__12562, G__12563, G__12564, G__12565, G__12566, G__12567, G__12568, G__12569, G__12570, G__12571, G__12572) : target_fn.call(null, G__12556, G__12557, G__12558, G__12559, G__12560, G__12561, G__12562, G__12563, G__12564, G__12565, G__12566, G__12567, G__12568, G__12569, G__12570, G__12571, G__12572);
  };
  var G__13114__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12573 = a;
      var G__12574 = b;
      var G__12575 = c;
      var G__12576 = d;
      var G__12577 = e;
      var G__12578 = f;
      var G__12579 = g;
      var G__12580 = h;
      var G__12581 = i;
      var G__12582 = j;
      var G__12583 = k;
      var G__12584 = l;
      var G__12585 = m;
      var G__12586 = n;
      var G__12587 = o;
      var G__12588 = p;
      var G__12589 = q;
      var G__12590 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__12573, G__12574, G__12575, G__12576, G__12577, G__12578, G__12579, G__12580, G__12581, G__12582, G__12583, G__12584, G__12585, G__12586, G__12587, G__12588, G__12589, G__12590) : self__.dispatch_fn.call(null, G__12573, G__12574, G__12575, G__12576, G__12577, G__12578, G__12579, G__12580, G__12581, G__12582, G__12583, G__12584, G__12585, G__12586, G__12587, G__12588, G__12589, G__12590);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12591 = a;
    var G__12592 = b;
    var G__12593 = c;
    var G__12594 = d;
    var G__12595 = e;
    var G__12596 = f;
    var G__12597 = g;
    var G__12598 = h;
    var G__12599 = i;
    var G__12600 = j;
    var G__12601 = k;
    var G__12602 = l;
    var G__12603 = m;
    var G__12604 = n;
    var G__12605 = o;
    var G__12606 = p;
    var G__12607 = q;
    var G__12608 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__12591, G__12592, G__12593, G__12594, G__12595, G__12596, G__12597, G__12598, G__12599, G__12600, G__12601, G__12602, G__12603, G__12604, G__12605, G__12606, G__12607, G__12608) : target_fn.call(null, G__12591, G__12592, G__12593, G__12594, G__12595, G__12596, G__12597, G__12598, G__12599, G__12600, G__12601, G__12602, G__12603, G__12604, G__12605, G__12606, G__12607, G__12608);
  };
  var G__13114__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12609 = a;
      var G__12610 = b;
      var G__12611 = c;
      var G__12612 = d;
      var G__12613 = e;
      var G__12614 = f;
      var G__12615 = g;
      var G__12616 = h;
      var G__12617 = i;
      var G__12618 = j;
      var G__12619 = k;
      var G__12620 = l;
      var G__12621 = m;
      var G__12622 = n;
      var G__12623 = o;
      var G__12624 = p;
      var G__12625 = q;
      var G__12626 = r;
      var G__12627 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__12609, G__12610, G__12611, G__12612, G__12613, G__12614, G__12615, G__12616, G__12617, G__12618, G__12619, G__12620, G__12621, G__12622, G__12623, G__12624, G__12625, G__12626, G__12627) : self__.dispatch_fn.call(null, G__12609, G__12610, G__12611, G__12612, G__12613, G__12614, G__12615, G__12616, G__12617, G__12618, G__12619, G__12620, G__12621, G__12622, G__12623, G__12624, G__12625, 
      G__12626, G__12627);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12628 = a;
    var G__12629 = b;
    var G__12630 = c;
    var G__12631 = d;
    var G__12632 = e;
    var G__12633 = f;
    var G__12634 = g;
    var G__12635 = h;
    var G__12636 = i;
    var G__12637 = j;
    var G__12638 = k;
    var G__12639 = l;
    var G__12640 = m;
    var G__12641 = n;
    var G__12642 = o;
    var G__12643 = p;
    var G__12644 = q;
    var G__12645 = r;
    var G__12646 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__12628, G__12629, G__12630, G__12631, G__12632, G__12633, G__12634, G__12635, G__12636, G__12637, G__12638, G__12639, G__12640, G__12641, G__12642, G__12643, G__12644, G__12645, G__12646) : target_fn.call(null, G__12628, G__12629, G__12630, G__12631, G__12632, G__12633, G__12634, G__12635, G__12636, G__12637, G__12638, G__12639, G__12640, G__12641, G__12642, G__12643, G__12644, G__12645, G__12646);
  };
  var G__13114__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__12647 = a;
      var G__12648 = b;
      var G__12649 = c;
      var G__12650 = d;
      var G__12651 = e;
      var G__12652 = f;
      var G__12653 = g;
      var G__12654 = h;
      var G__12655 = i;
      var G__12656 = j;
      var G__12657 = k;
      var G__12658 = l;
      var G__12659 = m;
      var G__12660 = n;
      var G__12661 = o;
      var G__12662 = p;
      var G__12663 = q;
      var G__12664 = r;
      var G__12665 = s;
      var G__12666 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__12647, G__12648, G__12649, G__12650, G__12651, G__12652, G__12653, G__12654, G__12655, G__12656, G__12657, G__12658, G__12659, G__12660, G__12661, G__12662, G__12663, G__12664, G__12665, G__12666) : self__.dispatch_fn.call(null, G__12647, G__12648, G__12649, G__12650, G__12651, G__12652, G__12653, G__12654, G__12655, G__12656, G__12657, G__12658, G__12659, G__12660, G__12661, G__12662, 
      G__12663, G__12664, G__12665, G__12666);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__12667 = a;
    var G__12668 = b;
    var G__12669 = c;
    var G__12670 = d;
    var G__12671 = e;
    var G__12672 = f;
    var G__12673 = g;
    var G__12674 = h;
    var G__12675 = i;
    var G__12676 = j;
    var G__12677 = k;
    var G__12678 = l;
    var G__12679 = m;
    var G__12680 = n;
    var G__12681 = o;
    var G__12682 = p;
    var G__12683 = q;
    var G__12684 = r;
    var G__12685 = s;
    var G__12686 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__12667, G__12668, G__12669, G__12670, G__12671, G__12672, G__12673, G__12674, G__12675, G__12676, G__12677, G__12678, G__12679, G__12680, G__12681, G__12682, G__12683, G__12684, G__12685, G__12686) : target_fn.call(null, G__12667, G__12668, G__12669, G__12670, G__12671, G__12672, G__12673, G__12674, G__12675, G__12676, G__12677, G__12678, G__12679, G__12680, G__12681, G__12682, G__12683, G__12684, G__12685, 
    G__12686);
  };
  var G__13114__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__13114 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__13114__1.call(this, self__);
      case 2:
        return G__13114__2.call(this, self__, a);
      case 3:
        return G__13114__3.call(this, self__, a, b);
      case 4:
        return G__13114__4.call(this, self__, a, b, c);
      case 5:
        return G__13114__5.call(this, self__, a, b, c, d);
      case 6:
        return G__13114__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__13114__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__13114__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__13114__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__13114__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__13114__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__13114__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__13114__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__13114__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__13114__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__13114__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__13114__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__13114__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__13114__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__13114__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__13114__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__13114__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13114.cljs$core$IFn$_invoke$arity$1 = G__13114__1;
  G__13114.cljs$core$IFn$_invoke$arity$2 = G__13114__2;
  G__13114.cljs$core$IFn$_invoke$arity$3 = G__13114__3;
  G__13114.cljs$core$IFn$_invoke$arity$4 = G__13114__4;
  G__13114.cljs$core$IFn$_invoke$arity$5 = G__13114__5;
  G__13114.cljs$core$IFn$_invoke$arity$6 = G__13114__6;
  G__13114.cljs$core$IFn$_invoke$arity$7 = G__13114__7;
  G__13114.cljs$core$IFn$_invoke$arity$8 = G__13114__8;
  G__13114.cljs$core$IFn$_invoke$arity$9 = G__13114__9;
  G__13114.cljs$core$IFn$_invoke$arity$10 = G__13114__10;
  G__13114.cljs$core$IFn$_invoke$arity$11 = G__13114__11;
  G__13114.cljs$core$IFn$_invoke$arity$12 = G__13114__12;
  G__13114.cljs$core$IFn$_invoke$arity$13 = G__13114__13;
  G__13114.cljs$core$IFn$_invoke$arity$14 = G__13114__14;
  G__13114.cljs$core$IFn$_invoke$arity$15 = G__13114__15;
  G__13114.cljs$core$IFn$_invoke$arity$16 = G__13114__16;
  G__13114.cljs$core$IFn$_invoke$arity$17 = G__13114__17;
  G__13114.cljs$core$IFn$_invoke$arity$18 = G__13114__18;
  G__13114.cljs$core$IFn$_invoke$arity$19 = G__13114__19;
  G__13114.cljs$core$IFn$_invoke$arity$20 = G__13114__20;
  G__13114.cljs$core$IFn$_invoke$arity$21 = G__13114__21;
  G__13114.cljs$core$IFn$_invoke$arity$22 = G__13114__22;
  return G__13114;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args12266) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12266)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12687 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__12687) : self__.dispatch_fn.call(null, G__12687);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12688 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__12688) : target_fn.call(null, G__12688);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12689 = a;
    var G__12690 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__12689, G__12690) : self__.dispatch_fn.call(null, G__12689, G__12690);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12691 = a;
  var G__12692 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__12691, G__12692) : target_fn.call(null, G__12691, G__12692);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12693 = a;
    var G__12694 = b;
    var G__12695 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__12693, G__12694, G__12695) : self__.dispatch_fn.call(null, G__12693, G__12694, G__12695);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12696 = a;
  var G__12697 = b;
  var G__12698 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__12696, G__12697, G__12698) : target_fn.call(null, G__12696, G__12697, G__12698);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12699 = a;
    var G__12700 = b;
    var G__12701 = c;
    var G__12702 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__12699, G__12700, G__12701, G__12702) : self__.dispatch_fn.call(null, G__12699, G__12700, G__12701, G__12702);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12703 = a;
  var G__12704 = b;
  var G__12705 = c;
  var G__12706 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__12703, G__12704, G__12705, G__12706) : target_fn.call(null, G__12703, G__12704, G__12705, G__12706);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12707 = a;
    var G__12708 = b;
    var G__12709 = c;
    var G__12710 = d;
    var G__12711 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__12707, G__12708, G__12709, G__12710, G__12711) : self__.dispatch_fn.call(null, G__12707, G__12708, G__12709, G__12710, G__12711);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12712 = a;
  var G__12713 = b;
  var G__12714 = c;
  var G__12715 = d;
  var G__12716 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__12712, G__12713, G__12714, G__12715, G__12716) : target_fn.call(null, G__12712, G__12713, G__12714, G__12715, G__12716);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12717 = a;
    var G__12718 = b;
    var G__12719 = c;
    var G__12720 = d;
    var G__12721 = e;
    var G__12722 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__12717, G__12718, G__12719, G__12720, G__12721, G__12722) : self__.dispatch_fn.call(null, G__12717, G__12718, G__12719, G__12720, G__12721, G__12722);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12723 = a;
  var G__12724 = b;
  var G__12725 = c;
  var G__12726 = d;
  var G__12727 = e;
  var G__12728 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__12723, G__12724, G__12725, G__12726, G__12727, G__12728) : target_fn.call(null, G__12723, G__12724, G__12725, G__12726, G__12727, G__12728);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12729 = a;
    var G__12730 = b;
    var G__12731 = c;
    var G__12732 = d;
    var G__12733 = e;
    var G__12734 = f;
    var G__12735 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12729, G__12730, G__12731, G__12732, G__12733, G__12734, G__12735) : self__.dispatch_fn.call(null, G__12729, G__12730, G__12731, G__12732, G__12733, G__12734, G__12735);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12736 = a;
  var G__12737 = b;
  var G__12738 = c;
  var G__12739 = d;
  var G__12740 = e;
  var G__12741 = f;
  var G__12742 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12736, G__12737, G__12738, G__12739, G__12740, G__12741, G__12742) : target_fn.call(null, G__12736, G__12737, G__12738, G__12739, G__12740, G__12741, G__12742);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12743 = a;
    var G__12744 = b;
    var G__12745 = c;
    var G__12746 = d;
    var G__12747 = e;
    var G__12748 = f;
    var G__12749 = g;
    var G__12750 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__12743, G__12744, G__12745, G__12746, G__12747, G__12748, G__12749, G__12750) : self__.dispatch_fn.call(null, G__12743, G__12744, G__12745, G__12746, G__12747, G__12748, G__12749, G__12750);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12751 = a;
  var G__12752 = b;
  var G__12753 = c;
  var G__12754 = d;
  var G__12755 = e;
  var G__12756 = f;
  var G__12757 = g;
  var G__12758 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__12751, G__12752, G__12753, G__12754, G__12755, G__12756, G__12757, G__12758) : target_fn.call(null, G__12751, G__12752, G__12753, G__12754, G__12755, G__12756, G__12757, G__12758);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12759 = a;
    var G__12760 = b;
    var G__12761 = c;
    var G__12762 = d;
    var G__12763 = e;
    var G__12764 = f;
    var G__12765 = g;
    var G__12766 = h;
    var G__12767 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__12759, G__12760, G__12761, G__12762, G__12763, G__12764, G__12765, G__12766, G__12767) : self__.dispatch_fn.call(null, G__12759, G__12760, G__12761, G__12762, G__12763, G__12764, G__12765, G__12766, G__12767);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12768 = a;
  var G__12769 = b;
  var G__12770 = c;
  var G__12771 = d;
  var G__12772 = e;
  var G__12773 = f;
  var G__12774 = g;
  var G__12775 = h;
  var G__12776 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__12768, G__12769, G__12770, G__12771, G__12772, G__12773, G__12774, G__12775, G__12776) : target_fn.call(null, G__12768, G__12769, G__12770, G__12771, G__12772, G__12773, G__12774, G__12775, G__12776);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12777 = a;
    var G__12778 = b;
    var G__12779 = c;
    var G__12780 = d;
    var G__12781 = e;
    var G__12782 = f;
    var G__12783 = g;
    var G__12784 = h;
    var G__12785 = i;
    var G__12786 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__12777, G__12778, G__12779, G__12780, G__12781, G__12782, G__12783, G__12784, G__12785, G__12786) : self__.dispatch_fn.call(null, G__12777, G__12778, G__12779, G__12780, G__12781, G__12782, G__12783, G__12784, G__12785, G__12786);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12787 = a;
  var G__12788 = b;
  var G__12789 = c;
  var G__12790 = d;
  var G__12791 = e;
  var G__12792 = f;
  var G__12793 = g;
  var G__12794 = h;
  var G__12795 = i;
  var G__12796 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__12787, G__12788, G__12789, G__12790, G__12791, G__12792, G__12793, G__12794, G__12795, G__12796) : target_fn.call(null, G__12787, G__12788, G__12789, G__12790, G__12791, G__12792, G__12793, G__12794, G__12795, G__12796);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12797 = a;
    var G__12798 = b;
    var G__12799 = c;
    var G__12800 = d;
    var G__12801 = e;
    var G__12802 = f;
    var G__12803 = g;
    var G__12804 = h;
    var G__12805 = i;
    var G__12806 = j;
    var G__12807 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__12797, G__12798, G__12799, G__12800, G__12801, G__12802, G__12803, G__12804, G__12805, G__12806, G__12807) : self__.dispatch_fn.call(null, G__12797, G__12798, G__12799, G__12800, G__12801, G__12802, G__12803, G__12804, G__12805, G__12806, G__12807);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12808 = a;
  var G__12809 = b;
  var G__12810 = c;
  var G__12811 = d;
  var G__12812 = e;
  var G__12813 = f;
  var G__12814 = g;
  var G__12815 = h;
  var G__12816 = i;
  var G__12817 = j;
  var G__12818 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12808, G__12809, G__12810, G__12811, G__12812, G__12813, G__12814, G__12815, G__12816, G__12817, G__12818) : target_fn.call(null, G__12808, G__12809, G__12810, G__12811, G__12812, G__12813, G__12814, G__12815, G__12816, G__12817, G__12818);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12819 = a;
    var G__12820 = b;
    var G__12821 = c;
    var G__12822 = d;
    var G__12823 = e;
    var G__12824 = f;
    var G__12825 = g;
    var G__12826 = h;
    var G__12827 = i;
    var G__12828 = j;
    var G__12829 = k;
    var G__12830 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12819, G__12820, G__12821, G__12822, G__12823, G__12824, G__12825, G__12826, G__12827, G__12828, G__12829, G__12830) : self__.dispatch_fn.call(null, G__12819, G__12820, G__12821, G__12822, G__12823, G__12824, G__12825, G__12826, G__12827, G__12828, G__12829, G__12830);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12831 = a;
  var G__12832 = b;
  var G__12833 = c;
  var G__12834 = d;
  var G__12835 = e;
  var G__12836 = f;
  var G__12837 = g;
  var G__12838 = h;
  var G__12839 = i;
  var G__12840 = j;
  var G__12841 = k;
  var G__12842 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12831, G__12832, G__12833, G__12834, G__12835, G__12836, G__12837, G__12838, G__12839, G__12840, G__12841, G__12842) : target_fn.call(null, G__12831, G__12832, G__12833, G__12834, G__12835, G__12836, G__12837, G__12838, G__12839, G__12840, G__12841, G__12842);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12843 = a;
    var G__12844 = b;
    var G__12845 = c;
    var G__12846 = d;
    var G__12847 = e;
    var G__12848 = f;
    var G__12849 = g;
    var G__12850 = h;
    var G__12851 = i;
    var G__12852 = j;
    var G__12853 = k;
    var G__12854 = l;
    var G__12855 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12843, G__12844, G__12845, G__12846, G__12847, G__12848, G__12849, G__12850, G__12851, G__12852, G__12853, G__12854, G__12855) : self__.dispatch_fn.call(null, G__12843, G__12844, G__12845, G__12846, G__12847, G__12848, G__12849, G__12850, G__12851, G__12852, G__12853, G__12854, G__12855);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12856 = a;
  var G__12857 = b;
  var G__12858 = c;
  var G__12859 = d;
  var G__12860 = e;
  var G__12861 = f;
  var G__12862 = g;
  var G__12863 = h;
  var G__12864 = i;
  var G__12865 = j;
  var G__12866 = k;
  var G__12867 = l;
  var G__12868 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12856, G__12857, G__12858, G__12859, G__12860, G__12861, G__12862, G__12863, G__12864, G__12865, G__12866, G__12867, G__12868) : target_fn.call(null, G__12856, G__12857, G__12858, G__12859, G__12860, G__12861, G__12862, G__12863, G__12864, G__12865, G__12866, G__12867, G__12868);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12869 = a;
    var G__12870 = b;
    var G__12871 = c;
    var G__12872 = d;
    var G__12873 = e;
    var G__12874 = f;
    var G__12875 = g;
    var G__12876 = h;
    var G__12877 = i;
    var G__12878 = j;
    var G__12879 = k;
    var G__12880 = l;
    var G__12881 = m;
    var G__12882 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12869, G__12870, G__12871, G__12872, G__12873, G__12874, G__12875, G__12876, G__12877, G__12878, G__12879, G__12880, G__12881, G__12882) : self__.dispatch_fn.call(null, G__12869, G__12870, G__12871, G__12872, G__12873, G__12874, G__12875, G__12876, G__12877, G__12878, G__12879, G__12880, G__12881, G__12882);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12883 = a;
  var G__12884 = b;
  var G__12885 = c;
  var G__12886 = d;
  var G__12887 = e;
  var G__12888 = f;
  var G__12889 = g;
  var G__12890 = h;
  var G__12891 = i;
  var G__12892 = j;
  var G__12893 = k;
  var G__12894 = l;
  var G__12895 = m;
  var G__12896 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12883, G__12884, G__12885, G__12886, G__12887, G__12888, G__12889, G__12890, G__12891, G__12892, G__12893, G__12894, G__12895, G__12896) : target_fn.call(null, G__12883, G__12884, G__12885, G__12886, G__12887, G__12888, G__12889, G__12890, G__12891, G__12892, G__12893, G__12894, G__12895, G__12896);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12897 = a;
    var G__12898 = b;
    var G__12899 = c;
    var G__12900 = d;
    var G__12901 = e;
    var G__12902 = f;
    var G__12903 = g;
    var G__12904 = h;
    var G__12905 = i;
    var G__12906 = j;
    var G__12907 = k;
    var G__12908 = l;
    var G__12909 = m;
    var G__12910 = n;
    var G__12911 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12897, G__12898, G__12899, G__12900, G__12901, G__12902, G__12903, G__12904, G__12905, G__12906, G__12907, G__12908, G__12909, G__12910, G__12911) : self__.dispatch_fn.call(null, G__12897, G__12898, G__12899, G__12900, G__12901, G__12902, G__12903, G__12904, G__12905, G__12906, G__12907, G__12908, G__12909, G__12910, G__12911);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12912 = a;
  var G__12913 = b;
  var G__12914 = c;
  var G__12915 = d;
  var G__12916 = e;
  var G__12917 = f;
  var G__12918 = g;
  var G__12919 = h;
  var G__12920 = i;
  var G__12921 = j;
  var G__12922 = k;
  var G__12923 = l;
  var G__12924 = m;
  var G__12925 = n;
  var G__12926 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12912, G__12913, G__12914, G__12915, G__12916, G__12917, G__12918, G__12919, G__12920, G__12921, G__12922, G__12923, G__12924, G__12925, G__12926) : target_fn.call(null, G__12912, G__12913, G__12914, G__12915, G__12916, G__12917, G__12918, G__12919, G__12920, G__12921, G__12922, G__12923, G__12924, G__12925, G__12926);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12927 = a;
    var G__12928 = b;
    var G__12929 = c;
    var G__12930 = d;
    var G__12931 = e;
    var G__12932 = f;
    var G__12933 = g;
    var G__12934 = h;
    var G__12935 = i;
    var G__12936 = j;
    var G__12937 = k;
    var G__12938 = l;
    var G__12939 = m;
    var G__12940 = n;
    var G__12941 = o;
    var G__12942 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12927, G__12928, G__12929, G__12930, G__12931, G__12932, G__12933, G__12934, G__12935, G__12936, G__12937, G__12938, G__12939, G__12940, G__12941, G__12942) : self__.dispatch_fn.call(null, G__12927, G__12928, G__12929, G__12930, G__12931, G__12932, G__12933, G__12934, G__12935, G__12936, G__12937, G__12938, G__12939, G__12940, G__12941, G__12942);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12943 = a;
  var G__12944 = b;
  var G__12945 = c;
  var G__12946 = d;
  var G__12947 = e;
  var G__12948 = f;
  var G__12949 = g;
  var G__12950 = h;
  var G__12951 = i;
  var G__12952 = j;
  var G__12953 = k;
  var G__12954 = l;
  var G__12955 = m;
  var G__12956 = n;
  var G__12957 = o;
  var G__12958 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__12943, G__12944, G__12945, G__12946, G__12947, G__12948, G__12949, G__12950, G__12951, G__12952, G__12953, G__12954, G__12955, G__12956, G__12957, G__12958) : target_fn.call(null, G__12943, G__12944, G__12945, G__12946, G__12947, G__12948, G__12949, G__12950, G__12951, G__12952, G__12953, G__12954, G__12955, G__12956, G__12957, G__12958);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12959 = a;
    var G__12960 = b;
    var G__12961 = c;
    var G__12962 = d;
    var G__12963 = e;
    var G__12964 = f;
    var G__12965 = g;
    var G__12966 = h;
    var G__12967 = i;
    var G__12968 = j;
    var G__12969 = k;
    var G__12970 = l;
    var G__12971 = m;
    var G__12972 = n;
    var G__12973 = o;
    var G__12974 = p;
    var G__12975 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__12959, G__12960, G__12961, G__12962, G__12963, G__12964, G__12965, G__12966, G__12967, G__12968, G__12969, G__12970, G__12971, G__12972, G__12973, G__12974, G__12975) : self__.dispatch_fn.call(null, G__12959, G__12960, G__12961, G__12962, G__12963, G__12964, G__12965, G__12966, G__12967, G__12968, G__12969, G__12970, G__12971, G__12972, G__12973, G__12974, G__12975);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__12976 = a;
  var G__12977 = b;
  var G__12978 = c;
  var G__12979 = d;
  var G__12980 = e;
  var G__12981 = f;
  var G__12982 = g;
  var G__12983 = h;
  var G__12984 = i;
  var G__12985 = j;
  var G__12986 = k;
  var G__12987 = l;
  var G__12988 = m;
  var G__12989 = n;
  var G__12990 = o;
  var G__12991 = p;
  var G__12992 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__12976, G__12977, G__12978, G__12979, G__12980, G__12981, G__12982, G__12983, G__12984, G__12985, G__12986, G__12987, G__12988, G__12989, G__12990, G__12991, G__12992) : target_fn.call(null, G__12976, G__12977, G__12978, G__12979, G__12980, G__12981, G__12982, G__12983, G__12984, G__12985, G__12986, G__12987, G__12988, G__12989, G__12990, G__12991, G__12992);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__12993 = a;
    var G__12994 = b;
    var G__12995 = c;
    var G__12996 = d;
    var G__12997 = e;
    var G__12998 = f;
    var G__12999 = g;
    var G__13000 = h;
    var G__13001 = i;
    var G__13002 = j;
    var G__13003 = k;
    var G__13004 = l;
    var G__13005 = m;
    var G__13006 = n;
    var G__13007 = o;
    var G__13008 = p;
    var G__13009 = q;
    var G__13010 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__12993, G__12994, G__12995, G__12996, G__12997, G__12998, G__12999, G__13000, G__13001, G__13002, G__13003, G__13004, G__13005, G__13006, G__13007, G__13008, G__13009, G__13010) : self__.dispatch_fn.call(null, G__12993, G__12994, G__12995, G__12996, G__12997, G__12998, G__12999, G__13000, G__13001, G__13002, G__13003, G__13004, G__13005, G__13006, G__13007, G__13008, G__13009, G__13010);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13011 = a;
  var G__13012 = b;
  var G__13013 = c;
  var G__13014 = d;
  var G__13015 = e;
  var G__13016 = f;
  var G__13017 = g;
  var G__13018 = h;
  var G__13019 = i;
  var G__13020 = j;
  var G__13021 = k;
  var G__13022 = l;
  var G__13023 = m;
  var G__13024 = n;
  var G__13025 = o;
  var G__13026 = p;
  var G__13027 = q;
  var G__13028 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__13011, G__13012, G__13013, G__13014, G__13015, G__13016, G__13017, G__13018, G__13019, G__13020, G__13021, G__13022, G__13023, G__13024, G__13025, G__13026, G__13027, G__13028) : target_fn.call(null, G__13011, G__13012, G__13013, G__13014, G__13015, G__13016, G__13017, G__13018, G__13019, G__13020, G__13021, G__13022, G__13023, G__13024, G__13025, G__13026, G__13027, G__13028);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13029 = a;
    var G__13030 = b;
    var G__13031 = c;
    var G__13032 = d;
    var G__13033 = e;
    var G__13034 = f;
    var G__13035 = g;
    var G__13036 = h;
    var G__13037 = i;
    var G__13038 = j;
    var G__13039 = k;
    var G__13040 = l;
    var G__13041 = m;
    var G__13042 = n;
    var G__13043 = o;
    var G__13044 = p;
    var G__13045 = q;
    var G__13046 = r;
    var G__13047 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__13029, G__13030, G__13031, G__13032, G__13033, G__13034, G__13035, G__13036, G__13037, G__13038, G__13039, G__13040, G__13041, G__13042, G__13043, G__13044, G__13045, G__13046, G__13047) : self__.dispatch_fn.call(null, G__13029, G__13030, G__13031, G__13032, G__13033, G__13034, G__13035, G__13036, G__13037, G__13038, G__13039, G__13040, G__13041, G__13042, G__13043, G__13044, G__13045, 
    G__13046, G__13047);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13048 = a;
  var G__13049 = b;
  var G__13050 = c;
  var G__13051 = d;
  var G__13052 = e;
  var G__13053 = f;
  var G__13054 = g;
  var G__13055 = h;
  var G__13056 = i;
  var G__13057 = j;
  var G__13058 = k;
  var G__13059 = l;
  var G__13060 = m;
  var G__13061 = n;
  var G__13062 = o;
  var G__13063 = p;
  var G__13064 = q;
  var G__13065 = r;
  var G__13066 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__13048, G__13049, G__13050, G__13051, G__13052, G__13053, G__13054, G__13055, G__13056, G__13057, G__13058, G__13059, G__13060, G__13061, G__13062, G__13063, G__13064, G__13065, G__13066) : target_fn.call(null, G__13048, G__13049, G__13050, G__13051, G__13052, G__13053, G__13054, G__13055, G__13056, G__13057, G__13058, G__13059, G__13060, G__13061, G__13062, G__13063, G__13064, G__13065, G__13066);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__13067 = a;
    var G__13068 = b;
    var G__13069 = c;
    var G__13070 = d;
    var G__13071 = e;
    var G__13072 = f;
    var G__13073 = g;
    var G__13074 = h;
    var G__13075 = i;
    var G__13076 = j;
    var G__13077 = k;
    var G__13078 = l;
    var G__13079 = m;
    var G__13080 = n;
    var G__13081 = o;
    var G__13082 = p;
    var G__13083 = q;
    var G__13084 = r;
    var G__13085 = s;
    var G__13086 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__13067, G__13068, G__13069, G__13070, G__13071, G__13072, G__13073, G__13074, G__13075, G__13076, G__13077, G__13078, G__13079, G__13080, G__13081, G__13082, G__13083, G__13084, G__13085, G__13086) : self__.dispatch_fn.call(null, G__13067, G__13068, G__13069, G__13070, G__13071, G__13072, G__13073, G__13074, G__13075, G__13076, G__13077, G__13078, G__13079, G__13080, G__13081, G__13082, 
    G__13083, G__13084, G__13085, G__13086);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__13087 = a;
  var G__13088 = b;
  var G__13089 = c;
  var G__13090 = d;
  var G__13091 = e;
  var G__13092 = f;
  var G__13093 = g;
  var G__13094 = h;
  var G__13095 = i;
  var G__13096 = j;
  var G__13097 = k;
  var G__13098 = l;
  var G__13099 = m;
  var G__13100 = n;
  var G__13101 = o;
  var G__13102 = p;
  var G__13103 = q;
  var G__13104 = r;
  var G__13105 = s;
  var G__13106 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__13087, G__13088, G__13089, G__13090, G__13091, G__13092, G__13093, G__13094, G__13095, G__13096, G__13097, G__13098, G__13099, G__13100, G__13101, G__13102, G__13103, G__13104, G__13105, G__13106) : target_fn.call(null, G__13087, G__13088, G__13089, G__13090, G__13091, G__13092, G__13093, G__13094, G__13095, G__13096, G__13097, G__13098, G__13099, G__13100, G__13101, G__13102, G__13103, G__13104, G__13105, 
  G__13106);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__13107 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13107) : cljs.core.deref.call(null, G__13107);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__13108 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13108) : cljs.core.deref.call(null, G__13108);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__13110 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13110) : cljs.core.deref.call(null, G__13110);
  }(), function() {
    var G__13111 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13111) : cljs.core.deref.call(null, G__13111);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4423__auto__ = function() {
    var G__13112 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13112) : cljs.core.deref.call(null, G__13112);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var target_fn = temp__4423__auto__;
    return target_fn;
  } else {
    var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var target_fn = temp__4423__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__13113 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13113) : cljs.core.deref.call(null, G__13113);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__13109 = this$__$1;
  return goog.getUid(G__13109);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = function() {
      var G__13115 = self__.uuid;
      return goog.string.hashCode(G__13115);
    }();
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__13116 = self__.uuid;
  var G__13117 = other.uuid;
  return goog.array.defaultCompare(G__13116, G__13117);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(15).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(14)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error;
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info() {
  var G__13119 = arguments.length;
  switch(G__13119) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__13125 = x;
      var G__13126 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__13125, G__13126) : pred.call(null, G__13125, G__13126);
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(function() {
        var G__13127 = y;
        var G__13128 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__13127, G__13128) : pred.call(null, G__13127, G__13128);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__13129 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__13129) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write(writer__4887__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
goog.provide("warm_places.core");
goog.require("cljs.core");
warm_places.core.average = function warm_places$core$average(a, b) {
  return (a + b) / 2;
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join() {
  var G__13281 = arguments.length;
  switch(G__13281) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (coll__$1) {
      var G__13283 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__13284 = cljs.core.next.call(null, coll__$1);
      sb = G__13283;
      coll__$1 = G__13284;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (coll__$1) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__13285 = sb;
      var G__13286 = coll__$2;
      sb = G__13285;
      coll__$1 = G__13286;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__13287 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__13287;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__13291 = cljs.core._EQ_;
    var expr__13292 = limit;
    if (cljs.core.truth_(pred__13291.call(null, 1, expr__13292))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__13291.call(null, 2, expr__13292))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split() {
  var G__13295 = arguments.length;
  switch(G__13295) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (cljs.core._EQ_.call(null, limit__$1, 1)) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var temp__4423__auto__ = cljs.core.re_find.call(null, re, s__$1);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var m = temp__4423__auto__;
          var index = s__$1.indexOf(m);
          var G__13297 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__13298 = limit__$1 - 1;
          var G__13299 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__13297;
          limit__$1 = G__13298;
          parts = G__13299;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__13300 = index - 1;
        index = G__13300;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4423__auto___13301 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4423__auto___13301)) {
        var replacement_13302 = temp__4423__auto___13301;
        buffer.append([cljs.core.str(replacement_13302)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__13303 = index + 1;
      index = G__13303;
      continue;
    }
    break;
  }
};
goog.provide("speclj.platform");
goog.require("cljs.core");
goog.require("clojure.string");
speclj.platform.endl = "\n";
speclj.platform.file_separator = "/";
speclj.platform.re_type = cljs.core.type.call(null, /./);
speclj.platform.re_QMARK_ = function speclj$platform$re_QMARK_(obj) {
  return cljs.core._EQ_.call(null, speclj.platform.re_type, cljs.core.type.call(null, obj));
};
speclj.platform.SpecFailure = function(message) {
  this.message = message;
};
speclj.platform.SpecFailure.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "message", "message", 1234475525, null)], null);
};
speclj.platform.SpecFailure.cljs$lang$type = true;
speclj.platform.SpecFailure.cljs$lang$ctorStr = "speclj.platform/SpecFailure";
speclj.platform.SpecFailure.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.platform/SpecFailure");
};
speclj.platform.__GT_SpecFailure = function speclj$platform$__GT_SpecFailure(message) {
  return new speclj.platform.SpecFailure(message);
};
speclj.platform.SpecPending = function(message) {
  this.message = message;
};
speclj.platform.SpecPending.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "message", "message", 1234475525, null)], null);
};
speclj.platform.SpecPending.cljs$lang$type = true;
speclj.platform.SpecPending.cljs$lang$ctorStr = "speclj.platform/SpecPending";
speclj.platform.SpecPending.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.platform/SpecPending");
};
speclj.platform.__GT_SpecPending = function speclj$platform$__GT_SpecPending(message) {
  return new speclj.platform.SpecPending(message);
};
speclj.platform.bound_by_should_invoke_QMARK_ = function speclj$platform$bound_by_should_invoke_QMARK_() {
  return speclj.platform._STAR_bound_by_should_invoke_STAR_;
};
speclj.platform.throwable = Object;
speclj.platform.exception = Error;
speclj.platform.failure = speclj.platform.SpecFailure;
speclj.platform.pending = speclj.platform.SpecPending;
speclj.platform.difference_greater_than_delta_QMARK_ = function speclj$platform$difference_greater_than_delta_QMARK_(expected, actual, delta) {
  return Math.abs(expected - actual) > Math.abs(delta);
};
speclj.platform.pending_QMARK_ = function speclj$platform$pending_QMARK_(e) {
  return cljs.core.isa_QMARK_.call(null, cljs.core.type.call(null, e), speclj.platform.pending);
};
speclj.platform.failure_QMARK_ = function speclj$platform$failure_QMARK_(e) {
  return cljs.core.isa_QMARK_.call(null, cljs.core.type.call(null, e), speclj.platform.failure);
};
speclj.platform.error_message = function speclj$platform$error_message(e) {
  return e.message;
};
speclj.platform.failure_source = function speclj$platform$failure_source(e) {
  if (cljs.core.truth_(e.fileName)) {
    return [cljs.core.str(e.fileName), cljs.core.str(":"), cljs.core.str(function() {
      var or__4307__auto__ = e.lineNumber;
      if (cljs.core.truth_(or__4307__auto__)) {
        return or__4307__auto__;
      } else {
        return "?";
      }
    }())].join("");
  } else {
    if (cljs.core.truth_(e.stack)) {
      return clojure.string.trim.call(null, cljs.core.nth.call(null, clojure.string.split_lines.call(null, e.stack), cljs.core.count.call(null, clojure.string.split_lines.call(null, e.message))));
    } else {
      return "unkown-file:?";
    }
  }
};
speclj.platform.stack_trace = function speclj$platform$stack_trace(e) {
  return cljs.core.rest.call(null, clojure.string.split_lines.call(null, function() {
    var or__4307__auto__ = e.stack;
    if (cljs.core.truth_(or__4307__auto__)) {
      return or__4307__auto__;
    } else {
      return e.toString();
    }
  }()));
};
speclj.platform.cause = function speclj$platform$cause(e) {
  return null;
};
speclj.platform.print_stack_trace = function speclj$platform$print_stack_trace(e) {
  return cljs.core.println.call(null, function() {
    var or__4307__auto__ = e.stack;
    if (cljs.core.truth_(or__4307__auto__)) {
      return or__4307__auto__;
    } else {
      return "missing stack trace";
    }
  }());
};
speclj.platform.elide_level_QMARK_ = function speclj$platform$elide_level_QMARK_(stack_element) {
  return false;
};
speclj.platform.type_name = function speclj$platform$type_name(t) {
  if (cljs.core.truth_(t)) {
    return t.name;
  } else {
    return "nil";
  }
};
speclj.platform.format_seconds = function speclj$platform$format_seconds(secs) {
  return secs.toFixed(5);
};
speclj.platform.current_time = function speclj$platform$current_time() {
  return (new Date).getTime();
};
speclj.platform.secs_since = function speclj$platform$secs_since(start) {
  return ((new Date).getTime() - start) / 1E3;
};
cljs.core._STAR_print_fn_STAR_ = function(thing) {
  return console.log(thing);
};
speclj.platform.dynamically_invoke = function speclj$platform$dynamically_invoke(ns_name, fn_name) {
  var code = [cljs.core.str(clojure.string.replace.call(null, ns_name, "-", "_")), cljs.core.str("."), cljs.core.str(clojure.string.replace.call(null, fn_name, "-", "_")), cljs.core.str("();")].join("");
  return eval(code);
};
goog.provide("speclj.config");
goog.require("cljs.core");
goog.require("speclj.platform");
speclj.config.default_reporters = cljs.core.atom.call(null, null);
speclj.config.active_reporters = function speclj$config$active_reporters() {
  if (cljs.core.truth_(speclj.config._STAR_reporters_STAR_)) {
    return speclj.config._STAR_reporters_STAR_;
  } else {
    var temp__4423__auto__ = cljs.core.deref.call(null, speclj.config.default_reporters);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var reporters = temp__4423__auto__;
      return reporters;
    } else {
      throw new Error("*reporters* is unbound and no default value has been provided");
    }
  }
};
speclj.config.default_runner = cljs.core.atom.call(null, null);
speclj.config.default_runner_fn = cljs.core.atom.call(null, null);
speclj.config.active_runner = function speclj$config$active_runner() {
  if (cljs.core.truth_(speclj.config._STAR_runner_STAR_)) {
    return speclj.config._STAR_runner_STAR_;
  } else {
    var temp__4423__auto__ = cljs.core.deref.call(null, speclj.config.default_runner);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var runner = temp__4423__auto__;
      return runner;
    } else {
      throw new Error("*runner* is unbound and no default value has been provided");
    }
  }
};
speclj.config._STAR_omit_pending_QMARK__STAR_ = false;
speclj.config._STAR_color_QMARK__STAR_ = false;
speclj.config._STAR_full_stack_trace_QMARK__STAR_ = false;
speclj.config._STAR_tag_filter_STAR_ = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "include", "include", 153360230), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "exclude", "exclude", -1230250334), cljs.core.PersistentHashSet.EMPTY], null);
speclj.config.default_config = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "specs", "specs", 1426570741), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["spec"], null), new cljs.core.Keyword(null, "runner", "runner", 1945441304), "standard", new cljs.core.Keyword(null, "reporters", "reporters", -373999166), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["progress"], null), new cljs.core.Keyword(null, 
"tags", "tags", 1771418977), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "omit-pending", "omit-pending", -1591740250), false], null);
speclj.config.config_bindings = function speclj$config$config_bindings() {
  throw "Not Supported in ClojureScript";
};
speclj.config.load_runner = function speclj$config$load_runner(name) {
  try {
    return speclj.platform.dynamically_invoke.call(null, [cljs.core.str("speclj.run."), cljs.core.str(name)].join(""), [cljs.core.str("new-"), cljs.core.str(name), cljs.core.str("-runner")].join(""));
  } catch (e13710) {
    var e = e13710;
    throw new Error([cljs.core.str("Failed to load runner: "), cljs.core.str(name)].join(""), e);
  }
};
speclj.config.load_reporter_by_name = function speclj$config$load_reporter_by_name(name) {
  try {
    return speclj.platform.dynamically_invoke.call(null, [cljs.core.str("speclj.report."), cljs.core.str(name)].join(""), [cljs.core.str("new-"), cljs.core.str(name), cljs.core.str("-reporter")].join(""));
  } catch (e13712) {
    var e = e13712;
    throw new Error([cljs.core.str("Failed to load reporter: "), cljs.core.str(name)].join(""), e);
  }
};
speclj.config.load_reporter = function speclj$config$load_reporter(name_or_object) {
  if (typeof name_or_object === "string") {
    return speclj.config.load_reporter_by_name.call(null, name_or_object);
  } else {
    return name_or_object;
  }
};
speclj.config.parse_tags = function speclj$config$parse_tags(values) {
  var result = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "includes", "includes", -438304563), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "excludes", "excludes", -1791725945), cljs.core.PersistentHashSet.EMPTY], null);
  var values__$1 = values;
  while (true) {
    if (cljs.core.seq.call(null, values__$1)) {
      var value = cljs.core.name.call(null, cljs.core.first.call(null, values__$1));
      if (cljs.core._EQ_.call(null, "~", cljs.core.first.call(null, value))) {
        var G__13713 = cljs.core.update_in.call(null, result, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "excludes", "excludes", -1791725945)], null), cljs.core.conj, cljs.core.keyword.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.rest.call(null, value))));
        var G__13714 = cljs.core.rest.call(null, values__$1);
        result = G__13713;
        values__$1 = G__13714;
        continue;
      } else {
        var G__13715 = cljs.core.update_in.call(null, result, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "includes", "includes", -438304563)], null), cljs.core.conj, cljs.core.keyword.call(null, value));
        var G__13716 = cljs.core.rest.call(null, values__$1);
        result = G__13715;
        values__$1 = G__13716;
        continue;
      }
    } else {
      return result;
    }
    break;
  }
};
speclj.config.config_mappings = function speclj$config$config_mappings(_) {
  throw "Not Supportedin ClojureScript";
};
speclj.config.with_config = function speclj$config$with_config(config, action) {
  var _STAR_runner_STAR_13724 = speclj.config._STAR_runner_STAR_;
  var _STAR_reporters_STAR_13725 = speclj.config._STAR_reporters_STAR_;
  var _STAR_specs_STAR_13726 = speclj.config._STAR_specs_STAR_;
  var _STAR_color_QMARK__STAR_13727 = speclj.config._STAR_color_QMARK__STAR_;
  var _STAR_omit_pending_QMARK__STAR_13728 = speclj.config._STAR_omit_pending_QMARK__STAR_;
  var _STAR_full_stack_trace_QMARK__STAR_13729 = speclj.config._STAR_full_stack_trace_QMARK__STAR_;
  var _STAR_tag_filter_STAR_13730 = speclj.config._STAR_tag_filter_STAR_;
  speclj.config._STAR_runner_STAR_ = cljs.core.truth_((new cljs.core.Keyword(null, "runner", "runner", 1945441304)).cljs$core$IFn$_invoke$arity$1(config)) ? function() {
    cljs.core.println.call(null, "loading runner in config");
    return speclj.config.load_runner.call(null, (new cljs.core.Keyword(null, "runner", "runner", 1945441304)).cljs$core$IFn$_invoke$arity$1(config));
  }() : speclj.config.active_runner.call(null);
  speclj.config._STAR_reporters_STAR_ = cljs.core.truth_((new cljs.core.Keyword(null, "reporters", "reporters", -373999166)).cljs$core$IFn$_invoke$arity$1(config)) ? cljs.core.mapv.call(null, speclj.config.load_reporter, (new cljs.core.Keyword(null, "reporters", "reporters", -373999166)).cljs$core$IFn$_invoke$arity$1(config)) : speclj.config.active_reporters.call(null);
  speclj.config._STAR_specs_STAR_ = (new cljs.core.Keyword(null, "specs", "specs", 1426570741)).cljs$core$IFn$_invoke$arity$1(config);
  speclj.config._STAR_color_QMARK__STAR_ = (new cljs.core.Keyword(null, "color", "color", 1011675173)).cljs$core$IFn$_invoke$arity$1(config);
  speclj.config._STAR_omit_pending_QMARK__STAR_ = (new cljs.core.Keyword(null, "omit-pending", "omit-pending", -1591740250)).cljs$core$IFn$_invoke$arity$1(config);
  speclj.config._STAR_full_stack_trace_QMARK__STAR_ = !((new cljs.core.Keyword(null, "stacktrace", "stacktrace", -95588394)).cljs$core$IFn$_invoke$arity$1(config) == null);
  speclj.config._STAR_tag_filter_STAR_ = speclj.config.parse_tags.call(null, (new cljs.core.Keyword(null, "tags", "tags", 1771418977)).cljs$core$IFn$_invoke$arity$1(config));
  try {
    return action.call(null);
  } finally {
    speclj.config._STAR_tag_filter_STAR_ = _STAR_tag_filter_STAR_13730;
    speclj.config._STAR_full_stack_trace_QMARK__STAR_ = _STAR_full_stack_trace_QMARK__STAR_13729;
    speclj.config._STAR_omit_pending_QMARK__STAR_ = _STAR_omit_pending_QMARK__STAR_13728;
    speclj.config._STAR_color_QMARK__STAR_ = _STAR_color_QMARK__STAR_13727;
    speclj.config._STAR_specs_STAR_ = _STAR_specs_STAR_13726;
    speclj.config._STAR_reporters_STAR_ = _STAR_reporters_STAR_13725;
    speclj.config._STAR_runner_STAR_ = _STAR_runner_STAR_13724;
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function clojure$set$bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__13326_SHARP_) {
      return max === p1__13326_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function clojure$set$union() {
  var G__13331 = arguments.length;
  switch(G__13331) {
    case 0:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.union.cljs$lang$applyTo = function(seq13327) {
  var G__13328 = cljs.core.first.call(null, seq13327);
  var seq13327__$1 = cljs.core.next.call(null, seq13327);
  var G__13329 = cljs.core.first.call(null, seq13327__$1);
  var seq13327__$2 = cljs.core.next.call(null, seq13327__$1);
  return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(G__13328, G__13329, seq13327__$2);
};
clojure.set.union.cljs$lang$maxFixedArity = 2;
clojure.set.intersection = function clojure$set$intersection() {
  var G__13338 = arguments.length;
  switch(G__13338) {
    case 1:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  while (true) {
    if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
      var G__13340 = s2;
      var G__13341 = s1;
      s1 = G__13340;
      s2 = G__13341;
      continue;
    } else {
      return cljs.core.reduce.call(null, function(s1, s2) {
        return function(result, item) {
          if (cljs.core.contains_QMARK_.call(null, s2, item)) {
            return result;
          } else {
            return cljs.core.disj.call(null, result, item);
          }
        };
      }(s1, s2), s1, s1);
    }
    break;
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__13333_SHARP_) {
    return -cljs.core.count.call(null, p1__13333_SHARP_);
  }, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, clojure.set.intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.intersection.cljs$lang$applyTo = function(seq13334) {
  var G__13335 = cljs.core.first.call(null, seq13334);
  var seq13334__$1 = cljs.core.next.call(null, seq13334);
  var G__13336 = cljs.core.first.call(null, seq13334__$1);
  var seq13334__$2 = cljs.core.next.call(null, seq13334__$1);
  return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(G__13335, G__13336, seq13334__$2);
};
clojure.set.intersection.cljs$lang$maxFixedArity = 2;
clojure.set.difference = function clojure$set$difference() {
  var G__13346 = arguments.length;
  switch(G__13346) {
    case 1:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5358__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, function(result, item) {
      if (cljs.core.contains_QMARK_.call(null, s2, item)) {
        return cljs.core.disj.call(null, result, item);
      } else {
        return result;
      }
    }, s1, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  return cljs.core.reduce.call(null, clojure.set.difference, s1, cljs.core.conj.call(null, sets, s2));
};
clojure.set.difference.cljs$lang$applyTo = function(seq13342) {
  var G__13343 = cljs.core.first.call(null, seq13342);
  var seq13342__$1 = cljs.core.next.call(null, seq13342);
  var G__13344 = cljs.core.first.call(null, seq13342__$1);
  var seq13342__$2 = cljs.core.next.call(null, seq13342__$1);
  return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(G__13343, G__13344, seq13342__$2);
};
clojure.set.difference.cljs$lang$maxFixedArity = 2;
clojure.set.select = function clojure$set$select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function clojure$set$project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__13348_SHARP_) {
    return cljs.core.select_keys.call(null, p1__13348_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function clojure$set$rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__13351) {
    var vec__13352 = p__13351;
    var old = cljs.core.nth.call(null, vec__13352, 0, null);
    var new$ = cljs.core.nth.call(null, vec__13352, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function clojure$set$rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__13353_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__13353_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function clojure$set$index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function clojure$set$map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__13356) {
    var vec__13357 = p__13356;
    var k = cljs.core.nth.call(null, vec__13357, 0, null);
    var v = cljs.core.nth.call(null, vec__13357, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function clojure$set$join() {
  var G__13363 = arguments.length;
  switch(G__13363) {
    case 2:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$2 = function(xrel, yrel) {
  if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
    var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
    var vec__13364 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
    var r = cljs.core.nth.call(null, vec__13364, 0, null);
    var s = cljs.core.nth.call(null, vec__13364, 1, null);
    var idx = clojure.set.index.call(null, r, ks);
    return cljs.core.reduce.call(null, function(ks, vec__13364, r, s, idx) {
      return function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, ks, vec__13364, r, s, idx) {
            return function(p1__13358_SHARP_, p2__13359_SHARP_) {
              return cljs.core.conj.call(null, p1__13358_SHARP_, cljs.core.merge.call(null, p2__13359_SHARP_, x));
            };
          }(found, ks, vec__13364, r, s, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(ks, vec__13364, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
  } else {
    return cljs.core.PersistentHashSet.EMPTY;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$3 = function(xrel, yrel, km) {
  var vec__13365 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
  var r = cljs.core.nth.call(null, vec__13365, 0, null);
  var s = cljs.core.nth.call(null, vec__13365, 1, null);
  var k = cljs.core.nth.call(null, vec__13365, 2, null);
  var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
  return cljs.core.reduce.call(null, function(vec__13365, r, s, k, idx) {
    return function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if (cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(found, vec__13365, r, s, k, idx) {
          return function(p1__13360_SHARP_, p2__13361_SHARP_) {
            return cljs.core.conj.call(null, p1__13360_SHARP_, cljs.core.merge.call(null, p2__13361_SHARP_, x));
          };
        }(found, vec__13365, r, s, k, idx), ret, found);
      } else {
        return ret;
      }
    };
  }(vec__13365, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
};
clojure.set.join.cljs$lang$maxFixedArity = 3;
clojure.set.subset_QMARK_ = function clojure$set$subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__13367_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__13367_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function clojure$set$superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__13368_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__13368_SHARP_);
  }, set2);
};
goog.provide("speclj.tags");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("clojure.string");
goog.require("speclj.config");
speclj.tags.pass_includes_QMARK_ = function speclj$tags$pass_includes_QMARK_(includes, tags) {
  if (cljs.core.empty_QMARK_.call(null, includes)) {
    return true;
  } else {
    return cljs.core._EQ_.call(null, includes, clojure.set.intersection.call(null, includes, cljs.core.set.call(null, tags)));
  }
};
speclj.tags.pass_excludes_QMARK_ = function speclj$tags$pass_excludes_QMARK_(excludes, tags) {
  if (cljs.core.empty_QMARK_.call(null, excludes)) {
    return true;
  } else {
    return cljs.core.not.call(null, cljs.core.some.call(null, function(p1__13688_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, excludes, p1__13688_SHARP_);
    }, tags));
  }
};
speclj.tags.pass_tag_filter_QMARK_ = function speclj$tags$pass_tag_filter_QMARK_() {
  var G__13690 = arguments.length;
  switch(G__13690) {
    case 1:
      return speclj.tags.pass_tag_filter_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return speclj.tags.pass_tag_filter_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
speclj.tags.pass_tag_filter_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(tags) {
  return speclj.tags.pass_tag_filter_QMARK_.call(null, speclj.config._STAR_tag_filter_STAR_, tags);
};
speclj.tags.pass_tag_filter_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(filter, tags) {
  var and__4295__auto__ = speclj.tags.pass_includes_QMARK_.call(null, (new cljs.core.Keyword(null, "includes", "includes", -438304563)).cljs$core$IFn$_invoke$arity$1(filter), tags);
  if (cljs.core.truth_(and__4295__auto__)) {
    return speclj.tags.pass_excludes_QMARK_.call(null, (new cljs.core.Keyword(null, "excludes", "excludes", -1791725945)).cljs$core$IFn$_invoke$arity$1(filter), tags);
  } else {
    return and__4295__auto__;
  }
};
speclj.tags.pass_tag_filter_QMARK_.cljs$lang$maxFixedArity = 2;
speclj.tags.tags_for = function speclj$tags$tags_for(context) {
  if (cljs.core.truth_(context)) {
    return clojure.set.union.call(null, speclj$tags$tags_for.call(null, cljs.core.deref.call(null, context.parent)), cljs.core.deref.call(null, context.tags));
  } else {
    return cljs.core.PersistentHashSet.EMPTY;
  }
};
speclj.tags.tag_sets_for = function speclj$tags$tag_sets_for(context) {
  var context_seq = cljs.core.tree_seq.call(null, function(p1__13692_SHARP_) {
    return !(p1__13692_SHARP_ == null);
  }, function(p1__13693_SHARP_) {
    return cljs.core.deref.call(null, p1__13693_SHARP_.children);
  }, context);
  return cljs.core.map.call(null, speclj.tags.tags_for, context_seq);
};
speclj.tags.context_with_tags_seq = function speclj$tags$context_with_tags_seq(context) {
  var context_seq = cljs.core.tree_seq.call(null, function(p1__13694_SHARP_) {
    return !(p1__13694_SHARP_ == null);
  }, function(p1__13695_SHARP_) {
    return cljs.core.deref.call(null, p1__13695_SHARP_.children);
  }, context);
  return cljs.core.map.call(null, function(context_seq) {
    return function(p1__13696_SHARP_) {
      return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "tag-set", "tag-set", -711527597)], [p1__13696_SHARP_, speclj.tags.tags_for.call(null, p1__13696_SHARP_)]);
    };
  }(context_seq), context_seq);
};
speclj.tags.describe_filter = function speclj$tags$describe_filter() {
  var G__13698 = arguments.length;
  switch(G__13698) {
    case 0:
      return speclj.tags.describe_filter.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return speclj.tags.describe_filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
speclj.tags.describe_filter.cljs$core$IFn$_invoke$arity$0 = function() {
  return speclj.tags.describe_filter.call(null, speclj.config._STAR_tag_filter_STAR_);
};
speclj.tags.describe_filter.cljs$core$IFn$_invoke$arity$1 = function(filter) {
  var includes = cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.name, (new cljs.core.Keyword(null, "includes", "includes", -438304563)).cljs$core$IFn$_invoke$arity$1(filter)));
  var excludes = cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.name, (new cljs.core.Keyword(null, "excludes", "excludes", -1791725945)).cljs$core$IFn$_invoke$arity$1(filter)));
  if (includes || excludes) {
    return [cljs.core.str("Filtering tags."), cljs.core.str(includes ? [cljs.core.str(" Including: "), cljs.core.str(clojure.string.join.call(null, ", ", includes)), cljs.core.str(".")].join("") : null), cljs.core.str(excludes ? [cljs.core.str(" Excluding: "), cljs.core.str(clojure.string.join.call(null, ", ", excludes)), cljs.core.str(".")].join("") : null)].join("");
  } else {
    return null;
  }
};
speclj.tags.describe_filter.cljs$lang$maxFixedArity = 1;
goog.provide("speclj.results");
goog.require("cljs.core");
speclj.results.PassResult = function(characteristic, seconds) {
  this.characteristic = characteristic;
  this.seconds = seconds;
};
speclj.results.PassResult.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "characteristic", "characteristic", -1464926600, null), new cljs.core.Symbol(null, "seconds", "seconds", 1195265333, null)], null);
};
speclj.results.PassResult.cljs$lang$type = true;
speclj.results.PassResult.cljs$lang$ctorStr = "speclj.results/PassResult";
speclj.results.PassResult.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.results/PassResult");
};
speclj.results.__GT_PassResult = function speclj$results$__GT_PassResult(characteristic, seconds) {
  return new speclj.results.PassResult(characteristic, seconds);
};
speclj.results.FailResult = function(characteristic, seconds, failure) {
  this.characteristic = characteristic;
  this.seconds = seconds;
  this.failure = failure;
};
speclj.results.FailResult.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "characteristic", "characteristic", -1464926600, null), new cljs.core.Symbol(null, "seconds", "seconds", 1195265333, null), new cljs.core.Symbol(null, "failure", "failure", -1934019890, null)], null);
};
speclj.results.FailResult.cljs$lang$type = true;
speclj.results.FailResult.cljs$lang$ctorStr = "speclj.results/FailResult";
speclj.results.FailResult.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.results/FailResult");
};
speclj.results.__GT_FailResult = function speclj$results$__GT_FailResult(characteristic, seconds, failure) {
  return new speclj.results.FailResult(characteristic, seconds, failure);
};
speclj.results.PendingResult = function(characteristic, seconds, exception) {
  this.characteristic = characteristic;
  this.seconds = seconds;
  this.exception = exception;
};
speclj.results.PendingResult.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "characteristic", "characteristic", -1464926600, null), new cljs.core.Symbol(null, "seconds", "seconds", 1195265333, null), new cljs.core.Symbol(null, "exception", "exception", 1305254463, null)], null);
};
speclj.results.PendingResult.cljs$lang$type = true;
speclj.results.PendingResult.cljs$lang$ctorStr = "speclj.results/PendingResult";
speclj.results.PendingResult.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.results/PendingResult");
};
speclj.results.__GT_PendingResult = function speclj$results$__GT_PendingResult(characteristic, seconds, exception) {
  return new speclj.results.PendingResult(characteristic, seconds, exception);
};
speclj.results.ErrorResult = function(characteristic, seconds, exception) {
  this.characteristic = characteristic;
  this.seconds = seconds;
  this.exception = exception;
};
speclj.results.ErrorResult.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "characteristic", "characteristic", -1464926600, null), new cljs.core.Symbol(null, "seconds", "seconds", 1195265333, null), new cljs.core.Symbol(null, "exception", "exception", 1305254463, null)], null);
};
speclj.results.ErrorResult.cljs$lang$type = true;
speclj.results.ErrorResult.cljs$lang$ctorStr = "speclj.results/ErrorResult";
speclj.results.ErrorResult.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.results/ErrorResult");
};
speclj.results.__GT_ErrorResult = function speclj$results$__GT_ErrorResult(characteristic, seconds, exception) {
  return new speclj.results.ErrorResult(characteristic, seconds, exception);
};
speclj.results.pass_result = function speclj$results$pass_result(characteristic, seconds) {
  return new speclj.results.PassResult(characteristic, seconds);
};
speclj.results.fail_result = function speclj$results$fail_result(characteristic, seconds, failure) {
  return new speclj.results.FailResult(characteristic, seconds, failure);
};
speclj.results.pending_result = function speclj$results$pending_result(characteristic, seconds, exception) {
  return new speclj.results.PendingResult(characteristic, seconds, exception);
};
speclj.results.error_result = function speclj$results$error_result(exception) {
  return new speclj.results.ErrorResult(null, 0, exception);
};
speclj.results.pass_QMARK_ = function speclj$results$pass_QMARK_(result) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, result), speclj.results.PassResult);
};
speclj.results.fail_QMARK_ = function speclj$results$fail_QMARK_(result) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, result), speclj.results.FailResult);
};
speclj.results.pending_QMARK_ = function speclj$results$pending_QMARK_(result) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, result), speclj.results.PendingResult);
};
speclj.results.error_QMARK_ = function speclj$results$error_QMARK_(result) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, result), speclj.results.ErrorResult);
};
speclj.results.fail_count = function speclj$results$fail_count(results) {
  return cljs.core.reduce.call(null, function(p1__13685_SHARP_, p2__13684_SHARP_) {
    if (cljs.core.truth_(function() {
      var or__4307__auto__ = speclj.results.fail_QMARK_.call(null, p2__13684_SHARP_);
      if (cljs.core.truth_(or__4307__auto__)) {
        return or__4307__auto__;
      } else {
        return speclj.results.error_QMARK_.call(null, p2__13684_SHARP_);
      }
    }())) {
      return p1__13685_SHARP_ + 1;
    } else {
      return p1__13685_SHARP_;
    }
  }, 0, results);
};
speclj.results.categorize = function speclj$results$categorize(results) {
  return cljs.core.reduce.call(null, function(tally, result) {
    if (cljs.core.truth_(speclj.results.pending_QMARK_.call(null, result))) {
      return cljs.core.update_in.call(null, tally, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pending", "pending", -220036727)], null), cljs.core.conj, result);
    } else {
      if (cljs.core.truth_(speclj.results.error_QMARK_.call(null, result))) {
        return cljs.core.update_in.call(null, tally, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032)], null), cljs.core.conj, result);
      } else {
        if (cljs.core.truth_(speclj.results.fail_QMARK_.call(null, result))) {
          return cljs.core.update_in.call(null, tally, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), cljs.core.conj, result);
        } else {
          return cljs.core.update_in.call(null, tally, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), cljs.core.conj, result);
        }
      }
    }
  }, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "pending", "pending", -220036727), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "fail", "fail", 1706214930), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "pass", "pass", 1574159993), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "error", "error", -978969032), cljs.core.PersistentVector.EMPTY], null), results);
};
goog.provide("speclj.reporting");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
goog.require("speclj.config");
goog.require("speclj.platform");
goog.require("speclj.results");
speclj.reporting.tally_time = function speclj$reporting$tally_time(results) {
  return cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.map.call(null, function(p1__13455_SHARP_) {
    return p1__13455_SHARP_.seconds;
  }, results));
};
speclj.reporting.Reporter = function() {
  var obj13457 = {};
  return obj13457;
}();
speclj.reporting.report_message = function speclj$reporting$report_message(reporter, message) {
  if (function() {
    var and__4295__auto__ = reporter;
    if (and__4295__auto__) {
      return reporter.speclj$reporting$Reporter$report_message$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return reporter.speclj$reporting$Reporter$report_message$arity$2(reporter, message);
  } else {
    var x__4943__auto__ = reporter == null ? null : reporter;
    return function() {
      var or__4307__auto__ = speclj.reporting.report_message[goog.typeOf(x__4943__auto__)];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = speclj.reporting.report_message["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-message", reporter);
        }
      }
    }().call(null, reporter, message);
  }
};
speclj.reporting.report_description = function speclj$reporting$report_description(this$, description) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.speclj$reporting$Reporter$report_description$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.speclj$reporting$Reporter$report_description$arity$2(this$, description);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = speclj.reporting.report_description[goog.typeOf(x__4943__auto__)];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = speclj.reporting.report_description["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-description", this$);
        }
      }
    }().call(null, this$, description);
  }
};
speclj.reporting.report_pass = function speclj$reporting$report_pass(this$, result) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.speclj$reporting$Reporter$report_pass$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.speclj$reporting$Reporter$report_pass$arity$2(this$, result);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = speclj.reporting.report_pass[goog.typeOf(x__4943__auto__)];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = speclj.reporting.report_pass["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-pass", this$);
        }
      }
    }().call(null, this$, result);
  }
};
speclj.reporting.report_pending = function speclj$reporting$report_pending(this$, result) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.speclj$reporting$Reporter$report_pending$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.speclj$reporting$Reporter$report_pending$arity$2(this$, result);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = speclj.reporting.report_pending[goog.typeOf(x__4943__auto__)];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = speclj.reporting.report_pending["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-pending", this$);
        }
      }
    }().call(null, this$, result);
  }
};
speclj.reporting.report_fail = function speclj$reporting$report_fail(this$, result) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.speclj$reporting$Reporter$report_fail$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.speclj$reporting$Reporter$report_fail$arity$2(this$, result);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = speclj.reporting.report_fail[goog.typeOf(x__4943__auto__)];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = speclj.reporting.report_fail["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-fail", this$);
        }
      }
    }().call(null, this$, result);
  }
};
speclj.reporting.report_runs = function speclj$reporting$report_runs(this$, results) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.speclj$reporting$Reporter$report_runs$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.speclj$reporting$Reporter$report_runs$arity$2(this$, results);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = speclj.reporting.report_runs[goog.typeOf(x__4943__auto__)];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = speclj.reporting.report_runs["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-runs", this$);
        }
      }
    }().call(null, this$, results);
  }
};
speclj.reporting.report_error = function speclj$reporting$report_error(this$, exception) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.speclj$reporting$Reporter$report_error$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.speclj$reporting$Reporter$report_error$arity$2(this$, exception);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = speclj.reporting.report_error[goog.typeOf(x__4943__auto__)];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = speclj.reporting.report_error["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-error", this$);
        }
      }
    }().call(null, this$, exception);
  }
};
if (typeof speclj.reporting.report_run !== "undefined") {
} else {
  speclj.reporting.report_run = function() {
    var method_table__5202__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5203__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5204__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5205__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5206__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "speclj.reporting", "report-run"), function(method_table__5202__auto__, prefer_table__5203__auto__, method_cache__5204__auto__, cached_hierarchy__5205__auto__, hierarchy__5206__auto__) {
      return function(result, reporters) {
        return cljs.core.type.call(null, result);
      };
    }(method_table__5202__auto__, prefer_table__5203__auto__, method_cache__5204__auto__, cached_hierarchy__5205__auto__, hierarchy__5206__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5206__auto__, method_table__5202__auto__, prefer_table__5203__auto__, method_cache__5204__auto__, cached_hierarchy__5205__auto__);
  }();
}
cljs.core._add_method.call(null, speclj.reporting.report_run, speclj.results.PassResult, function(result, reporters) {
  var seq__13458 = cljs.core.seq.call(null, reporters);
  var chunk__13459 = null;
  var count__13460 = 0;
  var i__13461 = 0;
  while (true) {
    if (i__13461 < count__13460) {
      var reporter = cljs.core._nth.call(null, chunk__13459, i__13461);
      speclj.reporting.report_pass.call(null, reporter, result);
      var G__13462 = seq__13458;
      var G__13463 = chunk__13459;
      var G__13464 = count__13460;
      var G__13465 = i__13461 + 1;
      seq__13458 = G__13462;
      chunk__13459 = G__13463;
      count__13460 = G__13464;
      i__13461 = G__13465;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13458);
      if (temp__4425__auto__) {
        var seq__13458__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13458__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first.call(null, seq__13458__$1);
          var G__13466 = cljs.core.chunk_rest.call(null, seq__13458__$1);
          var G__13467 = c__5092__auto__;
          var G__13468 = cljs.core.count.call(null, c__5092__auto__);
          var G__13469 = 0;
          seq__13458 = G__13466;
          chunk__13459 = G__13467;
          count__13460 = G__13468;
          i__13461 = G__13469;
          continue;
        } else {
          var reporter = cljs.core.first.call(null, seq__13458__$1);
          speclj.reporting.report_pass.call(null, reporter, result);
          var G__13470 = cljs.core.next.call(null, seq__13458__$1);
          var G__13471 = null;
          var G__13472 = 0;
          var G__13473 = 0;
          seq__13458 = G__13470;
          chunk__13459 = G__13471;
          count__13460 = G__13472;
          i__13461 = G__13473;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
});
cljs.core._add_method.call(null, speclj.reporting.report_run, speclj.results.FailResult, function(result, reporters) {
  var seq__13474 = cljs.core.seq.call(null, reporters);
  var chunk__13475 = null;
  var count__13476 = 0;
  var i__13477 = 0;
  while (true) {
    if (i__13477 < count__13476) {
      var reporter = cljs.core._nth.call(null, chunk__13475, i__13477);
      speclj.reporting.report_fail.call(null, reporter, result);
      var G__13478 = seq__13474;
      var G__13479 = chunk__13475;
      var G__13480 = count__13476;
      var G__13481 = i__13477 + 1;
      seq__13474 = G__13478;
      chunk__13475 = G__13479;
      count__13476 = G__13480;
      i__13477 = G__13481;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13474);
      if (temp__4425__auto__) {
        var seq__13474__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13474__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first.call(null, seq__13474__$1);
          var G__13482 = cljs.core.chunk_rest.call(null, seq__13474__$1);
          var G__13483 = c__5092__auto__;
          var G__13484 = cljs.core.count.call(null, c__5092__auto__);
          var G__13485 = 0;
          seq__13474 = G__13482;
          chunk__13475 = G__13483;
          count__13476 = G__13484;
          i__13477 = G__13485;
          continue;
        } else {
          var reporter = cljs.core.first.call(null, seq__13474__$1);
          speclj.reporting.report_fail.call(null, reporter, result);
          var G__13486 = cljs.core.next.call(null, seq__13474__$1);
          var G__13487 = null;
          var G__13488 = 0;
          var G__13489 = 0;
          seq__13474 = G__13486;
          chunk__13475 = G__13487;
          count__13476 = G__13488;
          i__13477 = G__13489;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
});
cljs.core._add_method.call(null, speclj.reporting.report_run, speclj.results.PendingResult, function(result, reporters) {
  var seq__13490 = cljs.core.seq.call(null, reporters);
  var chunk__13491 = null;
  var count__13492 = 0;
  var i__13493 = 0;
  while (true) {
    if (i__13493 < count__13492) {
      var reporter = cljs.core._nth.call(null, chunk__13491, i__13493);
      speclj.reporting.report_pending.call(null, reporter, result);
      var G__13494 = seq__13490;
      var G__13495 = chunk__13491;
      var G__13496 = count__13492;
      var G__13497 = i__13493 + 1;
      seq__13490 = G__13494;
      chunk__13491 = G__13495;
      count__13492 = G__13496;
      i__13493 = G__13497;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13490);
      if (temp__4425__auto__) {
        var seq__13490__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13490__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first.call(null, seq__13490__$1);
          var G__13498 = cljs.core.chunk_rest.call(null, seq__13490__$1);
          var G__13499 = c__5092__auto__;
          var G__13500 = cljs.core.count.call(null, c__5092__auto__);
          var G__13501 = 0;
          seq__13490 = G__13498;
          chunk__13491 = G__13499;
          count__13492 = G__13500;
          i__13493 = G__13501;
          continue;
        } else {
          var reporter = cljs.core.first.call(null, seq__13490__$1);
          speclj.reporting.report_pending.call(null, reporter, result);
          var G__13502 = cljs.core.next.call(null, seq__13490__$1);
          var G__13503 = null;
          var G__13504 = 0;
          var G__13505 = 0;
          seq__13490 = G__13502;
          chunk__13491 = G__13503;
          count__13492 = G__13504;
          i__13493 = G__13505;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
});
cljs.core._add_method.call(null, speclj.reporting.report_run, speclj.results.ErrorResult, function(result, reporters) {
  var seq__13506 = cljs.core.seq.call(null, reporters);
  var chunk__13507 = null;
  var count__13508 = 0;
  var i__13509 = 0;
  while (true) {
    if (i__13509 < count__13508) {
      var reporter = cljs.core._nth.call(null, chunk__13507, i__13509);
      speclj.reporting.report_error.call(null, reporter, result);
      var G__13510 = seq__13506;
      var G__13511 = chunk__13507;
      var G__13512 = count__13508;
      var G__13513 = i__13509 + 1;
      seq__13506 = G__13510;
      chunk__13507 = G__13511;
      count__13508 = G__13512;
      i__13509 = G__13513;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13506);
      if (temp__4425__auto__) {
        var seq__13506__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13506__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first.call(null, seq__13506__$1);
          var G__13514 = cljs.core.chunk_rest.call(null, seq__13506__$1);
          var G__13515 = c__5092__auto__;
          var G__13516 = cljs.core.count.call(null, c__5092__auto__);
          var G__13517 = 0;
          seq__13506 = G__13514;
          chunk__13507 = G__13515;
          count__13508 = G__13516;
          i__13509 = G__13517;
          continue;
        } else {
          var reporter = cljs.core.first.call(null, seq__13506__$1);
          speclj.reporting.report_error.call(null, reporter, result);
          var G__13518 = cljs.core.next.call(null, seq__13506__$1);
          var G__13519 = null;
          var G__13520 = 0;
          var G__13521 = 0;
          seq__13506 = G__13518;
          chunk__13507 = G__13519;
          count__13508 = G__13520;
          i__13509 = G__13521;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
});
speclj.reporting.stylizer = function speclj$reporting$stylizer(code) {
  return function(text) {
    if (cljs.core.truth_(speclj.config._STAR_color_QMARK__STAR_)) {
      return [cljs.core.str("\u001b["), cljs.core.str(code), cljs.core.str("m"), cljs.core.str(text), cljs.core.str("\u001b[0m")].join("");
    } else {
      return text;
    }
  };
};
speclj.reporting.red = speclj.reporting.stylizer.call(null, "31");
speclj.reporting.green = speclj.reporting.stylizer.call(null, "32");
speclj.reporting.yellow = speclj.reporting.stylizer.call(null, "33");
speclj.reporting.grey = speclj.reporting.stylizer.call(null, "90");
speclj.reporting.print_elides = function speclj$reporting$print_elides(n) {
  if (n > 0) {
    return cljs.core.println.call(null, "\t...", n, "stack levels elided ...");
  } else {
    return null;
  }
};
speclj.reporting.print_stack_levels = function speclj$reporting$print_stack_levels(exception) {
  var levels_13522 = speclj.platform.stack_trace.call(null, exception);
  var elides_13523 = 0;
  while (true) {
    if (cljs.core.seq.call(null, levels_13522)) {
      var level_13524 = cljs.core.first.call(null, levels_13522);
      if (cljs.core.truth_(speclj.platform.elide_level_QMARK_.call(null, level_13524))) {
        var G__13525 = cljs.core.rest.call(null, levels_13522);
        var G__13526 = elides_13523 + 1;
        levels_13522 = G__13525;
        elides_13523 = G__13526;
        continue;
      } else {
        speclj.reporting.print_elides.call(null, elides_13523);
        cljs.core.println.call(null, [cljs.core.str(level_13524)].join(""));
        var G__13527 = cljs.core.rest.call(null, levels_13522);
        var G__13528 = 0;
        levels_13522 = G__13527;
        elides_13523 = G__13528;
        continue;
      }
    } else {
      speclj.reporting.print_elides.call(null, elides_13523);
    }
    break;
  }
  var temp__4423__auto__ = speclj.platform.cause.call(null, exception);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var cause = temp__4423__auto__;
    return speclj.reporting.print_exception.call(null, "Caused by:", cause);
  } else {
    return null;
  }
};
speclj.reporting.print_exception = function speclj$reporting$print_exception(prefix, exception) {
  if (cljs.core.truth_(prefix)) {
    cljs.core.println.call(null, prefix, [cljs.core.str(exception)].join(""));
  } else {
    cljs.core.println.call(null, [cljs.core.str(exception)].join(""));
  }
  return speclj.reporting.print_stack_levels.call(null, exception);
};
speclj.reporting.stack_trace_str = function speclj$reporting$stack_trace_str(exception) {
  var sb__5263__auto__ = new goog.string.StringBuffer;
  var _STAR_print_newline_STAR_13531_13533 = cljs.core._STAR_print_newline_STAR_;
  var _STAR_print_fn_STAR_13532_13534 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_newline_STAR_ = true;
  cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_13531_13533, _STAR_print_fn_STAR_13532_13534, sb__5263__auto__) {
    return function(x__5264__auto__) {
      return sb__5263__auto__.append(x__5264__auto__);
    };
  }(_STAR_print_newline_STAR_13531_13533, _STAR_print_fn_STAR_13532_13534, sb__5263__auto__);
  try {
    if (cljs.core.truth_(speclj.config._STAR_full_stack_trace_QMARK__STAR_)) {
      speclj.platform.print_stack_trace.call(null, exception);
    } else {
      speclj.reporting.print_exception.call(null, null, exception);
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_13532_13534;
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_13531_13533;
  }
  return [cljs.core.str(sb__5263__auto__)].join("");
};
speclj.reporting.prefix = function speclj$reporting$prefix() {
  var argseq__5347__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return speclj.reporting.prefix.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5347__auto__);
};
speclj.reporting.prefix.cljs$core$IFn$_invoke$arity$variadic = function(pre, args) {
  var value = cljs.core.apply.call(null, cljs.core.str, args);
  var lines = clojure.string.split.call(null, value, /[\r\n]+/);
  var prefixed_lines = cljs.core.map.call(null, function(value, lines) {
    return function(p1__13535_SHARP_) {
      return [cljs.core.str(pre), cljs.core.str(p1__13535_SHARP_)].join("");
    };
  }(value, lines), lines);
  return clojure.string.join.call(null, speclj.platform.endl, prefixed_lines);
};
speclj.reporting.prefix.cljs$lang$maxFixedArity = 1;
speclj.reporting.prefix.cljs$lang$applyTo = function(seq13536) {
  var G__13537 = cljs.core.first.call(null, seq13536);
  var seq13536__$1 = cljs.core.next.call(null, seq13536);
  return speclj.reporting.prefix.cljs$core$IFn$_invoke$arity$variadic(G__13537, seq13536__$1);
};
speclj.reporting.indent = function speclj$reporting$indent() {
  var argseq__5347__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return speclj.reporting.indent.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5347__auto__);
};
speclj.reporting.indent.cljs$core$IFn$_invoke$arity$variadic = function(n, args) {
  var spaces = n * 2 | 0;
  var indention = cljs.core.reduce.call(null, function(spaces) {
    return function(p, _) {
      return [cljs.core.str(" "), cljs.core.str(p)].join("");
    };
  }(spaces), "", cljs.core.range.call(null, spaces));
  return cljs.core.apply.call(null, speclj.reporting.prefix, indention, args);
};
speclj.reporting.indent.cljs$lang$maxFixedArity = 1;
speclj.reporting.indent.cljs$lang$applyTo = function(seq13538) {
  var G__13539 = cljs.core.first.call(null, seq13538);
  var seq13538__$1 = cljs.core.next.call(null, seq13538);
  return speclj.reporting.indent.cljs$core$IFn$_invoke$arity$variadic(G__13539, seq13538__$1);
};
speclj.reporting.report_description_STAR_ = function speclj$reporting$report_description_STAR_(reporters, description) {
  var seq__13544 = cljs.core.seq.call(null, reporters);
  var chunk__13545 = null;
  var count__13546 = 0;
  var i__13547 = 0;
  while (true) {
    if (i__13547 < count__13546) {
      var reporter = cljs.core._nth.call(null, chunk__13545, i__13547);
      speclj.reporting.report_description.call(null, reporter, description);
      var G__13548 = seq__13544;
      var G__13549 = chunk__13545;
      var G__13550 = count__13546;
      var G__13551 = i__13547 + 1;
      seq__13544 = G__13548;
      chunk__13545 = G__13549;
      count__13546 = G__13550;
      i__13547 = G__13551;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13544);
      if (temp__4425__auto__) {
        var seq__13544__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13544__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first.call(null, seq__13544__$1);
          var G__13552 = cljs.core.chunk_rest.call(null, seq__13544__$1);
          var G__13553 = c__5092__auto__;
          var G__13554 = cljs.core.count.call(null, c__5092__auto__);
          var G__13555 = 0;
          seq__13544 = G__13552;
          chunk__13545 = G__13553;
          count__13546 = G__13554;
          i__13547 = G__13555;
          continue;
        } else {
          var reporter = cljs.core.first.call(null, seq__13544__$1);
          speclj.reporting.report_description.call(null, reporter, description);
          var G__13556 = cljs.core.next.call(null, seq__13544__$1);
          var G__13557 = null;
          var G__13558 = 0;
          var G__13559 = 0;
          seq__13544 = G__13556;
          chunk__13545 = G__13557;
          count__13546 = G__13558;
          i__13547 = G__13559;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
speclj.reporting.report_runs_STAR_ = function speclj$reporting$report_runs_STAR_(reporters, results) {
  var seq__13564 = cljs.core.seq.call(null, reporters);
  var chunk__13565 = null;
  var count__13566 = 0;
  var i__13567 = 0;
  while (true) {
    if (i__13567 < count__13566) {
      var reporter = cljs.core._nth.call(null, chunk__13565, i__13567);
      speclj.reporting.report_runs.call(null, reporter, results);
      var G__13568 = seq__13564;
      var G__13569 = chunk__13565;
      var G__13570 = count__13566;
      var G__13571 = i__13567 + 1;
      seq__13564 = G__13568;
      chunk__13565 = G__13569;
      count__13566 = G__13570;
      i__13567 = G__13571;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13564);
      if (temp__4425__auto__) {
        var seq__13564__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13564__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first.call(null, seq__13564__$1);
          var G__13572 = cljs.core.chunk_rest.call(null, seq__13564__$1);
          var G__13573 = c__5092__auto__;
          var G__13574 = cljs.core.count.call(null, c__5092__auto__);
          var G__13575 = 0;
          seq__13564 = G__13572;
          chunk__13565 = G__13573;
          count__13566 = G__13574;
          i__13567 = G__13575;
          continue;
        } else {
          var reporter = cljs.core.first.call(null, seq__13564__$1);
          speclj.reporting.report_runs.call(null, reporter, results);
          var G__13576 = cljs.core.next.call(null, seq__13564__$1);
          var G__13577 = null;
          var G__13578 = 0;
          var G__13579 = 0;
          seq__13564 = G__13576;
          chunk__13565 = G__13577;
          count__13566 = G__13578;
          i__13567 = G__13579;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
speclj.reporting.report_message_STAR_ = function speclj$reporting$report_message_STAR_(reporters, message) {
  var seq__13584 = cljs.core.seq.call(null, reporters);
  var chunk__13585 = null;
  var count__13586 = 0;
  var i__13587 = 0;
  while (true) {
    if (i__13587 < count__13586) {
      var reporter = cljs.core._nth.call(null, chunk__13585, i__13587);
      speclj.reporting.report_message.call(null, reporter, message);
      var G__13588 = seq__13584;
      var G__13589 = chunk__13585;
      var G__13590 = count__13586;
      var G__13591 = i__13587 + 1;
      seq__13584 = G__13588;
      chunk__13585 = G__13589;
      count__13586 = G__13590;
      i__13587 = G__13591;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13584);
      if (temp__4425__auto__) {
        var seq__13584__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13584__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first.call(null, seq__13584__$1);
          var G__13592 = cljs.core.chunk_rest.call(null, seq__13584__$1);
          var G__13593 = c__5092__auto__;
          var G__13594 = cljs.core.count.call(null, c__5092__auto__);
          var G__13595 = 0;
          seq__13584 = G__13592;
          chunk__13585 = G__13593;
          count__13586 = G__13594;
          i__13587 = G__13595;
          continue;
        } else {
          var reporter = cljs.core.first.call(null, seq__13584__$1);
          speclj.reporting.report_message.call(null, reporter, message);
          var G__13596 = cljs.core.next.call(null, seq__13584__$1);
          var G__13597 = null;
          var G__13598 = 0;
          var G__13599 = 0;
          seq__13584 = G__13596;
          chunk__13585 = G__13597;
          count__13586 = G__13598;
          i__13587 = G__13599;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
speclj.reporting.report_error_STAR_ = function speclj$reporting$report_error_STAR_(reporters, exception) {
  var seq__13604 = cljs.core.seq.call(null, reporters);
  var chunk__13605 = null;
  var count__13606 = 0;
  var i__13607 = 0;
  while (true) {
    if (i__13607 < count__13606) {
      var reporter = cljs.core._nth.call(null, chunk__13605, i__13607);
      speclj.reporting.report_error.call(null, reporter, exception);
      var G__13608 = seq__13604;
      var G__13609 = chunk__13605;
      var G__13610 = count__13606;
      var G__13611 = i__13607 + 1;
      seq__13604 = G__13608;
      chunk__13605 = G__13609;
      count__13606 = G__13610;
      i__13607 = G__13611;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13604);
      if (temp__4425__auto__) {
        var seq__13604__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13604__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first.call(null, seq__13604__$1);
          var G__13612 = cljs.core.chunk_rest.call(null, seq__13604__$1);
          var G__13613 = c__5092__auto__;
          var G__13614 = cljs.core.count.call(null, c__5092__auto__);
          var G__13615 = 0;
          seq__13604 = G__13612;
          chunk__13605 = G__13613;
          count__13606 = G__13614;
          i__13607 = G__13615;
          continue;
        } else {
          var reporter = cljs.core.first.call(null, seq__13604__$1);
          speclj.reporting.report_error.call(null, reporter, exception);
          var G__13616 = cljs.core.next.call(null, seq__13604__$1);
          var G__13617 = null;
          var G__13618 = 0;
          var G__13619 = 0;
          seq__13604 = G__13616;
          chunk__13605 = G__13617;
          count__13606 = G__13618;
          i__13607 = G__13619;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
goog.provide("speclj.report.progress");
goog.require("cljs.core");
goog.require("speclj.config");
goog.require("speclj.platform");
goog.require("speclj.reporting");
goog.require("speclj.results");
goog.require("clojure.string");
speclj.report.progress.full_name = function speclj$report$progress$full_name(characteristic) {
  var context = cljs.core.deref.call(null, characteristic.parent);
  var name = characteristic.name;
  while (true) {
    if (cljs.core.truth_(context)) {
      var G__13622 = cljs.core.deref.call(null, context.parent);
      var G__13623 = [cljs.core.str(context.name), cljs.core.str(" "), cljs.core.str(name)].join("");
      context = G__13622;
      name = G__13623;
      continue;
    } else {
      return name;
    }
    break;
  }
};
speclj.report.progress.print_failure = function speclj$report$progress$print_failure(id, result) {
  var characteristic = result.characteristic;
  var failure = result.failure;
  cljs.core.println.call(null);
  cljs.core.println.call(null, speclj.reporting.indent.call(null, 1, id, ") ", speclj.report.progress.full_name.call(null, characteristic)));
  cljs.core.println.call(null, speclj.reporting.red.call(null, speclj.reporting.indent.call(null, 2.5, speclj.platform.error_message.call(null, failure))));
  if (cljs.core.truth_(speclj.platform.failure_QMARK_.call(null, failure))) {
    return cljs.core.println.call(null, speclj.reporting.grey.call(null, speclj.reporting.indent.call(null, 2.5, speclj.platform.failure_source.call(null, failure))));
  } else {
    return cljs.core.println.call(null, speclj.reporting.grey.call(null, speclj.reporting.indent.call(null, 2.5, speclj.reporting.stack_trace_str.call(null, failure))));
  }
};
speclj.report.progress.print_failures = function speclj$report$progress$print_failures(failures) {
  if (cljs.core.seq.call(null, failures)) {
    cljs.core.println.call(null);
    cljs.core.println.call(null, "Failures:");
  } else {
  }
  var n__5192__auto__ = cljs.core.count.call(null, failures);
  var i = 0;
  while (true) {
    if (i < n__5192__auto__) {
      speclj.report.progress.print_failure.call(null, i + 1, cljs.core.nth.call(null, failures, i));
      var G__13624 = i + 1;
      i = G__13624;
      continue;
    } else {
      return null;
    }
    break;
  }
};
speclj.report.progress.print_pendings = function speclj$report$progress$print_pendings(pending_results) {
  if (cljs.core.truth_(speclj.config._STAR_omit_pending_QMARK__STAR_)) {
    return null;
  } else {
    if (cljs.core.seq.call(null, pending_results)) {
      cljs.core.println.call(null);
      cljs.core.println.call(null, "Pending:");
    } else {
    }
    var seq__13629 = cljs.core.seq.call(null, pending_results);
    var chunk__13630 = null;
    var count__13631 = 0;
    var i__13632 = 0;
    while (true) {
      if (i__13632 < count__13631) {
        var result = cljs.core._nth.call(null, chunk__13630, i__13632);
        cljs.core.println.call(null);
        cljs.core.println.call(null, speclj.reporting.yellow.call(null, [cljs.core.str("  "), cljs.core.str(speclj.report.progress.full_name.call(null, result.characteristic))].join("")));
        cljs.core.println.call(null, speclj.reporting.grey.call(null, [cljs.core.str("    ; "), cljs.core.str(speclj.platform.error_message.call(null, result.exception))].join("")));
        cljs.core.println.call(null, speclj.reporting.grey.call(null, [cljs.core.str("    ; "), cljs.core.str(speclj.platform.failure_source.call(null, result.exception))].join("")));
        var G__13633 = seq__13629;
        var G__13634 = chunk__13630;
        var G__13635 = count__13631;
        var G__13636 = i__13632 + 1;
        seq__13629 = G__13633;
        chunk__13630 = G__13634;
        count__13631 = G__13635;
        i__13632 = G__13636;
        continue;
      } else {
        var temp__4425__auto__ = cljs.core.seq.call(null, seq__13629);
        if (temp__4425__auto__) {
          var seq__13629__$1 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__13629__$1)) {
            var c__5092__auto__ = cljs.core.chunk_first.call(null, seq__13629__$1);
            var G__13637 = cljs.core.chunk_rest.call(null, seq__13629__$1);
            var G__13638 = c__5092__auto__;
            var G__13639 = cljs.core.count.call(null, c__5092__auto__);
            var G__13640 = 0;
            seq__13629 = G__13637;
            chunk__13630 = G__13638;
            count__13631 = G__13639;
            i__13632 = G__13640;
            continue;
          } else {
            var result = cljs.core.first.call(null, seq__13629__$1);
            cljs.core.println.call(null);
            cljs.core.println.call(null, speclj.reporting.yellow.call(null, [cljs.core.str("  "), cljs.core.str(speclj.report.progress.full_name.call(null, result.characteristic))].join("")));
            cljs.core.println.call(null, speclj.reporting.grey.call(null, [cljs.core.str("    ; "), cljs.core.str(speclj.platform.error_message.call(null, result.exception))].join("")));
            cljs.core.println.call(null, speclj.reporting.grey.call(null, [cljs.core.str("    ; "), cljs.core.str(speclj.platform.failure_source.call(null, result.exception))].join("")));
            var G__13641 = cljs.core.next.call(null, seq__13629__$1);
            var G__13642 = null;
            var G__13643 = 0;
            var G__13644 = 0;
            seq__13629 = G__13641;
            chunk__13630 = G__13642;
            count__13631 = G__13643;
            i__13632 = G__13644;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }
};
speclj.report.progress.print_errors = function speclj$report$progress$print_errors(error_results) {
  if (cljs.core.seq.call(null, error_results)) {
    cljs.core.println.call(null);
    cljs.core.println.call(null, "Errors:");
  } else {
  }
  var seq__13651_13657 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, cljs.core.iterate.call(null, cljs.core.inc, 1), error_results)));
  var chunk__13652_13658 = null;
  var count__13653_13659 = 0;
  var i__13654_13660 = 0;
  while (true) {
    if (i__13654_13660 < count__13653_13659) {
      var vec__13655_13661 = cljs.core._nth.call(null, chunk__13652_13658, i__13654_13660);
      var number_13662 = cljs.core.nth.call(null, vec__13655_13661, 0, null);
      var result_13663 = cljs.core.nth.call(null, vec__13655_13661, 1, null);
      cljs.core.println.call(null);
      cljs.core.println.call(null, speclj.reporting.indent.call(null, 1, number_13662, ") ", speclj.reporting.red.call(null, [cljs.core.str(result_13663.exception)].join(""))));
      cljs.core.println.call(null, speclj.reporting.grey.call(null, speclj.reporting.indent.call(null, 2.5, speclj.reporting.stack_trace_str.call(null, result_13663.exception))));
      var G__13664 = seq__13651_13657;
      var G__13665 = chunk__13652_13658;
      var G__13666 = count__13653_13659;
      var G__13667 = i__13654_13660 + 1;
      seq__13651_13657 = G__13664;
      chunk__13652_13658 = G__13665;
      count__13653_13659 = G__13666;
      i__13654_13660 = G__13667;
      continue;
    } else {
      var temp__4425__auto___13668 = cljs.core.seq.call(null, seq__13651_13657);
      if (temp__4425__auto___13668) {
        var seq__13651_13669__$1 = temp__4425__auto___13668;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13651_13669__$1)) {
          var c__5092__auto___13670 = cljs.core.chunk_first.call(null, seq__13651_13669__$1);
          var G__13671 = cljs.core.chunk_rest.call(null, seq__13651_13669__$1);
          var G__13672 = c__5092__auto___13670;
          var G__13673 = cljs.core.count.call(null, c__5092__auto___13670);
          var G__13674 = 0;
          seq__13651_13657 = G__13671;
          chunk__13652_13658 = G__13672;
          count__13653_13659 = G__13673;
          i__13654_13660 = G__13674;
          continue;
        } else {
          var vec__13656_13675 = cljs.core.first.call(null, seq__13651_13669__$1);
          var number_13676 = cljs.core.nth.call(null, vec__13656_13675, 0, null);
          var result_13677 = cljs.core.nth.call(null, vec__13656_13675, 1, null);
          cljs.core.println.call(null);
          cljs.core.println.call(null, speclj.reporting.indent.call(null, 1, number_13676, ") ", speclj.reporting.red.call(null, [cljs.core.str(result_13677.exception)].join(""))));
          cljs.core.println.call(null, speclj.reporting.grey.call(null, speclj.reporting.indent.call(null, 2.5, speclj.reporting.stack_trace_str.call(null, result_13677.exception))));
          var G__13678 = cljs.core.next.call(null, seq__13651_13669__$1);
          var G__13679 = null;
          var G__13680 = 0;
          var G__13681 = 0;
          seq__13651_13657 = G__13678;
          chunk__13652_13658 = G__13679;
          count__13653_13659 = G__13680;
          i__13654_13660 = G__13681;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.flush.call(null);
};
speclj.report.progress.print_duration = function speclj$report$progress$print_duration(results) {
  cljs.core.println.call(null);
  return cljs.core.println.call(null, "Finished in", speclj.platform.format_seconds.call(null, speclj.reporting.tally_time.call(null, results)), "seconds");
};
speclj.report.progress.color_fn_for = function speclj$report$progress$color_fn_for(result_map) {
  if (cljs.core.not_EQ_.call(null, 0, cljs.core.count.call(null, cljs.core.concat.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(result_map), (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(result_map))))) {
    return speclj.reporting.red;
  } else {
    if (cljs.core.not_EQ_.call(null, 0, cljs.core.count.call(null, (new cljs.core.Keyword(null, "pending", "pending", -220036727)).cljs$core$IFn$_invoke$arity$1(result_map)))) {
      return speclj.reporting.yellow;
    } else {
      return speclj.reporting.green;
    }
  }
};
speclj.report.progress.apply_pending_tally = function speclj$report$progress$apply_pending_tally(report, tally) {
  if ((new cljs.core.Keyword(null, "pending", "pending", -220036727)).cljs$core$IFn$_invoke$arity$1(tally) > 0) {
    return cljs.core.conj.call(null, report, [cljs.core.str((new cljs.core.Keyword(null, "pending", "pending", -220036727)).cljs$core$IFn$_invoke$arity$1(tally)), cljs.core.str(" pending")].join(""));
  } else {
    return report;
  }
};
speclj.report.progress.apply_error_tally = function speclj$report$progress$apply_error_tally(report, tally) {
  if ((new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(tally) > 0) {
    return cljs.core.conj.call(null, report, [cljs.core.str((new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(tally)), cljs.core.str(" errors")].join(""));
  } else {
    return report;
  }
};
speclj.report.progress.describe_counts_for = function speclj$report$progress$describe_counts_for(result_map) {
  var tally = cljs.core.zipmap.call(null, cljs.core.keys.call(null, result_map), cljs.core.map.call(null, cljs.core.count, cljs.core.vals.call(null, result_map)));
  var always_on_counts = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.vals.call(null, tally))), cljs.core.str(" examples")].join(""), [cljs.core.str((new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(tally)), cljs.core.str(" failures")].join("")], null);
  return clojure.string.join.call(null, ", ", speclj.report.progress.apply_error_tally.call(null, speclj.report.progress.apply_pending_tally.call(null, always_on_counts, tally), tally));
};
speclj.report.progress.print_tally = function speclj$report$progress$print_tally(result_map) {
  var color_fn = speclj.report.progress.color_fn_for.call(null, result_map);
  return cljs.core.println.call(null, color_fn.call(null, speclj.report.progress.describe_counts_for.call(null, result_map)));
};
speclj.report.progress.print_summary = function speclj$report$progress$print_summary(results) {
  var result_map = speclj.results.categorize.call(null, results);
  speclj.report.progress.print_failures.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(result_map));
  speclj.report.progress.print_pendings.call(null, (new cljs.core.Keyword(null, "pending", "pending", -220036727)).cljs$core$IFn$_invoke$arity$1(result_map));
  speclj.report.progress.print_errors.call(null, (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(result_map));
  speclj.report.progress.print_duration.call(null, results);
  return speclj.report.progress.print_tally.call(null, result_map);
};
speclj.report.progress.ProgressReporter = function() {
};
speclj.report.progress.ProgressReporter.prototype.speclj$reporting$Reporter$ = true;
speclj.report.progress.ProgressReporter.prototype.speclj$reporting$Reporter$report_message$arity$2 = function(this$, message) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.println.call(null, message);
  return cljs.core.flush.call(null);
};
speclj.report.progress.ProgressReporter.prototype.speclj$reporting$Reporter$report_description$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
speclj.report.progress.ProgressReporter.prototype.speclj$reporting$Reporter$report_pass$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.print.call(null, speclj.reporting.green.call(null, "."));
  return cljs.core.flush.call(null);
};
speclj.report.progress.ProgressReporter.prototype.speclj$reporting$Reporter$report_pending$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.print.call(null, speclj.reporting.yellow.call(null, "*"));
  return cljs.core.flush.call(null);
};
speclj.report.progress.ProgressReporter.prototype.speclj$reporting$Reporter$report_fail$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.print.call(null, speclj.reporting.red.call(null, "F"));
  return cljs.core.flush.call(null);
};
speclj.report.progress.ProgressReporter.prototype.speclj$reporting$Reporter$report_error$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.print.call(null, speclj.reporting.red.call(null, "E"));
  return cljs.core.flush.call(null);
};
speclj.report.progress.ProgressReporter.prototype.speclj$reporting$Reporter$report_runs$arity$2 = function(this$, results) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.println.call(null);
  return speclj.report.progress.print_summary.call(null, results);
};
speclj.report.progress.ProgressReporter.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
speclj.report.progress.ProgressReporter.cljs$lang$type = true;
speclj.report.progress.ProgressReporter.cljs$lang$ctorStr = "speclj.report.progress/ProgressReporter";
speclj.report.progress.ProgressReporter.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.report.progress/ProgressReporter");
};
speclj.report.progress.__GT_ProgressReporter = function speclj$report$progress$__GT_ProgressReporter() {
  return new speclj.report.progress.ProgressReporter;
};
speclj.report.progress.new_progress_reporter = function speclj$report$progress$new_progress_reporter() {
  return new speclj.report.progress.ProgressReporter;
};
cljs.core.reset_BANG_.call(null, speclj.config.default_reporters, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [speclj.report.progress.new_progress_reporter.call(null)], null));
goog.provide("speclj.components");
goog.require("cljs.core");
speclj.components.SpecComponent = function() {
  var obj13372 = {};
  return obj13372;
}();
speclj.components.install = function speclj$components$install(this$, description) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.speclj$components$SpecComponent$install$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.speclj$components$SpecComponent$install$arity$2(this$, description);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = speclj.components.install[goog.typeOf(x__4943__auto__)];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = speclj.components.install["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "SpecComponent.install", this$);
        }
      }
    }().call(null, this$, description);
  }
};
cljs.core.LazySeq.prototype.speclj$components$SpecComponent$ = true;
cljs.core.LazySeq.prototype.speclj$components$SpecComponent$install$arity$2 = function(this$, description) {
  var this$__$1 = this;
  var seq__13373 = cljs.core.seq.call(null, cljs.core.seq.call(null, this$__$1));
  var chunk__13374 = null;
  var count__13375 = 0;
  var i__13376 = 0;
  while (true) {
    if (i__13376 < count__13375) {
      var component = cljs.core._nth.call(null, chunk__13374, i__13376);
      speclj.components.install.call(null, component, description);
      var G__13389 = seq__13373;
      var G__13390 = chunk__13374;
      var G__13391 = count__13375;
      var G__13392 = i__13376 + 1;
      seq__13373 = G__13389;
      chunk__13374 = G__13390;
      count__13375 = G__13391;
      i__13376 = G__13392;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13373);
      if (temp__4425__auto__) {
        var seq__13373__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13373__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first.call(null, seq__13373__$1);
          var G__13393 = cljs.core.chunk_rest.call(null, seq__13373__$1);
          var G__13394 = c__5092__auto__;
          var G__13395 = cljs.core.count.call(null, c__5092__auto__);
          var G__13396 = 0;
          seq__13373 = G__13393;
          chunk__13374 = G__13394;
          count__13375 = G__13395;
          i__13376 = G__13396;
          continue;
        } else {
          var component = cljs.core.first.call(null, seq__13373__$1);
          speclj.components.install.call(null, component, description);
          var G__13397 = cljs.core.next.call(null, seq__13373__$1);
          var G__13398 = null;
          var G__13399 = 0;
          var G__13400 = 0;
          seq__13373 = G__13397;
          chunk__13374 = G__13398;
          count__13375 = G__13399;
          i__13376 = G__13400;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.List.prototype.speclj$components$SpecComponent$ = true;
cljs.core.List.prototype.speclj$components$SpecComponent$install$arity$2 = function(this$, description) {
  var this$__$1 = this;
  var seq__13377 = cljs.core.seq.call(null, cljs.core.seq.call(null, this$__$1));
  var chunk__13378 = null;
  var count__13379 = 0;
  var i__13380 = 0;
  while (true) {
    if (i__13380 < count__13379) {
      var component = cljs.core._nth.call(null, chunk__13378, i__13380);
      speclj.components.install.call(null, component, description);
      var G__13401 = seq__13377;
      var G__13402 = chunk__13378;
      var G__13403 = count__13379;
      var G__13404 = i__13380 + 1;
      seq__13377 = G__13401;
      chunk__13378 = G__13402;
      count__13379 = G__13403;
      i__13380 = G__13404;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13377);
      if (temp__4425__auto__) {
        var seq__13377__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13377__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first.call(null, seq__13377__$1);
          var G__13405 = cljs.core.chunk_rest.call(null, seq__13377__$1);
          var G__13406 = c__5092__auto__;
          var G__13407 = cljs.core.count.call(null, c__5092__auto__);
          var G__13408 = 0;
          seq__13377 = G__13405;
          chunk__13378 = G__13406;
          count__13379 = G__13407;
          i__13380 = G__13408;
          continue;
        } else {
          var component = cljs.core.first.call(null, seq__13377__$1);
          speclj.components.install.call(null, component, description);
          var G__13409 = cljs.core.next.call(null, seq__13377__$1);
          var G__13410 = null;
          var G__13411 = 0;
          var G__13412 = 0;
          seq__13377 = G__13409;
          chunk__13378 = G__13410;
          count__13379 = G__13411;
          i__13380 = G__13412;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.EmptyList.prototype.speclj$components$SpecComponent$ = true;
cljs.core.EmptyList.prototype.speclj$components$SpecComponent$install$arity$2 = function(this$, description) {
  var this$__$1 = this;
  var seq__13381 = cljs.core.seq.call(null, cljs.core.seq.call(null, this$__$1));
  var chunk__13382 = null;
  var count__13383 = 0;
  var i__13384 = 0;
  while (true) {
    if (i__13384 < count__13383) {
      var component = cljs.core._nth.call(null, chunk__13382, i__13384);
      speclj.components.install.call(null, component, description);
      var G__13413 = seq__13381;
      var G__13414 = chunk__13382;
      var G__13415 = count__13383;
      var G__13416 = i__13384 + 1;
      seq__13381 = G__13413;
      chunk__13382 = G__13414;
      count__13383 = G__13415;
      i__13384 = G__13416;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13381);
      if (temp__4425__auto__) {
        var seq__13381__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13381__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first.call(null, seq__13381__$1);
          var G__13417 = cljs.core.chunk_rest.call(null, seq__13381__$1);
          var G__13418 = c__5092__auto__;
          var G__13419 = cljs.core.count.call(null, c__5092__auto__);
          var G__13420 = 0;
          seq__13381 = G__13417;
          chunk__13382 = G__13418;
          count__13383 = G__13419;
          i__13384 = G__13420;
          continue;
        } else {
          var component = cljs.core.first.call(null, seq__13381__$1);
          speclj.components.install.call(null, component, description);
          var G__13421 = cljs.core.next.call(null, seq__13381__$1);
          var G__13422 = null;
          var G__13423 = 0;
          var G__13424 = 0;
          seq__13381 = G__13421;
          chunk__13382 = G__13422;
          count__13383 = G__13423;
          i__13384 = G__13424;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.speclj$components$SpecComponent$ = true;
cljs.core.PersistentVector.prototype.speclj$components$SpecComponent$install$arity$2 = function(this$, description) {
  var this$__$1 = this;
  var seq__13385 = cljs.core.seq.call(null, cljs.core.seq.call(null, this$__$1));
  var chunk__13386 = null;
  var count__13387 = 0;
  var i__13388 = 0;
  while (true) {
    if (i__13388 < count__13387) {
      var component = cljs.core._nth.call(null, chunk__13386, i__13388);
      speclj.components.install.call(null, component, description);
      var G__13425 = seq__13385;
      var G__13426 = chunk__13386;
      var G__13427 = count__13387;
      var G__13428 = i__13388 + 1;
      seq__13385 = G__13425;
      chunk__13386 = G__13426;
      count__13387 = G__13427;
      i__13388 = G__13428;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13385);
      if (temp__4425__auto__) {
        var seq__13385__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13385__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first.call(null, seq__13385__$1);
          var G__13429 = cljs.core.chunk_rest.call(null, seq__13385__$1);
          var G__13430 = c__5092__auto__;
          var G__13431 = cljs.core.count.call(null, c__5092__auto__);
          var G__13432 = 0;
          seq__13385 = G__13429;
          chunk__13386 = G__13430;
          count__13387 = G__13431;
          i__13388 = G__13432;
          continue;
        } else {
          var component = cljs.core.first.call(null, seq__13385__$1);
          speclj.components.install.call(null, component, description);
          var G__13433 = cljs.core.next.call(null, seq__13385__$1);
          var G__13434 = null;
          var G__13435 = 0;
          var G__13436 = 0;
          seq__13385 = G__13433;
          chunk__13386 = G__13434;
          count__13387 = G__13435;
          i__13388 = G__13436;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
speclj.components.SpecComponent["null"] = true;
speclj.components.install["null"] = function(this$, description) {
  throw cljs.core.ex_info.call(null, [cljs.core.str("Oops!  It looks like you tried to add 'nil' to a spec.  That's probabaly not what you wanted.")].join(""), cljs.core.PersistentArrayMap.EMPTY);
};
speclj.components.SpecComponent["object"] = true;
speclj.components.install["object"] = function(this$, description) {
  return null;
};
speclj.components.Description = function(name, ns, parent, children, charcteristics, tags, befores, before_alls, afters, after_alls, withs, with_alls, arounds, around_alls) {
  this.name = name;
  this.ns = ns;
  this.parent = parent;
  this.children = children;
  this.charcteristics = charcteristics;
  this.tags = tags;
  this.befores = befores;
  this.before_alls = before_alls;
  this.afters = afters;
  this.after_alls = after_alls;
  this.withs = withs;
  this.with_alls = with_alls;
  this.arounds = arounds;
  this.around_alls = around_alls;
};
speclj.components.Description.prototype.speclj$components$SpecComponent$ = true;
speclj.components.Description.prototype.speclj$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.reset_BANG_.call(null, this$__$1.parent, description);
  return cljs.core.swap_BANG_.call(null, description.children, cljs.core.conj, this$__$1);
};
speclj.components.Description.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return [cljs.core.str("Description: "), cljs.core.str('"'), cljs.core.str(self__.name), cljs.core.str('"')].join("");
};
speclj.components.Description.getBasis = function() {
  return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "charcteristics", "charcteristics", 504516064, null), new cljs.core.Symbol(null, "tags", "tags", -883016792, null), new cljs.core.Symbol(null, 
  "befores", "befores", 695378544, null), new cljs.core.Symbol(null, "before-alls", "before-alls", 2010698475, null), new cljs.core.Symbol(null, "afters", "afters", 730798999, null), new cljs.core.Symbol(null, "after-alls", "after-alls", 1969611356, null), new cljs.core.Symbol(null, "withs", "withs", 86966390, null), new cljs.core.Symbol(null, "with-alls", "with-alls", 307687875, null), new cljs.core.Symbol(null, "arounds", "arounds", 203860653, null), new cljs.core.Symbol(null, "around-alls", "around-alls", 
  919934233, null)], null);
};
speclj.components.Description.cljs$lang$type = true;
speclj.components.Description.cljs$lang$ctorStr = "speclj.components/Description";
speclj.components.Description.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.components/Description");
};
speclj.components.__GT_Description = function speclj$components$__GT_Description(name, ns, parent, children, charcteristics, tags, befores, before_alls, afters, after_alls, withs, with_alls, arounds, around_alls) {
  return new speclj.components.Description(name, ns, parent, children, charcteristics, tags, befores, before_alls, afters, after_alls, withs, with_alls, arounds, around_alls);
};
speclj.components.new_description = function speclj$components$new_description(name, ns) {
  return new speclj.components.Description(name, ns, cljs.core.atom.call(null, null), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), 
  cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY));
};
speclj.components.Characteristic = function(name, parent, body) {
  this.name = name;
  this.parent = parent;
  this.body = body;
};
speclj.components.Characteristic.prototype.speclj$components$SpecComponent$ = true;
speclj.components.Characteristic.prototype.speclj$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.reset_BANG_.call(null, this$__$1.parent, description);
  return cljs.core.swap_BANG_.call(null, description.charcteristics, cljs.core.conj, this$__$1);
};
speclj.components.Characteristic.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return [cljs.core.str('"'), cljs.core.str(self__.name), cljs.core.str('"')].join("");
};
speclj.components.Characteristic.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "body", "body", -408674142, null)], null);
};
speclj.components.Characteristic.cljs$lang$type = true;
speclj.components.Characteristic.cljs$lang$ctorStr = "speclj.components/Characteristic";
speclj.components.Characteristic.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.components/Characteristic");
};
speclj.components.__GT_Characteristic = function speclj$components$__GT_Characteristic(name, parent, body) {
  return new speclj.components.Characteristic(name, parent, body);
};
speclj.components.new_characteristic = function speclj$components$new_characteristic() {
  var G__13438 = arguments.length;
  switch(G__13438) {
    case 2:
      return speclj.components.new_characteristic.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return speclj.components.new_characteristic.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
speclj.components.new_characteristic.cljs$core$IFn$_invoke$arity$2 = function(name, body) {
  return new speclj.components.Characteristic(name, cljs.core.atom.call(null, null), body);
};
speclj.components.new_characteristic.cljs$core$IFn$_invoke$arity$3 = function(name, description, body) {
  return new speclj.components.Characteristic(name, cljs.core.atom.call(null, description), body);
};
speclj.components.new_characteristic.cljs$lang$maxFixedArity = 3;
speclj.components.Before = function(body) {
  this.body = body;
};
speclj.components.Before.prototype.speclj$components$SpecComponent$ = true;
speclj.components.Before.prototype.speclj$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.befores, cljs.core.conj, this$__$1);
};
speclj.components.Before.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "body", "body", -408674142, null)], null);
};
speclj.components.Before.cljs$lang$type = true;
speclj.components.Before.cljs$lang$ctorStr = "speclj.components/Before";
speclj.components.Before.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.components/Before");
};
speclj.components.__GT_Before = function speclj$components$__GT_Before(body) {
  return new speclj.components.Before(body);
};
speclj.components.new_before = function speclj$components$new_before(body) {
  return new speclj.components.Before(body);
};
speclj.components.After = function(body) {
  this.body = body;
};
speclj.components.After.prototype.speclj$components$SpecComponent$ = true;
speclj.components.After.prototype.speclj$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.afters, cljs.core.conj, this$__$1);
};
speclj.components.After.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "body", "body", -408674142, null)], null);
};
speclj.components.After.cljs$lang$type = true;
speclj.components.After.cljs$lang$ctorStr = "speclj.components/After";
speclj.components.After.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.components/After");
};
speclj.components.__GT_After = function speclj$components$__GT_After(body) {
  return new speclj.components.After(body);
};
speclj.components.new_after = function speclj$components$new_after(body) {
  return new speclj.components.After(body);
};
speclj.components.Around = function(body) {
  this.body = body;
};
speclj.components.Around.prototype.speclj$components$SpecComponent$ = true;
speclj.components.Around.prototype.speclj$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.arounds, cljs.core.conj, this$__$1);
};
speclj.components.Around.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "body", "body", -408674142, null)], null);
};
speclj.components.Around.cljs$lang$type = true;
speclj.components.Around.cljs$lang$ctorStr = "speclj.components/Around";
speclj.components.Around.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.components/Around");
};
speclj.components.__GT_Around = function speclj$components$__GT_Around(body) {
  return new speclj.components.Around(body);
};
speclj.components.new_around = function speclj$components$new_around(body) {
  return new speclj.components.Around(body);
};
speclj.components.BeforeAll = function(body) {
  this.body = body;
};
speclj.components.BeforeAll.prototype.speclj$components$SpecComponent$ = true;
speclj.components.BeforeAll.prototype.speclj$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.before_alls, cljs.core.conj, this$__$1);
};
speclj.components.BeforeAll.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "body", "body", -408674142, null)], null);
};
speclj.components.BeforeAll.cljs$lang$type = true;
speclj.components.BeforeAll.cljs$lang$ctorStr = "speclj.components/BeforeAll";
speclj.components.BeforeAll.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.components/BeforeAll");
};
speclj.components.__GT_BeforeAll = function speclj$components$__GT_BeforeAll(body) {
  return new speclj.components.BeforeAll(body);
};
speclj.components.new_before_all = function speclj$components$new_before_all(body) {
  return new speclj.components.BeforeAll(body);
};
speclj.components.AfterAll = function(body) {
  this.body = body;
};
speclj.components.AfterAll.prototype.speclj$components$SpecComponent$ = true;
speclj.components.AfterAll.prototype.speclj$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.after_alls, cljs.core.conj, this$__$1);
};
speclj.components.AfterAll.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "body", "body", -408674142, null)], null);
};
speclj.components.AfterAll.cljs$lang$type = true;
speclj.components.AfterAll.cljs$lang$ctorStr = "speclj.components/AfterAll";
speclj.components.AfterAll.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.components/AfterAll");
};
speclj.components.__GT_AfterAll = function speclj$components$__GT_AfterAll(body) {
  return new speclj.components.AfterAll(body);
};
speclj.components.new_after_all = function speclj$components$new_after_all(body) {
  return new speclj.components.AfterAll(body);
};
speclj.components.AroundAll = function(body) {
  this.body = body;
};
speclj.components.AroundAll.prototype.speclj$components$SpecComponent$ = true;
speclj.components.AroundAll.prototype.speclj$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.around_alls, cljs.core.conj, this$__$1);
};
speclj.components.AroundAll.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "body", "body", -408674142, null)], null);
};
speclj.components.AroundAll.cljs$lang$type = true;
speclj.components.AroundAll.cljs$lang$ctorStr = "speclj.components/AroundAll";
speclj.components.AroundAll.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.components/AroundAll");
};
speclj.components.__GT_AroundAll = function speclj$components$__GT_AroundAll(body) {
  return new speclj.components.AroundAll(body);
};
speclj.components.new_around_all = function speclj$components$new_around_all(body) {
  return new speclj.components.AroundAll(body);
};
speclj.components.With = function(name, unique_name, body, value, bang) {
  this.name = name;
  this.unique_name = unique_name;
  this.body = body;
  this.value = value;
  this.bang = bang;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
speclj.components.With.prototype.speclj$components$SpecComponent$ = true;
speclj.components.With.prototype.speclj$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.withs, cljs.core.conj, this$__$1);
};
speclj.components.With.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("speclj.components", "none", "speclj.components/none", 222465943), cljs.core.deref.call(null, self__.value))) {
    cljs.core.reset_BANG_.call(null, self__.value, self__.body.call(null));
  } else {
  }
  return cljs.core.deref.call(null, self__.value);
};
speclj.components.With.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "unique-name", "unique-name", -487981563, null), new cljs.core.Symbol(null, "body", "body", -408674142, null), new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "bang", "bang", -1936704923, null)], null);
};
speclj.components.With.cljs$lang$type = true;
speclj.components.With.cljs$lang$ctorStr = "speclj.components/With";
speclj.components.With.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.components/With");
};
speclj.components.__GT_With = function speclj$components$__GT_With(name, unique_name, body, value, bang) {
  return new speclj.components.With(name, unique_name, body, value, bang);
};
speclj.components.reset_with = function speclj$components$reset_with(with$) {
  cljs.core.reset_BANG_.call(null, with$.value, new cljs.core.Keyword("speclj.components", "none", "speclj.components/none", 222465943));
  if (cljs.core.truth_(with$.bang)) {
    return cljs.core.deref.call(null, with$);
  } else {
    return null;
  }
};
speclj.components.new_with = function speclj$components$new_with(name, unique_name, body, bang) {
  var with$ = new speclj.components.With(name, unique_name, body, cljs.core.atom.call(null, new cljs.core.Keyword("speclj.components", "none", "speclj.components/none", 222465943)), bang);
  if (cljs.core.truth_(bang)) {
    cljs.core.deref.call(null, with$);
  } else {
  }
  return with$;
};
speclj.components.WithAll = function(name, unique_name, body, value, bang) {
  this.name = name;
  this.unique_name = unique_name;
  this.body = body;
  this.value = value;
  this.bang = bang;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
speclj.components.WithAll.prototype.speclj$components$SpecComponent$ = true;
speclj.components.WithAll.prototype.speclj$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.with_alls, cljs.core.conj, this$__$1);
};
speclj.components.WithAll.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("speclj.components", "none", "speclj.components/none", 222465943), cljs.core.deref.call(null, self__.value))) {
    cljs.core.reset_BANG_.call(null, self__.value, self__.body.call(null));
  } else {
  }
  return cljs.core.deref.call(null, self__.value);
};
speclj.components.WithAll.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "unique-name", "unique-name", -487981563, null), new cljs.core.Symbol(null, "body", "body", -408674142, null), new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "bang", "bang", -1936704923, null)], null);
};
speclj.components.WithAll.cljs$lang$type = true;
speclj.components.WithAll.cljs$lang$ctorStr = "speclj.components/WithAll";
speclj.components.WithAll.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.components/WithAll");
};
speclj.components.__GT_WithAll = function speclj$components$__GT_WithAll(name, unique_name, body, value, bang) {
  return new speclj.components.WithAll(name, unique_name, body, value, bang);
};
speclj.components.new_with_all = function speclj$components$new_with_all(name, unique_name, body, bang) {
  var with_all = new speclj.components.WithAll(name, unique_name, body, cljs.core.atom.call(null, new cljs.core.Keyword("speclj.components", "none", "speclj.components/none", 222465943)), bang);
  if (cljs.core.truth_(bang)) {
    cljs.core.deref.call(null, with_all);
  } else {
  }
  return with_all;
};
speclj.components.Tag = function(name) {
  this.name = name;
};
speclj.components.Tag.prototype.speclj$components$SpecComponent$ = true;
speclj.components.Tag.prototype.speclj$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.tags, cljs.core.conj, self__.name);
};
speclj.components.Tag.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
speclj.components.Tag.cljs$lang$type = true;
speclj.components.Tag.cljs$lang$ctorStr = "speclj.components/Tag";
speclj.components.Tag.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.components/Tag");
};
speclj.components.__GT_Tag = function speclj$components$__GT_Tag(name) {
  return new speclj.components.Tag(name);
};
speclj.components.new_tag = function speclj$components$new_tag(name) {
  return new speclj.components.Tag(name);
};
goog.provide("speclj.running");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("speclj.components");
goog.require("speclj.config");
goog.require("speclj.platform");
goog.require("speclj.reporting");
goog.require("speclj.results");
goog.require("speclj.tags");
speclj.running.eval_components = function speclj$running$eval_components(components) {
  var seq__13139 = cljs.core.seq.call(null, components);
  var chunk__13140 = null;
  var count__13141 = 0;
  var i__13142 = 0;
  while (true) {
    if (i__13142 < count__13141) {
      var component = cljs.core._nth.call(null, chunk__13140, i__13142);
      component.body.call(null);
      var G__13143 = seq__13139;
      var G__13144 = chunk__13140;
      var G__13145 = count__13141;
      var G__13146 = i__13142 + 1;
      seq__13139 = G__13143;
      chunk__13140 = G__13144;
      count__13141 = G__13145;
      i__13142 = G__13146;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13139);
      if (temp__4425__auto__) {
        var seq__13139__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13139__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first.call(null, seq__13139__$1);
          var G__13147 = cljs.core.chunk_rest.call(null, seq__13139__$1);
          var G__13148 = c__5092__auto__;
          var G__13149 = cljs.core.count.call(null, c__5092__auto__);
          var G__13150 = 0;
          seq__13139 = G__13147;
          chunk__13140 = G__13148;
          count__13141 = G__13149;
          i__13142 = G__13150;
          continue;
        } else {
          var component = cljs.core.first.call(null, seq__13139__$1);
          component.body.call(null);
          var G__13151 = cljs.core.next.call(null, seq__13139__$1);
          var G__13152 = null;
          var G__13153 = 0;
          var G__13154 = 0;
          seq__13139 = G__13151;
          chunk__13140 = G__13152;
          count__13141 = G__13153;
          i__13142 = G__13154;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
speclj.running.nested_fns = function speclj$running$nested_fns(base, fns) {
  if (cljs.core.seq.call(null, fns)) {
    return cljs.core.partial.call(null, cljs.core.first.call(null, fns), speclj$running$nested_fns.call(null, base, cljs.core.rest.call(null, fns)));
  } else {
    return base;
  }
};
speclj.running.eval_characteristic = function speclj$running$eval_characteristic(befores, body, afters) {
  speclj.running.eval_components.call(null, befores);
  try {
    return body.call(null);
  } finally {
    speclj.running.eval_components.call(null, afters);
  }
};
speclj.running.reset_withs = function speclj$running$reset_withs(withs) {
  var seq__13159 = cljs.core.seq.call(null, withs);
  var chunk__13160 = null;
  var count__13161 = 0;
  var i__13162 = 0;
  while (true) {
    if (i__13162 < count__13161) {
      var with$ = cljs.core._nth.call(null, chunk__13160, i__13162);
      speclj.components.reset_with.call(null, with$);
      var G__13163 = seq__13159;
      var G__13164 = chunk__13160;
      var G__13165 = count__13161;
      var G__13166 = i__13162 + 1;
      seq__13159 = G__13163;
      chunk__13160 = G__13164;
      count__13161 = G__13165;
      i__13162 = G__13166;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13159);
      if (temp__4425__auto__) {
        var seq__13159__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13159__$1)) {
          var c__5092__auto__ = cljs.core.chunk_first.call(null, seq__13159__$1);
          var G__13167 = cljs.core.chunk_rest.call(null, seq__13159__$1);
          var G__13168 = c__5092__auto__;
          var G__13169 = cljs.core.count.call(null, c__5092__auto__);
          var G__13170 = 0;
          seq__13159 = G__13167;
          chunk__13160 = G__13168;
          count__13161 = G__13169;
          i__13162 = G__13170;
          continue;
        } else {
          var with$ = cljs.core.first.call(null, seq__13159__$1);
          speclj.components.reset_with.call(null, with$);
          var G__13171 = cljs.core.next.call(null, seq__13159__$1);
          var G__13172 = null;
          var G__13173 = 0;
          var G__13174 = 0;
          seq__13159 = G__13171;
          chunk__13160 = G__13172;
          count__13161 = G__13173;
          i__13162 = G__13174;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
speclj.running.collect_components = function speclj$running$collect_components(getter, description) {
  var description__$1 = description;
  var components = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.truth_(description__$1)) {
      var G__13175 = cljs.core.deref.call(null, description__$1.parent);
      var G__13176 = cljs.core.concat.call(null, getter.call(null, description__$1), components);
      description__$1 = G__13175;
      components = G__13176;
      continue;
    } else {
      return components;
    }
    break;
  }
};
speclj.running.report_result = function speclj$running$report_result(result_constructor, characteristic, start_time, reporters, failure) {
  var present_args = cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [characteristic, speclj.platform.secs_since.call(null, start_time), failure], null));
  var result = cljs.core.apply.call(null, result_constructor, present_args);
  speclj.reporting.report_run.call(null, result, reporters);
  return result;
};
speclj.running.do_characteristic = function speclj$running$do_characteristic(characteristic, reporters) {
  var description = cljs.core.deref.call(null, characteristic.parent);
  var befores = speclj.running.collect_components.call(null, function(description) {
    return function(p1__13177_SHARP_) {
      return cljs.core.deref.call(null, p1__13177_SHARP_.befores);
    };
  }(description), description);
  var afters = speclj.running.collect_components.call(null, function(description, befores) {
    return function(p1__13178_SHARP_) {
      return cljs.core.deref.call(null, p1__13178_SHARP_.afters);
    };
  }(description, befores), description);
  var core_body = characteristic.body;
  var before_and_after_body = function(description, befores, afters, core_body) {
    return function() {
      return speclj.running.eval_characteristic.call(null, befores, core_body, afters);
    };
  }(description, befores, afters, core_body);
  var arounds = speclj.running.collect_components.call(null, function(description, befores, afters, core_body, before_and_after_body) {
    return function(p1__13179_SHARP_) {
      return cljs.core.deref.call(null, p1__13179_SHARP_.arounds);
    };
  }(description, befores, afters, core_body, before_and_after_body), description);
  var full_body = speclj.running.nested_fns.call(null, before_and_after_body, cljs.core.map.call(null, function(description, befores, afters, core_body, before_and_after_body, arounds) {
    return function(p1__13180_SHARP_) {
      return p1__13180_SHARP_.body;
    };
  }(description, befores, afters, core_body, before_and_after_body, arounds), arounds));
  var withs = speclj.running.collect_components.call(null, function(description, befores, afters, core_body, before_and_after_body, arounds, full_body) {
    return function(p1__13181_SHARP_) {
      return cljs.core.deref.call(null, p1__13181_SHARP_.withs);
    };
  }(description, befores, afters, core_body, before_and_after_body, arounds, full_body), description);
  var start_time = speclj.platform.current_time.call(null);
  try {
    full_body.call(null);
    return speclj.running.report_result.call(null, speclj.results.pass_result, characteristic, start_time, reporters, null);
  } catch (e13183) {
    var e = e13183;
    if (cljs.core.truth_(speclj.platform.pending_QMARK_.call(null, e))) {
      return speclj.running.report_result.call(null, speclj.results.pending_result, characteristic, start_time, reporters, e);
    } else {
      return speclj.running.report_result.call(null, speclj.results.fail_result, characteristic, start_time, reporters, e);
    }
  } finally {
    speclj.running.reset_withs.call(null, withs);
  }
};
speclj.running.do_characteristics = function speclj$running$do_characteristics(characteristics, reporters) {
  return cljs.core.doall.call(null, function() {
    var iter__5061__auto__ = function speclj$running$do_characteristics_$_iter__13188(s__13189) {
      return new cljs.core.LazySeq(null, function() {
        var s__13189__$1 = s__13189;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__13189__$1);
          if (temp__4425__auto__) {
            var s__13189__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__13189__$2)) {
              var c__5059__auto__ = cljs.core.chunk_first.call(null, s__13189__$2);
              var size__5060__auto__ = cljs.core.count.call(null, c__5059__auto__);
              var b__13191 = cljs.core.chunk_buffer.call(null, size__5060__auto__);
              if (function() {
                var i__13190 = 0;
                while (true) {
                  if (i__13190 < size__5060__auto__) {
                    var characteristic = cljs.core._nth.call(null, c__5059__auto__, i__13190);
                    cljs.core.chunk_append.call(null, b__13191, speclj.running.do_characteristic.call(null, characteristic, reporters));
                    var G__13192 = i__13190 + 1;
                    i__13190 = G__13192;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13191), speclj$running$do_characteristics_$_iter__13188.call(null, cljs.core.chunk_rest.call(null, s__13189__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13191), null);
              }
            } else {
              var characteristic = cljs.core.first.call(null, s__13189__$2);
              return cljs.core.cons.call(null, speclj.running.do_characteristic.call(null, characteristic, reporters), speclj$running$do_characteristics_$_iter__13188.call(null, cljs.core.rest.call(null, s__13189__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5061__auto__.call(null, characteristics);
  }());
};
speclj.running.do_child_contexts = function speclj$running$do_child_contexts(context, results, reporters) {
  var results__$1 = results;
  var contexts = cljs.core.deref.call(null, context.children);
  while (true) {
    if (cljs.core.seq.call(null, contexts)) {
      var G__13193 = cljs.core.concat.call(null, results__$1, speclj.running.do_description.call(null, cljs.core.first.call(null, contexts), reporters));
      var G__13194 = cljs.core.rest.call(null, contexts);
      results__$1 = G__13193;
      contexts = G__13194;
      continue;
    } else {
      speclj.running.eval_components.call(null, cljs.core.deref.call(null, context.after_alls));
      return results__$1;
    }
    break;
  }
};
speclj.running.results_for_context = function speclj$running$results_for_context(context, reporters) {
  if (cljs.core.truth_(speclj.tags.pass_tag_filter_QMARK_.call(null, speclj.tags.tags_for.call(null, context)))) {
    return speclj.running.do_characteristics.call(null, cljs.core.deref.call(null, context.charcteristics), reporters);
  } else {
    return cljs.core.PersistentVector.EMPTY;
  }
};
speclj.running.with_withs_bound = function speclj$running$with_withs_bound(description, body) {
  var withs = cljs.core.concat.call(null, cljs.core.deref.call(null, description.withs), cljs.core.deref.call(null, description.with_alls));
  var ns = clojure.string.replace.call(null, description.ns, "-", "_");
  var var_names = cljs.core.map.call(null, function(withs, ns) {
    return function(p1__13197_SHARP_) {
      return [cljs.core.str(ns), cljs.core.str("."), cljs.core.str(cljs.core.name.call(null, p1__13197_SHARP_.name))].join("");
    };
  }(withs, ns), withs);
  var unique_names = cljs.core.map.call(null, function(withs, ns, var_names) {
    return function(p1__13198_SHARP_) {
      return [cljs.core.str(ns), cljs.core.str("."), cljs.core.str(cljs.core.name.call(null, p1__13198_SHARP_.unique_name))].join("");
    };
  }(withs, ns, var_names), withs);
  var seq__13211_13223 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, var_names, unique_names)));
  var chunk__13212_13224 = null;
  var count__13213_13225 = 0;
  var i__13214_13226 = 0;
  while (true) {
    if (i__13214_13226 < count__13213_13225) {
      var vec__13215_13227 = cljs.core._nth.call(null, chunk__13212_13224, i__13214_13226);
      var n_13228 = cljs.core.nth.call(null, vec__13215_13227, 0, null);
      var un_13229 = cljs.core.nth.call(null, vec__13215_13227, 1, null);
      var code_13230 = [cljs.core.str(n_13228), cljs.core.str(" \x3d "), cljs.core.str(un_13229), cljs.core.str(";")].join("");
      eval(code_13230);
      var G__13231 = seq__13211_13223;
      var G__13232 = chunk__13212_13224;
      var G__13233 = count__13213_13225;
      var G__13234 = i__13214_13226 + 1;
      seq__13211_13223 = G__13231;
      chunk__13212_13224 = G__13232;
      count__13213_13225 = G__13233;
      i__13214_13226 = G__13234;
      continue;
    } else {
      var temp__4425__auto___13235 = cljs.core.seq.call(null, seq__13211_13223);
      if (temp__4425__auto___13235) {
        var seq__13211_13236__$1 = temp__4425__auto___13235;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13211_13236__$1)) {
          var c__5092__auto___13237 = cljs.core.chunk_first.call(null, seq__13211_13236__$1);
          var G__13238 = cljs.core.chunk_rest.call(null, seq__13211_13236__$1);
          var G__13239 = c__5092__auto___13237;
          var G__13240 = cljs.core.count.call(null, c__5092__auto___13237);
          var G__13241 = 0;
          seq__13211_13223 = G__13238;
          chunk__13212_13224 = G__13239;
          count__13213_13225 = G__13240;
          i__13214_13226 = G__13241;
          continue;
        } else {
          var vec__13216_13242 = cljs.core.first.call(null, seq__13211_13236__$1);
          var n_13243 = cljs.core.nth.call(null, vec__13216_13242, 0, null);
          var un_13244 = cljs.core.nth.call(null, vec__13216_13242, 1, null);
          var code_13245 = [cljs.core.str(n_13243), cljs.core.str(" \x3d "), cljs.core.str(un_13244), cljs.core.str(";")].join("");
          eval(code_13245);
          var G__13246 = cljs.core.next.call(null, seq__13211_13236__$1);
          var G__13247 = null;
          var G__13248 = 0;
          var G__13249 = 0;
          seq__13211_13223 = G__13246;
          chunk__13212_13224 = G__13247;
          count__13213_13225 = G__13248;
          i__13214_13226 = G__13249;
          continue;
        }
      } else {
      }
    }
    break;
  }
  try {
    return body.call(null);
  } finally {
    var seq__13217_13250 = cljs.core.seq.call(null, var_names);
    var chunk__13218_13251 = null;
    var count__13219_13252 = 0;
    var i__13220_13253 = 0;
    while (true) {
      if (i__13220_13253 < count__13219_13252) {
        var vec__13221_13254 = cljs.core._nth.call(null, chunk__13218_13251, i__13220_13253);
        var n_13255 = cljs.core.nth.call(null, vec__13221_13254, 0, null);
        var code_13256 = [cljs.core.str(n_13255), cljs.core.str(" \x3d null;")].join("");
        eval(code_13256);
        var G__13257 = seq__13217_13250;
        var G__13258 = chunk__13218_13251;
        var G__13259 = count__13219_13252;
        var G__13260 = i__13220_13253 + 1;
        seq__13217_13250 = G__13257;
        chunk__13218_13251 = G__13258;
        count__13219_13252 = G__13259;
        i__13220_13253 = G__13260;
        continue;
      } else {
        var temp__4425__auto___13261 = cljs.core.seq.call(null, seq__13217_13250);
        if (temp__4425__auto___13261) {
          var seq__13217_13262__$1 = temp__4425__auto___13261;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__13217_13262__$1)) {
            var c__5092__auto___13263 = cljs.core.chunk_first.call(null, seq__13217_13262__$1);
            var G__13264 = cljs.core.chunk_rest.call(null, seq__13217_13262__$1);
            var G__13265 = c__5092__auto___13263;
            var G__13266 = cljs.core.count.call(null, c__5092__auto___13263);
            var G__13267 = 0;
            seq__13217_13250 = G__13264;
            chunk__13218_13251 = G__13265;
            count__13219_13252 = G__13266;
            i__13220_13253 = G__13267;
            continue;
          } else {
            var vec__13222_13268 = cljs.core.first.call(null, seq__13217_13262__$1);
            var n_13269 = cljs.core.nth.call(null, vec__13222_13268, 0, null);
            var code_13270 = [cljs.core.str(n_13269), cljs.core.str(" \x3d null;")].join("");
            eval(code_13270);
            var G__13271 = cljs.core.next.call(null, seq__13217_13262__$1);
            var G__13272 = null;
            var G__13273 = 0;
            var G__13274 = 0;
            seq__13217_13250 = G__13271;
            chunk__13218_13251 = G__13272;
            count__13219_13252 = G__13273;
            i__13220_13253 = G__13274;
            continue;
          }
        } else {
        }
      }
      break;
    }
  }
};
speclj.running.nested_results_for_context = function speclj$running$nested_results_for_context(description, reporters) {
  var results = speclj.running.results_for_context.call(null, description, reporters);
  return speclj.running.do_child_contexts.call(null, description, results, reporters);
};
speclj.running.with_around_alls = function speclj$running$with_around_alls(description, run_characteristics_fn) {
  return speclj.running.nested_fns.call(null, run_characteristics_fn, cljs.core.map.call(null, function(p1__13275_SHARP_) {
    return p1__13275_SHARP_.body;
  }, cljs.core.deref.call(null, description.around_alls))).call(null);
};
speclj.running.do_description = function speclj$running$do_description(description, reporters) {
  var tag_sets = speclj.tags.tag_sets_for.call(null, description);
  if (cljs.core.truth_(cljs.core.some.call(null, speclj.tags.pass_tag_filter_QMARK_, tag_sets))) {
    speclj.reporting.report_description_STAR_.call(null, reporters, description);
    return speclj.running.with_withs_bound.call(null, description, function(tag_sets) {
      return function() {
        speclj.running.eval_components.call(null, cljs.core.deref.call(null, description.before_alls));
        try {
          return speclj.running.with_around_alls.call(null, description, cljs.core.partial.call(null, speclj.running.nested_results_for_context, description, reporters));
        } finally {
          speclj.running.reset_withs.call(null, cljs.core.deref.call(null, description.with_alls));
        }
      };
    }(tag_sets));
  } else {
    return null;
  }
};
speclj.running.process_compile_error = function speclj$running$process_compile_error(runner, e) {
  var error_result = speclj.results.error_result.call(null, e);
  cljs.core.swap_BANG_.call(null, runner.results, cljs.core.conj, error_result);
  return speclj.reporting.report_run.call(null, error_result, speclj.config.active_reporters.call(null));
};
speclj.running.Runner = function() {
  var obj13277 = {};
  return obj13277;
}();
speclj.running.run_directories = function speclj$running$run_directories(this$, directories, reporters) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.speclj$running$Runner$run_directories$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.speclj$running$Runner$run_directories$arity$3(this$, directories, reporters);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = speclj.running.run_directories[goog.typeOf(x__4943__auto__)];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = speclj.running.run_directories["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Runner.run-directories", this$);
        }
      }
    }().call(null, this$, directories, reporters);
  }
};
speclj.running.submit_description = function speclj$running$submit_description(this$, description) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.speclj$running$Runner$submit_description$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.speclj$running$Runner$submit_description$arity$2(this$, description);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = speclj.running.submit_description[goog.typeOf(x__4943__auto__)];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = speclj.running.submit_description["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Runner.submit-description", this$);
        }
      }
    }().call(null, this$, description);
  }
};
speclj.running.run_description = function speclj$running$run_description(this$, description, reporters) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.speclj$running$Runner$run_description$arity$3;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.speclj$running$Runner$run_description$arity$3(this$, description, reporters);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = speclj.running.run_description[goog.typeOf(x__4943__auto__)];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = speclj.running.run_description["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Runner.run-description", this$);
        }
      }
    }().call(null, this$, description, reporters);
  }
};
speclj.running.run_and_report = function speclj$running$run_and_report(this$, reporters) {
  if (function() {
    var and__4295__auto__ = this$;
    if (and__4295__auto__) {
      return this$.speclj$running$Runner$run_and_report$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return this$.speclj$running$Runner$run_and_report$arity$2(this$, reporters);
  } else {
    var x__4943__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4307__auto__ = speclj.running.run_and_report[goog.typeOf(x__4943__auto__)];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = speclj.running.run_and_report["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Runner.run-and-report", this$);
        }
      }
    }().call(null, this$, reporters);
  }
};
goog.provide("speclj.run.standard");
goog.require("cljs.core");
goog.require("speclj.components");
goog.require("speclj.config");
goog.require("speclj.report.progress");
goog.require("speclj.reporting");
goog.require("speclj.results");
goog.require("speclj.running");
goog.require("speclj.tags");
speclj.run.standard.counter = cljs.core.atom.call(null, 0);
speclj.run.standard.StandardRunner = function(num, descriptions, results) {
  this.num = num;
  this.descriptions = descriptions;
  this.results = results;
};
speclj.run.standard.StandardRunner.prototype.speclj$running$Runner$ = true;
speclj.run.standard.StandardRunner.prototype.speclj$running$Runner$run_directories$arity$3 = function(this$, directories, reporters) {
  var self__ = this;
  var this$__$1 = this;
  return alert("StandardRunner.run-directories:  I don't know how to do this.");
};
speclj.run.standard.StandardRunner.prototype.speclj$running$Runner$submit_description$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, self__.descriptions, cljs.core.conj, description);
};
speclj.run.standard.StandardRunner.prototype.speclj$running$Runner$run_description$arity$3 = function(this$, description, reporters) {
  var self__ = this;
  var this$__$1 = this;
  var run_results = speclj.running.do_description.call(null, description, reporters);
  return cljs.core.swap_BANG_.call(null, self__.results, cljs.core.into, run_results);
};
speclj.run.standard.StandardRunner.prototype.speclj$running$Runner$run_and_report$arity$2 = function(this$, reporters) {
  var self__ = this;
  var this$__$1 = this;
  var seq__13735_13739 = cljs.core.seq.call(null, cljs.core.deref.call(null, self__.descriptions));
  var chunk__13736_13740 = null;
  var count__13737_13741 = 0;
  var i__13738_13742 = 0;
  while (true) {
    if (i__13738_13742 < count__13737_13741) {
      var description_13743 = cljs.core._nth.call(null, chunk__13736_13740, i__13738_13742);
      speclj.running.run_description.call(null, this$__$1, description_13743, reporters);
      var G__13744 = seq__13735_13739;
      var G__13745 = chunk__13736_13740;
      var G__13746 = count__13737_13741;
      var G__13747 = i__13738_13742 + 1;
      seq__13735_13739 = G__13744;
      chunk__13736_13740 = G__13745;
      count__13737_13741 = G__13746;
      i__13738_13742 = G__13747;
      continue;
    } else {
      var temp__4425__auto___13748 = cljs.core.seq.call(null, seq__13735_13739);
      if (temp__4425__auto___13748) {
        var seq__13735_13749__$1 = temp__4425__auto___13748;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13735_13749__$1)) {
          var c__5092__auto___13750 = cljs.core.chunk_first.call(null, seq__13735_13749__$1);
          var G__13751 = cljs.core.chunk_rest.call(null, seq__13735_13749__$1);
          var G__13752 = c__5092__auto___13750;
          var G__13753 = cljs.core.count.call(null, c__5092__auto___13750);
          var G__13754 = 0;
          seq__13735_13739 = G__13751;
          chunk__13736_13740 = G__13752;
          count__13737_13741 = G__13753;
          i__13738_13742 = G__13754;
          continue;
        } else {
          var description_13755 = cljs.core.first.call(null, seq__13735_13749__$1);
          speclj.running.run_description.call(null, this$__$1, description_13755, reporters);
          var G__13756 = cljs.core.next.call(null, seq__13735_13749__$1);
          var G__13757 = null;
          var G__13758 = 0;
          var G__13759 = 0;
          seq__13735_13739 = G__13756;
          chunk__13736_13740 = G__13757;
          count__13737_13741 = G__13758;
          i__13738_13742 = G__13759;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return speclj.reporting.report_runs_STAR_.call(null, reporters, cljs.core.deref.call(null, self__.results));
};
speclj.run.standard.StandardRunner.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "num", "num", -669195096, null), new cljs.core.Symbol(null, "descriptions", "descriptions", 817338403, null), new cljs.core.Symbol(null, "results", "results", 506361414, null)], null);
};
speclj.run.standard.StandardRunner.cljs$lang$type = true;
speclj.run.standard.StandardRunner.cljs$lang$ctorStr = "speclj.run.standard/StandardRunner";
speclj.run.standard.StandardRunner.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.run.standard/StandardRunner");
};
speclj.run.standard.__GT_StandardRunner = function speclj$run$standard$__GT_StandardRunner(num, descriptions, results) {
  return new speclj.run.standard.StandardRunner(num, descriptions, results);
};
speclj.run.standard.StandardRunner.prototype.cljs$core$IPrintWithWriter$ = true;
speclj.run.standard.StandardRunner.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var x__$1 = this;
  cljs.core._write.call(null, writer, [cljs.core.str("#\x3cspeclj.run.standard.StandardRunner(num: "), cljs.core.str(x__$1.num), cljs.core.str(", descriptions: ")].join(""));
  cljs.core._pr_writer.call(null, cljs.core.deref.call(null, x__$1.descriptions), writer, opts);
  return cljs.core._write.call(null, writer, ")\x3e");
};
speclj.components.Description.prototype.cljs$core$IPrintWithWriter$ = true;
speclj.components.Description.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var x__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str("#\x3cspeclj.component.Description(name: "), cljs.core.str(x__$1.name), cljs.core.str(")\x3e")].join(""));
};
speclj.run.standard.new_standard_runner = function speclj$run$standard$new_standard_runner() {
  return new speclj.run.standard.StandardRunner(cljs.core.swap_BANG_.call(null, speclj.run.standard.counter, cljs.core.inc), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY));
};
cljs.core.reset_BANG_.call(null, speclj.config.default_runner_fn, speclj.run.standard.new_standard_runner);
cljs.core.reset_BANG_.call(null, speclj.config.default_runner, speclj.run.standard.new_standard_runner.call(null));
speclj.run.standard.armed = false;
speclj.run.standard.run_specs = function speclj$run$standard$run_specs() {
  var argseq__5347__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return speclj.run.standard.run_specs.cljs$core$IFn$_invoke$arity$variadic(argseq__5347__auto__);
};
speclj.run.standard.run_specs.cljs$core$IFn$_invoke$arity$variadic = function(configurations) {
  if (cljs.core.truth_(speclj.run.standard.armed)) {
    var config = cljs.core.apply.call(null, cljs.core.hash_map, configurations);
    var config__$1 = cljs.core.merge.call(null, cljs.core.dissoc.call(null, speclj.config.default_config, new cljs.core.Keyword(null, "runner", "runner", 1945441304)), config);
    return speclj.config.with_config.call(null, config__$1, function(config, config__$1) {
      return function() {
        var temp__4423__auto___13761 = speclj.tags.describe_filter.call(null);
        if (cljs.core.truth_(temp__4423__auto___13761)) {
          var filter_msg_13762 = temp__4423__auto___13761;
          speclj.reporting.report_message_STAR_.call(null, speclj.config.active_reporters.call(null), filter_msg_13762);
        } else {
        }
        speclj.running.run_and_report.call(null, speclj.config.active_runner.call(null), speclj.config.active_reporters.call(null));
        return speclj.results.fail_count.call(null, cljs.core.deref.call(null, speclj.config.active_runner.call(null).results));
      };
    }(config, config__$1));
  } else {
    return null;
  }
};
speclj.run.standard.run_specs.cljs$lang$maxFixedArity = 0;
speclj.run.standard.run_specs.cljs$lang$applyTo = function(seq13760) {
  return speclj.run.standard.run_specs.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq13760));
};
goog.provide("speclj.report.documentation");
goog.require("cljs.core");
goog.require("speclj.config");
goog.require("speclj.platform");
goog.require("speclj.report.progress");
goog.require("speclj.reporting");
goog.require("speclj.results");
speclj.report.documentation.level_of = function speclj$report$documentation$level_of(component) {
  var component__$1 = cljs.core.deref.call(null, component.parent);
  var level = 0;
  while (true) {
    if (cljs.core.truth_(component__$1)) {
      var G__13702 = cljs.core.deref.call(null, component__$1.parent);
      var G__13703 = level + 1;
      component__$1 = G__13702;
      level = G__13703;
      continue;
    } else {
      return level;
    }
    break;
  }
};
speclj.report.documentation.DocumentationReporter = function() {
};
speclj.report.documentation.DocumentationReporter.prototype.speclj$reporting$Reporter$ = true;
speclj.report.documentation.DocumentationReporter.prototype.speclj$reporting$Reporter$report_message$arity$2 = function(this$, message) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.println.call(null, message);
  return cljs.core.flush.call(null);
};
speclj.report.documentation.DocumentationReporter.prototype.speclj$reporting$Reporter$report_description$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  var level = speclj.report.documentation.level_of.call(null, description);
  if (level === 0) {
    cljs.core.println.call(null);
  } else {
  }
  cljs.core.println.call(null, [cljs.core.str(speclj.reporting.indent.call(null, level, description.name))].join(""));
  return cljs.core.flush.call(null);
};
speclj.report.documentation.DocumentationReporter.prototype.speclj$reporting$Reporter$report_pass$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  var characteristic = result.characteristic;
  var level = speclj.report.documentation.level_of.call(null, characteristic);
  cljs.core.println.call(null, speclj.reporting.green.call(null, speclj.reporting.indent.call(null, level - 1, "- ", characteristic.name)));
  return cljs.core.flush.call(null);
};
speclj.report.documentation.DocumentationReporter.prototype.speclj$reporting$Reporter$report_pending$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  var characteristic = result.characteristic;
  var level = speclj.report.documentation.level_of.call(null, characteristic);
  cljs.core.println.call(null, speclj.reporting.yellow.call(null, speclj.reporting.indent.call(null, level - 1, "- ", characteristic.name, " (PENDING: ", speclj.platform.error_message.call(null, result.exception), ")")));
  return cljs.core.flush.call(null);
};
speclj.report.documentation.DocumentationReporter.prototype.speclj$reporting$Reporter$report_fail$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  var characteristic = result.characteristic;
  var level = speclj.report.documentation.level_of.call(null, characteristic);
  cljs.core.println.call(null, speclj.reporting.red.call(null, speclj.reporting.indent.call(null, level - 1, "- ", characteristic.name, " (FAILED)")));
  return cljs.core.flush.call(null);
};
speclj.report.documentation.DocumentationReporter.prototype.speclj$reporting$Reporter$report_error$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.println.call(null, speclj.reporting.red.call(null, result.exception.toString()));
};
speclj.report.documentation.DocumentationReporter.prototype.speclj$reporting$Reporter$report_runs$arity$2 = function(this$, results) {
  var self__ = this;
  var this$__$1 = this;
  return speclj.report.progress.print_summary.call(null, results);
};
speclj.report.documentation.DocumentationReporter.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
speclj.report.documentation.DocumentationReporter.cljs$lang$type = true;
speclj.report.documentation.DocumentationReporter.cljs$lang$ctorStr = "speclj.report.documentation/DocumentationReporter";
speclj.report.documentation.DocumentationReporter.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.report.documentation/DocumentationReporter");
};
speclj.report.documentation.__GT_DocumentationReporter = function speclj$report$documentation$__GT_DocumentationReporter() {
  return new speclj.report.documentation.DocumentationReporter;
};
speclj.report.documentation.new_documentation_reporter = function speclj$report$documentation$new_documentation_reporter() {
  return new speclj.report.documentation.DocumentationReporter;
};
goog.provide("speclj.report.silent");
goog.require("cljs.core");
goog.require("speclj.reporting");
speclj.report.silent.SilentReporter = function(passes, fails, results) {
  this.passes = passes;
  this.fails = fails;
  this.results = results;
};
speclj.report.silent.SilentReporter.prototype.speclj$reporting$Reporter$ = true;
speclj.report.silent.SilentReporter.prototype.speclj$reporting$Reporter$report_message$arity$2 = function(this$, message) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
speclj.report.silent.SilentReporter.prototype.speclj$reporting$Reporter$report_description$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
speclj.report.silent.SilentReporter.prototype.speclj$reporting$Reporter$report_pass$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
speclj.report.silent.SilentReporter.prototype.speclj$reporting$Reporter$report_pending$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
speclj.report.silent.SilentReporter.prototype.speclj$reporting$Reporter$report_fail$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
speclj.report.silent.SilentReporter.prototype.speclj$reporting$Reporter$report_runs$arity$2 = function(this$, results__$1) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
speclj.report.silent.SilentReporter.prototype.speclj$reporting$Reporter$report_error$arity$2 = function(this$, exception) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
speclj.report.silent.SilentReporter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "passes", "passes", -501330314, null), new cljs.core.Symbol(null, "fails", "fails", 1758545447, null), new cljs.core.Symbol(null, "results", "results", 506361414, null)], null);
};
speclj.report.silent.SilentReporter.cljs$lang$type = true;
speclj.report.silent.SilentReporter.cljs$lang$ctorStr = "speclj.report.silent/SilentReporter";
speclj.report.silent.SilentReporter.cljs$lang$ctorPrWriter = function(this__4886__auto__, writer__4887__auto__, opt__4888__auto__) {
  return cljs.core._write.call(null, writer__4887__auto__, "speclj.report.silent/SilentReporter");
};
speclj.report.silent.__GT_SilentReporter = function speclj$report$silent$__GT_SilentReporter(passes, fails, results) {
  return new speclj.report.silent.SilentReporter(passes, fails, results);
};
speclj.report.silent.new_silent_reporter = function speclj$report$silent$new_silent_reporter() {
  return new speclj.report.silent.SilentReporter(cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null));
};
goog.provide("speclj.stub");
goog.require("cljs.core");
goog.require("speclj.platform");
speclj.stub.check_recording = function speclj$stub$check_recording() {
  if (cljs.core.truth_(speclj.stub._STAR_stubbed_invocations_STAR_)) {
    return null;
  } else {
    throw new Error("Stub recoding not bound.  Please add (with-stubs) to the decribe/context.");
  }
};
speclj.stub._record_invocation = function speclj$stub$_record_invocation(name, args) {
  speclj.stub.check_recording.call(null);
  var args__$1 = cljs.core._EQ_.call(null, null, args) ? cljs.core.PersistentVector.EMPTY : cljs.core.vec.call(null, args);
  return cljs.core.swap_BANG_.call(null, speclj.stub._STAR_stubbed_invocations_STAR_, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, args__$1], null));
};
speclj.stub.invoke_delegate = function speclj$stub$invoke_delegate(name, delegate, args) {
  return cljs.core.apply.call(null, delegate, args);
};
speclj.stub.stub = function speclj$stub$stub() {
  var G__13443 = arguments.length;
  switch(G__13443) {
    case 1:
      return speclj.stub.stub.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return speclj.stub.stub.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
speclj.stub.stub.cljs$core$IFn$_invoke$arity$1 = function(name) {
  return speclj.stub.stub.call(null, name, cljs.core.PersistentArrayMap.EMPTY);
};
speclj.stub.stub.cljs$core$IFn$_invoke$arity$2 = function(name, options) {
  var delegate = (new cljs.core.Keyword(null, "invoke", "invoke", 1145927159)).cljs$core$IFn$_invoke$arity$1(options);
  if (cljs.core.truth_(function() {
    var and__4295__auto__ = delegate;
    if (cljs.core.truth_(and__4295__auto__)) {
      return !cljs.core.ifn_QMARK_.call(null, delegate);
    } else {
      return and__4295__auto__;
    }
  }())) {
    throw new Error("stub's :invoke argument must be an ifn");
  } else {
  }
  return function(delegate) {
    return function() {
      var G__13445__delegate = function(args) {
        speclj.stub._record_invocation.call(null, name, args);
        var result = cljs.core.truth_(delegate) ? speclj.stub.invoke_delegate.call(null, name, delegate, args) : null;
        var temp__4425__auto___13446 = (new cljs.core.Keyword(null, "throw", "throw", -1044625833)).cljs$core$IFn$_invoke$arity$1(options);
        if (cljs.core.truth_(temp__4425__auto___13446)) {
          var throwable_13447 = temp__4425__auto___13446;
          throw throwable_13447;
        } else {
        }
        if (cljs.core.contains_QMARK_.call(null, options, new cljs.core.Keyword(null, "return", "return", -1891502105))) {
          return (new cljs.core.Keyword(null, "return", "return", -1891502105)).cljs$core$IFn$_invoke$arity$1(options);
        } else {
          return result;
        }
      };
      var G__13445 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__13448__i = 0, G__13448__a = new Array(arguments.length - 0);
          while (G__13448__i < G__13448__a.length) {
            G__13448__a[G__13448__i] = arguments[G__13448__i + 0];
            ++G__13448__i;
          }
          args = new cljs.core.IndexedSeq(G__13448__a, 0);
        }
        return G__13445__delegate.call(this, args);
      };
      G__13445.cljs$lang$maxFixedArity = 0;
      G__13445.cljs$lang$applyTo = function(arglist__13449) {
        var args = cljs.core.seq(arglist__13449);
        return G__13445__delegate(args);
      };
      G__13445.cljs$core$IFn$_invoke$arity$variadic = G__13445__delegate;
      return G__13445;
    }();
  }(delegate);
};
speclj.stub.stub.cljs$lang$maxFixedArity = 2;
speclj.stub.invocations_of = function speclj$stub$invocations_of(name) {
  return cljs.core.map.call(null, cljs.core.second, cljs.core.filter.call(null, function(p1__13450_SHARP_) {
    return cljs.core._EQ_.call(null, name, cljs.core.first.call(null, p1__13450_SHARP_));
  }, cljs.core.deref.call(null, speclj.stub._STAR_stubbed_invocations_STAR_)));
};
speclj.stub.first_invocation_of = function speclj$stub$first_invocation_of(name) {
  return cljs.core.first.call(null, speclj.stub.invocations_of.call(null, name));
};
speclj.stub.last_invocation_of = function speclj$stub$last_invocation_of(name) {
  return cljs.core.last.call(null, speclj.stub.invocations_of.call(null, name));
};
speclj.stub.params_match_QMARK_ = function speclj$stub$params_match_QMARK_(expected, actual) {
  return cljs.core.sequential_QMARK_.call(null, expected) && cljs.core.sequential_QMARK_.call(null, actual) && cljs.core._EQ_.call(null, cljs.core.count.call(null, expected), cljs.core.count.call(null, actual)) && cljs.core.every_QMARK_.call(null, cljs.core.true_QMARK_, cljs.core.map.call(null, function(e, a) {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "*", "*", -1294732318), e)) {
      return true;
    } else {
      if (cljs.core.fn_QMARK_.call(null, e)) {
        var or__4307__auto__ = cljs.core._EQ_.call(null, e, a);
        if (or__4307__auto__) {
          return or__4307__auto__;
        } else {
          return e.call(null, a);
        }
      } else {
        return cljs.core._EQ_.call(null, e, a);
      }
    }
  }, expected, actual));
};
goog.provide("clojure.data");
goog.require("cljs.core");
goog.require("clojure.set");
clojure.data.atom_diff = function clojure$data$atom_diff(a, b) {
  if (cljs.core._EQ_.call(null, a, b)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, a], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, null], null);
  }
};
clojure.data.vectorize = function clojure$data$vectorize(m) {
  if (cljs.core.seq.call(null, m)) {
    return cljs.core.reduce.call(null, function(result, p__13308) {
      var vec__13309 = p__13308;
      var k = cljs.core.nth.call(null, vec__13309, 0, null);
      var v = cljs.core.nth.call(null, vec__13309, 1, null);
      return cljs.core.assoc.call(null, result, k, v);
    }, cljs.core.vec.call(null, cljs.core.repeat.call(null, cljs.core.apply.call(null, cljs.core.max, cljs.core.keys.call(null, m)), null)), m);
  } else {
    return null;
  }
};
clojure.data.diff_associative_key = function clojure$data$diff_associative_key(a, b, k) {
  var va = cljs.core.get.call(null, a, k);
  var vb = cljs.core.get.call(null, b, k);
  var vec__13311 = clojure.data.diff.call(null, va, vb);
  var a_STAR_ = cljs.core.nth.call(null, vec__13311, 0, null);
  var b_STAR_ = cljs.core.nth.call(null, vec__13311, 1, null);
  var ab = cljs.core.nth.call(null, vec__13311, 2, null);
  var in_a = cljs.core.contains_QMARK_.call(null, a, k);
  var in_b = cljs.core.contains_QMARK_.call(null, b, k);
  var same = in_a && in_b && (!(ab == null) || va == null && vb == null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [in_a && (!(a_STAR_ == null) || !same) ? new cljs.core.PersistentArrayMap.fromArray([k, a_STAR_], true, false) : null, in_b && (!(b_STAR_ == null) || !same) ? new cljs.core.PersistentArrayMap.fromArray([k, b_STAR_], true, false) : null, same ? new cljs.core.PersistentArrayMap.fromArray([k, ab], true, false) : null], null);
};
clojure.data.diff_associative = function clojure$data$diff_associative() {
  var G__13313 = arguments.length;
  switch(G__13313) {
    case 2:
      return clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return clojure.data.diff_associative.call(null, a, b, clojure.set.union.call(null, cljs.core.keys.call(null, a), cljs.core.keys.call(null, b)));
};
clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$3 = function(a, b, ks) {
  return cljs.core.reduce.call(null, function(diff1, diff2) {
    return cljs.core.doall.call(null, cljs.core.map.call(null, cljs.core.merge, diff1, diff2));
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, null], null), cljs.core.map.call(null, cljs.core.partial.call(null, clojure.data.diff_associative_key, a, b), ks));
};
clojure.data.diff_associative.cljs$lang$maxFixedArity = 3;
clojure.data.diff_sequential = function clojure$data$diff_sequential(a, b) {
  return cljs.core.vec.call(null, cljs.core.map.call(null, clojure.data.vectorize, clojure.data.diff_associative.call(null, cljs.core.vector_QMARK_.call(null, a) ? a : cljs.core.vec.call(null, a), cljs.core.vector_QMARK_.call(null, b) ? b : cljs.core.vec.call(null, b), cljs.core.range.call(null, function() {
    var x__4619__auto__ = cljs.core.count.call(null, a);
    var y__4620__auto__ = cljs.core.count.call(null, b);
    return x__4619__auto__ > y__4620__auto__ ? x__4619__auto__ : y__4620__auto__;
  }()))));
};
clojure.data.diff_set = function clojure$data$diff_set(a, b) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.not_empty.call(null, clojure.set.difference.call(null, a, b)), cljs.core.not_empty.call(null, clojure.set.difference.call(null, b, a)), cljs.core.not_empty.call(null, clojure.set.intersection.call(null, a, b))], null);
};
clojure.data.EqualityPartition = function() {
  var obj13316 = {};
  return obj13316;
}();
clojure.data.equality_partition = function clojure$data$equality_partition(x) {
  if (function() {
    var and__4295__auto__ = x;
    if (and__4295__auto__) {
      return x.clojure$data$EqualityPartition$equality_partition$arity$1;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return x.clojure$data$EqualityPartition$equality_partition$arity$1(x);
  } else {
    var x__4943__auto__ = x == null ? null : x;
    return function() {
      var or__4307__auto__ = clojure.data.equality_partition[goog.typeOf(x__4943__auto__)];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = clojure.data.equality_partition["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "EqualityPartition.equality-partition", x);
        }
      }
    }().call(null, x);
  }
};
clojure.data.Diff = function() {
  var obj13318 = {};
  return obj13318;
}();
clojure.data.diff_similar = function clojure$data$diff_similar(a, b) {
  if (function() {
    var and__4295__auto__ = a;
    if (and__4295__auto__) {
      return a.clojure$data$Diff$diff_similar$arity$2;
    } else {
      return and__4295__auto__;
    }
  }()) {
    return a.clojure$data$Diff$diff_similar$arity$2(a, b);
  } else {
    var x__4943__auto__ = a == null ? null : a;
    return function() {
      var or__4307__auto__ = clojure.data.diff_similar[goog.typeOf(x__4943__auto__)];
      if (or__4307__auto__) {
        return or__4307__auto__;
      } else {
        var or__4307__auto____$1 = clojure.data.diff_similar["_"];
        if (or__4307__auto____$1) {
          return or__4307__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Diff.diff-similar", a);
        }
      }
    }().call(null, a, b);
  }
};
clojure.data.EqualityPartition["null"] = true;
clojure.data.equality_partition["null"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
};
clojure.data.EqualityPartition["string"] = true;
clojure.data.equality_partition["string"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
};
clojure.data.EqualityPartition["number"] = true;
clojure.data.equality_partition["number"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
};
clojure.data.EqualityPartition["array"] = true;
clojure.data.equality_partition["array"] = function(x) {
  return new cljs.core.Keyword(null, "sequential", "sequential", -1082983960);
};
clojure.data.EqualityPartition["function"] = true;
clojure.data.equality_partition["function"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
};
clojure.data.EqualityPartition["boolean"] = true;
clojure.data.equality_partition["boolean"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
};
clojure.data.EqualityPartition["_"] = true;
clojure.data.equality_partition["_"] = function(x) {
  if (function() {
    var G__13319 = x;
    if (G__13319) {
      var bit__4981__auto__ = G__13319.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4981__auto__ || G__13319.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__13319.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__13319);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__13319);
    }
  }()) {
    return new cljs.core.Keyword(null, "map", "map", 1371690461);
  } else {
    if (function() {
      var G__13320 = x;
      if (G__13320) {
        var bit__4981__auto__ = G__13320.cljs$lang$protocol_mask$partition0$ & 4096;
        if (bit__4981__auto__ || G__13320.cljs$core$ISet$) {
          return true;
        } else {
          if (!G__13320.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__13320);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__13320);
      }
    }()) {
      return new cljs.core.Keyword(null, "set", "set", 304602554);
    } else {
      if (function() {
        var G__13321 = x;
        if (G__13321) {
          var bit__4981__auto__ = G__13321.cljs$lang$protocol_mask$partition0$ & 16777216;
          if (bit__4981__auto__ || G__13321.cljs$core$ISequential$) {
            return true;
          } else {
            if (!G__13321.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__13321);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__13321);
        }
      }()) {
        return new cljs.core.Keyword(null, "sequential", "sequential", -1082983960);
      } else {
        return new cljs.core.Keyword(null, "atom", "atom", -397043653);
      }
    }
  }
};
clojure.data.Diff["null"] = true;
clojure.data.diff_similar["null"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
};
clojure.data.Diff["string"] = true;
clojure.data.diff_similar["string"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
};
clojure.data.Diff["number"] = true;
clojure.data.diff_similar["number"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
};
clojure.data.Diff["array"] = true;
clojure.data.diff_similar["array"] = function(a, b) {
  return clojure.data.diff_sequential.call(null, a, b);
};
clojure.data.Diff["function"] = true;
clojure.data.diff_similar["function"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
};
clojure.data.Diff["boolean"] = true;
clojure.data.diff_similar["boolean"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
};
clojure.data.Diff["_"] = true;
clojure.data.diff_similar["_"] = function(a, b) {
  return function() {
    var G__13322 = clojure.data.equality_partition.call(null, a) instanceof cljs.core.Keyword ? clojure.data.equality_partition.call(null, a).fqn : null;
    switch(G__13322) {
      case "atom":
        return clojure.data.atom_diff;
        break;
      case "set":
        return clojure.data.diff_set;
        break;
      case "sequential":
        return clojure.data.diff_sequential;
        break;
      case "map":
        return clojure.data.diff_associative;
        break;
      default:
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(clojure.data.equality_partition.call(null, a))].join(""));;
    }
  }().call(null, a, b);
};
clojure.data.diff = function clojure$data$diff(a, b) {
  if (cljs.core._EQ_.call(null, a, b)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, a], null);
  } else {
    if (cljs.core._EQ_.call(null, clojure.data.equality_partition.call(null, a), clojure.data.equality_partition.call(null, b))) {
      return clojure.data.diff_similar.call(null, a, b);
    } else {
      return clojure.data.atom_diff.call(null, a, b);
    }
  }
};
goog.provide("speclj.core");
goog.require("cljs.core");
goog.require("speclj.run.standard");
goog.require("speclj.platform");
goog.require("speclj.config");
goog.require("speclj.report.documentation");
goog.require("speclj.tags");
goog.require("speclj.results");
goog.require("speclj.report.progress");
goog.require("speclj.reporting");
goog.require("speclj.report.silent");
goog.require("speclj.stub");
goog.require("speclj.components");
goog.require("clojure.data");
goog.require("speclj.running");
goog.provide("warm_places.core_spec");
goog.require("cljs.core");
goog.require("speclj.core");
goog.require("warm_places.core");
var description__7468__auto___7810 = speclj.components.new_description.call(null, "A ClojureScript test", "warm_places.core-spec");
var _STAR_parent_description_STAR_7805_7811 = speclj.config._STAR_parent_description_STAR_;
speclj.config._STAR_parent_description_STAR_ = description__7468__auto___7810;
try {
  var seq__7806_7812 = cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [speclj.components.new_characteristic.call(null, "One equals one", function(_STAR_parent_description_STAR_7805_7811, description__7468__auto___7810) {
    return function() {
      var expected__7553__auto__ = 1;
      var actual__7554__auto__ = 1;
      if (cljs.core._EQ_.call(null, expected__7553__auto__, actual__7554__auto__)) {
        return null;
      } else {
        throw new speclj.platform.SpecFailure([cljs.core.str("Expected: "), cljs.core.str(expected__7553__auto__ == null ? "nil" : cljs.core.pr_str.call(null, expected__7553__auto__)), cljs.core.str(speclj.platform.endl), cljs.core.str("     got: "), cljs.core.str(actual__7554__auto__ == null ? "nil" : cljs.core.pr_str.call(null, actual__7554__auto__)), cljs.core.str(" (using \x3d)")].join(""));
      }
    };
  }(_STAR_parent_description_STAR_7805_7811, description__7468__auto___7810))], null));
  var chunk__7807_7813 = null;
  var count__7808_7814 = 0;
  var i__7809_7815 = 0;
  while (true) {
    if (i__7809_7815 < count__7808_7814) {
      var component__7469__auto___7816 = cljs.core._nth.call(null, chunk__7807_7813, i__7809_7815);
      speclj.components.install.call(null, component__7469__auto___7816, description__7468__auto___7810);
      var G__7817 = seq__7806_7812;
      var G__7818 = chunk__7807_7813;
      var G__7819 = count__7808_7814;
      var G__7820 = i__7809_7815 + 1;
      seq__7806_7812 = G__7817;
      chunk__7807_7813 = G__7818;
      count__7808_7814 = G__7819;
      i__7809_7815 = G__7820;
      continue;
    } else {
      var temp__4425__auto___7821 = cljs.core.seq.call(null, seq__7806_7812);
      if (temp__4425__auto___7821) {
        var seq__7806_7822__$1 = temp__4425__auto___7821;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__7806_7822__$1)) {
          var c__5092__auto___7823 = cljs.core.chunk_first.call(null, seq__7806_7822__$1);
          var G__7824 = cljs.core.chunk_rest.call(null, seq__7806_7822__$1);
          var G__7825 = c__5092__auto___7823;
          var G__7826 = cljs.core.count.call(null, c__5092__auto___7823);
          var G__7827 = 0;
          seq__7806_7812 = G__7824;
          chunk__7807_7813 = G__7825;
          count__7808_7814 = G__7826;
          i__7809_7815 = G__7827;
          continue;
        } else {
          var component__7469__auto___7828 = cljs.core.first.call(null, seq__7806_7822__$1);
          speclj.components.install.call(null, component__7469__auto___7828, description__7468__auto___7810);
          var G__7829 = cljs.core.next.call(null, seq__7806_7822__$1);
          var G__7830 = null;
          var G__7831 = 0;
          var G__7832 = 0;
          seq__7806_7812 = G__7829;
          chunk__7807_7813 = G__7830;
          count__7808_7814 = G__7831;
          i__7809_7815 = G__7832;
          continue;
        }
      } else {
      }
    }
    break;
  }
} finally {
  speclj.config._STAR_parent_description_STAR_ = _STAR_parent_description_STAR_7805_7811;
}
if (cljs.core.truth_(speclj.config._STAR_parent_description_STAR_)) {
} else {
  speclj.running.submit_description.call(null, speclj.config.active_runner.call(null), description__7468__auto___7810);
}
var description__7468__auto___7838 = speclj.components.new_description.call(null, "Counts average", "warm_places.core-spec");
var _STAR_parent_description_STAR_7833_7839 = speclj.config._STAR_parent_description_STAR_;
speclj.config._STAR_parent_description_STAR_ = description__7468__auto___7838;
try {
  var seq__7834_7840 = cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [speclj.components.new_characteristic.call(null, "returns average", function(_STAR_parent_description_STAR_7833_7839, description__7468__auto___7838) {
    return function() {
      var expected__7553__auto__ = 15;
      var actual__7554__auto__ = warm_places.core.average.call(null, 20, 10);
      if (cljs.core._EQ_.call(null, expected__7553__auto__, actual__7554__auto__)) {
        return null;
      } else {
        throw new speclj.platform.SpecFailure([cljs.core.str("Expected: "), cljs.core.str(expected__7553__auto__ == null ? "nil" : cljs.core.pr_str.call(null, expected__7553__auto__)), cljs.core.str(speclj.platform.endl), cljs.core.str("     got: "), cljs.core.str(actual__7554__auto__ == null ? "nil" : cljs.core.pr_str.call(null, actual__7554__auto__)), cljs.core.str(" (using \x3d)")].join(""));
      }
    };
  }(_STAR_parent_description_STAR_7833_7839, description__7468__auto___7838))], null));
  var chunk__7835_7841 = null;
  var count__7836_7842 = 0;
  var i__7837_7843 = 0;
  while (true) {
    if (i__7837_7843 < count__7836_7842) {
      var component__7469__auto___7844 = cljs.core._nth.call(null, chunk__7835_7841, i__7837_7843);
      speclj.components.install.call(null, component__7469__auto___7844, description__7468__auto___7838);
      var G__7845 = seq__7834_7840;
      var G__7846 = chunk__7835_7841;
      var G__7847 = count__7836_7842;
      var G__7848 = i__7837_7843 + 1;
      seq__7834_7840 = G__7845;
      chunk__7835_7841 = G__7846;
      count__7836_7842 = G__7847;
      i__7837_7843 = G__7848;
      continue;
    } else {
      var temp__4425__auto___7849 = cljs.core.seq.call(null, seq__7834_7840);
      if (temp__4425__auto___7849) {
        var seq__7834_7850__$1 = temp__4425__auto___7849;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__7834_7850__$1)) {
          var c__5092__auto___7851 = cljs.core.chunk_first.call(null, seq__7834_7850__$1);
          var G__7852 = cljs.core.chunk_rest.call(null, seq__7834_7850__$1);
          var G__7853 = c__5092__auto___7851;
          var G__7854 = cljs.core.count.call(null, c__5092__auto___7851);
          var G__7855 = 0;
          seq__7834_7840 = G__7852;
          chunk__7835_7841 = G__7853;
          count__7836_7842 = G__7854;
          i__7837_7843 = G__7855;
          continue;
        } else {
          var component__7469__auto___7856 = cljs.core.first.call(null, seq__7834_7850__$1);
          speclj.components.install.call(null, component__7469__auto___7856, description__7468__auto___7838);
          var G__7857 = cljs.core.next.call(null, seq__7834_7850__$1);
          var G__7858 = null;
          var G__7859 = 0;
          var G__7860 = 0;
          seq__7834_7840 = G__7857;
          chunk__7835_7841 = G__7858;
          count__7836_7842 = G__7859;
          i__7837_7843 = G__7860;
          continue;
        }
      } else {
      }
    }
    break;
  }
} finally {
  speclj.config._STAR_parent_description_STAR_ = _STAR_parent_description_STAR_7833_7839;
}
if (cljs.core.truth_(speclj.config._STAR_parent_description_STAR_)) {
} else {
  speclj.running.submit_description.call(null, speclj.config.active_runner.call(null), description__7468__auto___7838);
}
;